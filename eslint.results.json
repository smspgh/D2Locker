[{"filePath":"C:\\coding_projects\\D2Locker\\auto-install-missing-deps.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\babel.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\backend\\cs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\backend\\insert-api-key.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\backend\\server.js","messages":[{"ruleId":"no-unused-vars","severity":2,"message":"'_e' is defined but never used.","line":82,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":82,"endColumn":14},{"ruleId":"no-unused-vars","severity":2,"message":"'_e' is defined but never used.","line":87,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":87,"endColumn":14},{"ruleId":"no-unused-vars","severity":2,"message":"'_migrationError' is defined but never used.","line":104,"column":12,"nodeType":"Identifier","messageId":"unusedVar","endLine":104,"endColumn":27},{"ruleId":"no-unused-vars","severity":2,"message":"'_profileKey' is assigned a value but never used.","line":532,"column":9,"nodeType":"Identifier","messageId":"unusedVar","endLine":532,"endColumn":20}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Database from 'better-sqlite3';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport crypto from 'crypto';\nimport express from 'express';\nimport expressStaticGzip from 'express-static-gzip';\nimport fs from 'fs';\nimport https from 'https';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\nconst app = express();\nconst PORT = 8443; // Standard HTTPS port\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\n// Configure CORS\napp.use(\n  cors({\n    origin: [\n      'https://shirezaks.com',\n      'https://shirezaks.com',\n      'https://shirezaks.com:8443',\n      'https://localhost:8443',\n      'https://localhost:443',\n      'https://localhost',\n    ],\n    methods: ['GET', 'POST', 'PUT', 'DELETE'],\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-API-Key', 'X-D2L-Version'],\n  }),\n);\n\n// Middleware to parse JSON bodies\napp.use(bodyParser.json());\n\n// Load SSL certificates\nlet privateKey, certificate, credentials;\n\ntry {\n  privateKey = fs.readFileSync(path.join(__dirname, '..', 'certs', 'shirezaks_com.key'), 'utf8');\n  certificate = fs.readFileSync(path.join(__dirname, '..', 'certs', 'shirezaks_com.pem'), 'utf8');\n  credentials = { key: privateKey, cert: certificate };\n  console.log('SSL certificates loaded');\n} catch (error) {\n  console.error('Error loading SSL certificates:', error.message);\n  throw new Error('SSL certificates are required. Please place certificates in /certs directory');\n}\n\n// Initialize SQLite Database\nlet db;\ntry {\n  db = new Database('d2l.db');\n  // Create tables if they don't exist\n  db.exec(`\n    CREATE TABLE IF NOT EXISTS users (\n      membershipId TEXT PRIMARY KEY,\n      destinyVersion INTEGER,\n      settings TEXT,\n      loadouts TEXT,\n      tags TEXT,\n      searches TEXT,\n      lastModified INTEGER DEFAULT (strftime('%s', 'now')),\n      syncToken TEXT\n    );\n    CREATE TABLE IF NOT EXISTS api_keys (\n      apiKey TEXT PRIMARY KEY,\n      appName TEXT NOT NULL,\n      createdAt INTEGER NOT NULL\n    );\n    CREATE TABLE IF NOT EXISTS loadout_shares (\n      shareId TEXT PRIMARY KEY,\n      platformMembershipId TEXT NOT NULL,\n      loadout TEXT NOT NULL,\n      createdAt INTEGER NOT NULL,\n      expiresAt INTEGER\n    );\n  `);\n\n  // Add new columns if they don't exist (migration)\n  try {\n    db.exec(`ALTER TABLE users ADD COLUMN lastModified INTEGER DEFAULT (strftime('%s', 'now'))`);\n  } catch (_e) {\n    // Column already exists, ignore\n  }\n  try {\n    db.exec(`ALTER TABLE users ADD COLUMN syncToken TEXT`);\n  } catch (_e) {\n    // Column already exists, ignore\n  }\n\n  // Update existing records that don't have lastModified timestamps\n  try {\n    const existingUsers = db.prepare('SELECT * FROM users WHERE lastModified IS NULL').all();\n    if (existingUsers.length > 0) {\n      const updateExistingRecords = db.prepare(`\n        UPDATE users\n        SET lastModified = ?\n        WHERE lastModified IS NULL\n      `);\n      const currentTime = Date.now();\n      updateExistingRecords.run(currentTime);\n      console.log(`Updated ${existingUsers.length} existing records with lastModified timestamps`);\n    }\n  } catch (_migrationError) {\n    // If the migration fails, it's likely because the columns don't exist yet\n    console.log('Migration skipped - likely new database');\n  }\n\n  // Migrate existing search data to include tracking fields\n  try {\n    const existingUsers = db\n      .prepare('SELECT membershipId, destinyVersion, searches FROM users')\n      .all();\n    let migratedCount = 0;\n\n    for (const user of existingUsers) {\n      try {\n        const searchesArray = JSON.parse(user.searches || '[]');\n        let needsUpdate = false;\n\n        const migratedSearches = searchesArray.map((search) => {\n          if (search && search.query && search.type !== undefined && (\n              search.usageCount === undefined ||\n              search.lastUsage === undefined ||\n              search.saved === undefined\n            )) {\n              needsUpdate = true;\n              return {\n                query: search.query,\n                type: search.type,\n                usageCount: search.usageCount || 0,\n                lastUsage: search.lastUsage || 0,\n                saved: search.saved || false,\n              };\n          }\n          return search;\n        });\n\n        if (needsUpdate) {\n          const updateSearches = db.prepare(\n            'UPDATE users SET searches = ? WHERE membershipId = ? AND destinyVersion = ?',\n          );\n          updateSearches.run(\n            JSON.stringify(migratedSearches),\n            user.membershipId,\n            user.destinyVersion,\n          );\n          migratedCount++;\n        }\n      } catch (parseError) {\n        console.warn(\n          `Failed to migrate search data for user ${user.membershipId}-${user.destinyVersion}:`,\n          parseError.message,\n        );\n      }\n    }\n\n    if (migratedCount > 0) {\n      console.log(`Migrated search data for ${migratedCount} users to include tracking fields`);\n    }\n  } catch (migrationError) {\n    console.warn('Search data migration failed:', migrationError.message);\n  }\n} catch (error) {\n  console.error('Error initializing database:', error.message);\n  throw new Error('Error initializing database');\n}\n\n// Application-level API Key Validation Middleware\n/**\n * @param {import('express').Request} req\n * @param {import('express').Response} res\n * @param {import('express').NextFunction} next\n */\nfunction validateApiKey(req, res, next) {\n  const apiKey = req.headers['x-api-key'];\n  if (!apiKey) {\n    return res.status(401).json({ error: 'Unauthorized', message: 'X-API-Key header missing' });\n  }\n\n  const apiKeyRecord = db.prepare('SELECT * FROM api_keys WHERE apiKey = ?').get(apiKey);\n  if (!apiKeyRecord) {\n    return res.status(401).json({ error: 'Unauthorized', message: 'Invalid X-API-Key' });\n  }\n  // @ts-expect-error - req.appKey is not defined in Express Request type\n  req.appKey = apiKey; // Attach app key to request\n  next();\n}\n\n// Removed User-level Authentication Middleware (validateUserAuth)\n\n// Removed generateSyncToken function - now using lastModified timestamps\n\n// Helper to get user data - now expects membershipId and destinyVersion directly\n/**\n * @param {string} membershipId\n * @param {number} destinyVersion\n */\nfunction getUserData(membershipId, destinyVersion) {\n  const targetMembershipId = membershipId;\n  const targetDestinyVersion = destinyVersion;\n\n  const stmt = db.prepare('SELECT * FROM users WHERE membershipId = ? AND destinyVersion = ?');\n  let data = stmt.get(targetMembershipId, targetDestinyVersion);\n\n  if (!data) {\n    // Initialize with empty data if not found\n    const currentTime = Date.now();\n    data = {\n      membershipId: targetMembershipId,\n      destinyVersion: targetDestinyVersion,\n      settings: JSON.stringify({}),\n      loadouts: JSON.stringify([]),\n      tags: JSON.stringify({}),\n      searches: JSON.stringify([]),\n      lastModified: currentTime,\n      syncToken: null, // Will be removed from database schema\n    };\n    const insertStmt = db.prepare(\n      'INSERT INTO users (membershipId, destinyVersion, settings, loadouts, tags, searches, lastModified) VALUES (?, ?, ?, ?, ?, ?, ?)',\n    );\n    insertStmt.run(\n      data.membershipId,\n      data.destinyVersion,\n      data.settings,\n      data.loadouts,\n      data.tags,\n      data.searches,\n      data.lastModified,\n    );\n  }\n\n  // Parse the raw data\n  const settings = JSON.parse(data.settings);\n  const loadoutsArray = JSON.parse(data.loadouts);\n  const tags = JSON.parse(data.tags);\n  const searchesArray = JSON.parse(data.searches);\n\n  // Convert loadouts from array to object keyed by loadout ID\n  const loadoutsObject = {};\n  if (Array.isArray(loadoutsArray)) {\n    for (const loadout of loadoutsArray) {\n      if (loadout && loadout.id) {\n        loadoutsObject[loadout.id] = loadout;\n      }\n    }\n  }\n\n  // Convert searches from array to object keyed by destinyVersion\n  const searchesObject = {\n    1: [], // Destiny 1\n    2: [], // Destiny 2\n  };\n  if (Array.isArray(searchesArray)) {\n    for (const search of searchesArray) {\n      if (search && search.type) {\n        const destinyVersion = search.type.toString();\n        if (searchesObject[destinyVersion]) {\n          // Migrate old search data to include tracking fields if missing\n          const migratedSearch = {\n            query: search.query,\n            type: search.type,\n            usageCount: search.usageCount || 0,\n            lastUsage: search.lastUsage || 0,\n            saved: search.saved || false,\n          };\n          searchesObject[destinyVersion].push(migratedSearch);\n        }\n      }\n    }\n  }\n\n  const parsedData = {\n    membershipId: data.membershipId,\n    destinyVersion: data.destinyVersion,\n    settings: settings,\n    loadouts: loadoutsObject,\n    tags: tags,\n    searches: searchesObject,\n    lastModified: data.lastModified,\n  };\n  return parsedData;\n}\n\n// Helper to update user data - now expects membershipId and destinyVersion directly\n/**\n * @param {string} membershipId\n * @param {number} destinyVersion\n * @param {any[]} updates\n */\nfunction updateUserData(membershipId, destinyVersion, updates) {\n  const existingData = getUserData(membershipId, destinyVersion); // Get existing data using the resolved membershipId\n  const updatedData = { ...existingData };\n\n  for (const update of updates) {\n    switch (update.action) {\n      case 'setting':\n        updatedData.settings = { ...updatedData.settings, ...update.payload };\n        break;\n      case 'loadout':\n        // updatedData.loadouts is now an object, not an array\n        if (update.payload && update.payload.id) {\n          updatedData.loadouts[update.payload.id] = update.payload;\n        }\n        break;\n      case 'delete_loadout':\n        // updatedData.loadouts is now an object, not an array\n        // For delete_loadout, payload is the loadout ID directly (not an object with id property)\n        if (update.payload) {\n          delete updatedData.loadouts[update.payload];\n        }\n        break;\n      case 'tag':\n        // Store both tag and notes for each item\n        updatedData.tags[update.payload.id] = {\n          tag: update.payload.tag || undefined,\n          notes: update.payload.notes || undefined,\n          craftedDate: update.payload.craftedDate || undefined,\n        };\n        // Remove the entry if both tag and notes are null/undefined\n        if (!update.payload.tag && !update.payload.notes) {\n          delete updatedData.tags[update.payload.id];\n        }\n        break;\n      case 'search':\n        // updatedData.searches is now an object with destinyVersion keys, not an array\n        if (update.payload && update.payload.type) {\n          const destinyVersion = update.payload.type.toString();\n          if (!updatedData.searches[destinyVersion]) {\n            updatedData.searches[destinyVersion] = [];\n          }\n          // Find existing search and update or add new one\n          const searchArray = updatedData.searches[destinyVersion];\n          const searchIndex = searchArray.findIndex(\n            (s) => s.query === update.payload.query && s.type === update.payload.type,\n          );\n          const currentTime = Date.now();\n\n          if (searchIndex !== -1) {\n            // Update existing search - increment usage count and update timestamp\n            const existingSearch = searchArray[searchIndex];\n            searchArray[searchIndex] = {\n              query: update.payload.query,\n              type: update.payload.type,\n              usageCount: (existingSearch.usageCount || 0) + 1,\n              lastUsage: currentTime,\n              saved: existingSearch.saved || false,\n            };\n          } else {\n            // Add new search with initial tracking data\n            searchArray.push({\n              query: update.payload.query,\n              type: update.payload.type,\n              usageCount: 1,\n              lastUsage: currentTime,\n              saved: false,\n            });\n          }\n        }\n        break;\n      case 'delete_search':\n        // updatedData.searches is now an object with destinyVersion keys, not an array\n        if (update.payload && update.payload.type) {\n          const destinyVersion = update.payload.type.toString();\n          if (updatedData.searches[destinyVersion]) {\n            updatedData.searches[destinyVersion] = updatedData.searches[destinyVersion].filter(\n              (s) => !(s.query === update.payload.query && s.type === update.payload.type),\n            );\n          }\n        }\n        break;\n      case 'save_search':\n        // Handle saving/starring searches\n        if (update.payload && update.payload.type) {\n          const destinyVersion = update.payload.type.toString();\n          if (!updatedData.searches[destinyVersion]) {\n            updatedData.searches[destinyVersion] = [];\n          }\n          const searchArray = updatedData.searches[destinyVersion];\n          const searchIndex = searchArray.findIndex(\n            (s) => s.query === update.payload.query && s.type === update.payload.type,\n          );\n          const currentTime = Date.now();\n\n          if (searchIndex !== -1) {\n            // Update existing search's saved status\n            const existingSearch = searchArray[searchIndex];\n            searchArray[searchIndex] = {\n              ...existingSearch,\n              saved: update.payload.saved,\n            };\n          } else {\n            // Create new search if it doesn't exist (for save_search without prior search action)\n            searchArray.push({\n              query: update.payload.query,\n              type: update.payload.type,\n              usageCount: 1,\n              lastUsage: currentTime,\n              saved: update.payload.saved,\n            });\n          }\n        }\n        break;\n      // Add other update actions as needed\n    }\n  }\n\n  // Convert data back to database format before storing\n  // Convert loadouts object back to array for database storage\n  const loadoutsArray = Object.values(updatedData.loadouts);\n\n  // Convert searches object back to array for database storage\n  const searchesArray = [];\n  for (const [destinyVersion, searches] of Object.entries(updatedData.searches)) {\n    if (Array.isArray(searches)) {\n      for (const search of searches) {\n        searchesArray.push({\n          ...search,\n          type: parseInt(destinyVersion, 10),\n        });\n      }\n    }\n  }\n\n  // Update lastModified timestamp\n  const currentTime = Date.now();\n\n  const stmt = db.prepare(`\n    UPDATE users SET\n      settings = ?,\n      loadouts = ?,\n      tags = ?,\n      searches = ?,\n      lastModified = ?\n    WHERE membershipId = ? AND destinyVersion = ?\n  `);\n  stmt.run(\n    JSON.stringify(updatedData.settings),\n    JSON.stringify(loadoutsArray),\n    JSON.stringify(updatedData.tags),\n    JSON.stringify(searchesArray),\n    currentTime,\n    existingData.membershipId, // Use existingData's ID and version\n    existingData.destinyVersion,\n  );\n\n  updatedData.lastModified = currentTime;\n  return updatedData;\n}\n\n// Simple test route\napp.get('/', (_req, res) => {\n  res.send('D2L API Backend is running!');\n});\n\n// Removed /new_app endpoint\n\nconst apiRouter = express.Router();\n\n// Use /api prefix for all API routes\napp.use('/api', apiRouter);\n\n// Serve static files with compression support\napp.use(\n  '/backend/light',\n  expressStaticGzip(path.join(__dirname, 'light'), {\n    enableBrotli: true,\n    orderPreference: ['br'],\n    customCompressions: [\n      {\n        encodingName: 'br',\n        fileExtension: 'br',\n      },\n    ],\n    setHeaders: (res, reqPath) => {\n      // Set cache headers for the large JSON file\n      if (reqPath.includes('rollAppraiserData.json')) {\n        res.setHeader('Cache-Control', 'public, max-age=86400'); // 24 hours\n        console.log(\n          `📦 Serving ${reqPath} - Content-Encoding: ${res.getHeader('Content-Encoding') || 'none'}`,\n        );\n      }\n    },\n  }),\n);\n\n// Mock endpoint for /platform_info - does not require authentication\napiRouter.get('/platform_info', (_req, res) => {\n  res.json({\n    settings: {\n      d2lApiEnabled: true,\n      d2lProfileMinimumRefreshInterval: 60, // 60 seconds\n      // Add other global settings as needed\n    },\n  });\n});\n\n// Basic endpoint for /auth/token - requires application-level API key\napiRouter.post('/auth/token', validateApiKey, (_req, res) => {\n  // Mock response for a successful token request\n  res.json({\n    accessToken: 'mock_access_token_12345',\n    expiresInSeconds: 3600, // 1 hour\n    inception: Date.now(),\n  });\n});\n\n// Persistent endpoint for /profile (GET) - requires application-level API key\napiRouter.get('/profile', validateApiKey, (req, res) => {\n  const { platformMembershipId, destinyVersion, components, lastModified } = req.query;\n\n  if (!platformMembershipId || !destinyVersion) {\n    return res\n      .status(400)\n      .json({ error: 'Bad Request', message: 'Missing membershipId or destinyVersion' });\n  }\n\n  const userData = getUserData(String(platformMembershipId), parseInt(String(destinyVersion), 10));\n\n  // Check if client's lastModified is up to date\n  const clientLastModified = lastModified ? parseInt(String(lastModified), 10) : 0;\n  if (clientLastModified >= userData.lastModified) {\n    // Data hasn't changed, return minimal response\n    return res.json({\n      profile: {},\n      syncToken: userData.lastModified, // Keep for frontend compatibility\n      lastModified: userData.lastModified,\n    });\n  }\n\n  // Create the profile structure that matches IndexedDB format\n  const _profileKey = `${userData.membershipId}-d${userData.destinyVersion}`;\n\n  // Convert loadouts object to array for ProfileResponse format\n  const loadoutsArray = Object.values(userData.loadouts);\n  const tagsArray = Object.values(userData.tags);\n\n  // Convert searches object to array for ProfileResponse format\n  const searchesArray = [];\n  for (const [destinyVersion, searches] of Object.entries(userData.searches)) {\n    if (Array.isArray(searches)) {\n      for (const search of searches) {\n        searchesArray.push({\n          ...search,\n          type: parseInt(destinyVersion, 10),\n        });\n      }\n    }\n  }\n\n  const profileResponse = {\n    settings: userData.settings,\n    loadouts: loadoutsArray,\n    tags: tagsArray,\n    searches: searchesArray,\n    syncToken: userData.lastModified, // Keep for frontend compatibility\n    lastModified: userData.lastModified,\n  };\n\n  // Filter components if requested\n  if (components) {\n    const componentsArray = String(components).split(',');\n    const filteredResponse = {\n      syncToken: profileResponse.syncToken,\n      lastModified: profileResponse.lastModified,\n    };\n\n    if (componentsArray.includes('settings')) {\n      filteredResponse.settings = profileResponse.settings;\n    }\n    if (componentsArray.includes('loadouts')) {\n      filteredResponse.loadouts = profileResponse.loadouts;\n    }\n    if (componentsArray.includes('tags')) {\n      filteredResponse.tags = profileResponse.tags;\n    }\n    if (componentsArray.includes('searches')) {\n      filteredResponse.searches = profileResponse.searches;\n    }\n\n    return res.json(filteredResponse);\n  }\n\n  res.json(profileResponse);\n});\n\n// Persistent endpoint for /profile (POST) - used for updates - requires application-level API key\napiRouter.post('/profile', validateApiKey, (req, res) => {\n  const { platformMembershipId, destinyVersion, updates } = req.body;\n\n  // Validate that updates array is always present\n  if (!updates || !Array.isArray(updates)) {\n    return res\n      .status(400)\n      .json({ error: 'Bad Request', message: 'Missing or invalid updates array' });\n  }\n\n  // Use membershipId and destinyVersion from request body\n  const targetMembershipId = platformMembershipId;\n  const targetDestinyVersion = destinyVersion ? parseInt(destinyVersion, 10) : 0;\n\n  updateUserData(targetMembershipId, targetDestinyVersion, updates);\n\n  // Refined mock response for updates\n  const results = updates.map(() => ({\n    status: 'Success', // Simplified status as per user's expected response\n  }));\n\n  res.json({ results });\n});\n\n// Basic mock endpoint for /delete_all_data - requires application-level API key\napiRouter.post('/delete_all_data', validateApiKey, (req, res) => {\n  const { platformMembershipId, destinyVersion } = req.body; // Assuming these are sent for deletion\n\n  // Use membershipId and destinyVersion from request body\n  const targetMembershipId = platformMembershipId;\n  const targetDestinyVersion = destinyVersion ? parseInt(destinyVersion, 10) : 0;\n\n  if (targetMembershipId && targetDestinyVersion) {\n    const stmt = db.prepare('DELETE FROM users WHERE membershipId = ? AND destinyVersion = ?');\n    stmt.run(targetMembershipId, targetDestinyVersion);\n    res.json({ deleted: 0 }); // Always return 0 for now\n  } else {\n    // If no specific user, maybe delete all? Or return 0.\n    res.json({ deleted: 0 });\n  }\n});\n\n// Loadout share endpoint - POST /loadout_share\napiRouter.post('/loadout_share', validateApiKey, (req, res) => {\n  const { platformMembershipId, loadout } = req.body;\n\n  if (!platformMembershipId || !loadout) {\n    return res\n      .status(400)\n      .json({ error: 'Bad Request', message: 'Missing platformMembershipId or loadout' });\n  }\n\n  // Generate a unique share ID\n  const shareId = crypto.randomBytes(8).toString('hex');\n  const createdAt = Date.now();\n  const expiresAt = createdAt + 30 * 24 * 60 * 60 * 1000; // 30 days from now\n\n  try {\n    const stmt = db.prepare(`\n      INSERT INTO loadout_shares (shareId, platformMembershipId, loadout, createdAt, expiresAt)\n      VALUES (?, ?, ?, ?, ?)\n    `);\n    stmt.run(shareId, platformMembershipId, JSON.stringify(loadout), createdAt, expiresAt);\n\n    // Return the share URL\n    const shareUrl = `https://shirezaks.com/loadout/${shareId}`;\n    res.json({ shareUrl });\n  } catch (error) {\n    console.error('Error creating loadout share:', error);\n    res\n      .status(500)\n      .json({ error: 'Internal Server Error', message: 'Failed to create loadout share' });\n  }\n});\n\n// Get shared loadout - GET /loadout_share?shareId={shareId}\napiRouter.get('/loadout_share', (req, res) => {\n  const { shareId } = req.query;\n\n  if (!shareId) {\n    return res.status(400).json({ error: 'Bad Request', message: 'Missing shareId' });\n  }\n\n  try {\n    const stmt = db.prepare(`\n      SELECT * FROM loadout_shares\n      WHERE shareId = ? AND (expiresAt IS NULL OR expiresAt > ?)\n    `);\n    const share = stmt.get(shareId, Date.now());\n\n    if (!share) {\n      return res\n        .status(404)\n        .json({ error: 'Not Found', message: 'Loadout share not found or expired' });\n    }\n\n    const loadout = JSON.parse(share.loadout);\n    res.json({\n      loadout,\n    });\n  } catch (error) {\n    console.error('Error retrieving loadout share:', error);\n    res\n      .status(500)\n      .json({ error: 'Internal Server Error', message: 'Failed to retrieve loadout share' });\n  }\n});\n\n// Create and start HTTPS server\nconst httpsServer = https.createServer(credentials, app);\nhttpsServer.listen(PORT, () => {\n  console.log(`HTTPS Server running on port ${PORT}`);\n});\n","usedDeprecatedRules":[{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\compare-files.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\config\\content-security-policy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\config\\feature-flags.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\config\\manifest-webapp.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\config\\notify-webpack-plugin.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":26,"column":26,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":26,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .cyan on an `error` typed value.","line":26,"column":43,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":26,"endColumn":47},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `error` type typed value.","line":35,"column":24,"nodeType":"MemberExpression","messageId":"unsafeCall","endLine":35,"endColumn":46},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .green on an `error` typed value.","line":35,"column":41,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":35,"endColumn":46}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Originally from https://github.com/joshhunt/notify-webpack-plugin/, converted to TypeScript\n\nimport { Compiler, Stats } from 'webpack';\n\nimport chalk, { type Chalk } from 'chalk';\n\nexport default class NotifyPlugin {\n  name: string;\n  firstRun: boolean;\n  hideChildren: boolean;\n\n  constructor(name: string, isProd?: boolean) {\n    this.name = name;\n    this.firstRun = true;\n    this.hideChildren = !isProd;\n  }\n\n  apply(compiler: Compiler) {\n    // Hack to get rid of the 'Child extract-text...' log spam\n    compiler.hooks.done.tap('NotifyPlugin', (stat) => {\n      stat.compilation.children = this.hideChildren ? [] : stat.compilation.children;\n    });\n\n    compiler.hooks.compile.tap('NotifyPlugin', () => {\n      const action = this.firstRun ? 'starting to build' : 'updating';\n      console.log(`==> ${(chalk as Chalk).cyan(`Webpack is ${action} ${this.name}...`)}`);\n    });\n\n    compiler.hooks.done.tap('NotifyPlugin', this.onDone.bind(this));\n  }\n\n  onDone(rawWebpackStats: Stats) {\n    const { time } = rawWebpackStats.toJson({ timings: true });\n    const action = this.firstRun ? 'building' : 'updating';\n    console.log(`==> ${(chalk as Chalk).green(`Webpack finished ${action} ${this.name} in ${time}ms`)}`);\n\n    this.firstRun = false;\n  }\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\config\\webpack-esbuild.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\config\\webpack-fast.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\config\\webpack.ts","messages":[{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe construction of a(n) `any` typed value.","line":428,"column":5,"nodeType":"NewExpression","messageId":"unsafeNew","endLine":447,"endColumn":7},{"ruleId":"@typescript-eslint/no-unnecessary-type-assertion","severity":2,"message":"This assertion is unnecessary since it does not change the type of the expression.","line":428,"column":10,"nodeType":"TSAsExpression","messageId":"unnecessaryAssertion","endLine":428,"endColumn":36,"fix":{"range":[13515,13522],"text":""}},{"ruleId":"@typescript-eslint/no-unnecessary-type-assertion","severity":2,"message":"This assertion is unnecessary since it does not change the type of the expression.","line":433,"column":10,"nodeType":"TSAsExpression","messageId":"unnecessaryAssertion","endLine":433,"endColumn":33,"fix":{"range":[13671,13678],"text":""}},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":433,"column":10,"nodeType":"TSAsExpression","messageId":"unsafeCall","endLine":433,"endColumn":33},{"ruleId":"@typescript-eslint/no-unsafe-call","severity":2,"message":"Unsafe call of a(n) `any` typed value.","line":436,"column":10,"nodeType":"TSAsExpression","messageId":"unsafeCall","endLine":436,"endColumn":24}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"import * as dotenv from 'dotenv';\nimport webpack from 'webpack';\n\nimport ReactRefreshWebpackPlugin from '@pmmmwh/react-refresh-webpack-plugin';\nimport browserslist from 'browserslist';\nimport { CleanWebpackPlugin } from 'clean-webpack-plugin';\nimport CompressionPlugin from 'compression-webpack-plugin';\nimport CopyWebpackPlugin from 'copy-webpack-plugin';\nimport ForkTsCheckerNotifierWebpackPlugin from 'fork-ts-checker-notifier-webpack-plugin';\nimport ForkTsCheckerWebpackPlugin from 'fork-ts-checker-webpack-plugin';\nimport fs from 'fs';\nimport GenerateJsonPlugin from 'generate-json-webpack-plugin';\nimport HtmlWebpackPlugin from 'html-webpack-plugin';\nimport MiniCssExtractPlugin from 'mini-css-extract-plugin';\nimport svgToMiniDataURI from 'mini-svg-data-uri';\nimport path from 'path';\nimport PostCSSAssetsPlugin from 'postcss-assets-webpack-plugin';\nimport SondaWebpackPlugin from 'sonda/webpack';\nimport TerserPlugin from 'terser-webpack-plugin';\nimport type { Configuration as DevServerConfiguration } from 'webpack-dev-server';\nimport WebpackNotifierPlugin from 'webpack-notifier';\nimport { InjectManifest } from 'workbox-webpack-plugin';\nimport zlib from 'zlib';\nimport csp from './content-security-policy';\nimport { makeFeatureFlags } from './feature-flags';\n\nimport TsconfigPathsPlugin from 'tsconfig-paths-webpack-plugin';\n\nimport { StatsWriterPlugin } from 'webpack-stats-plugin';\nimport NotifyPlugin from './notify-webpack-plugin';\n\nconst ASSET_NAME_PATTERN = 'static/[name]-[contenthash:6][ext]';\n\nimport packageJson from '../package.json';\nimport createWebAppManifest from './manifest-webapp';\n\nimport cssnano from 'cssnano';\nimport sortMediaQueries from 'postcss-sort-media-queries';\n\nimport splash from '../icons/splash.json';\n\n// https://stackoverflow.com/questions/69584268/what-is-the-type-of-the-webpack-config-function-when-it-comes-to-typescript\ntype CLIValues = boolean | string;\ntype EnvValues = Record<string, CLIValues | Record<string, Env>>;\nexport interface Env extends EnvValues {\n  release: boolean;\n  beta: boolean;\n  dev: boolean;\n  pr: boolean;\n  'production-hmr': boolean;\n  name: 'release' | 'beta' | 'dev' | 'pr' | 'production-hmr';\n}\ntype Argv = Record<string, CLIValues>;\nexport type WebpackConfigurationGenerator = (\n  env?: Env,\n  argv?: Argv,\n) => webpack.Configuration | Promise<webpack.Configuration>;\n\nexport default (env: Env) => {\n  env.name = Object.keys(env)[0] as Env['name'];\n  for (const e of ['release', 'beta', 'dev', 'pr', 'production-hmr'] as const) {\n    // set booleans based on env\n    env[e] = Boolean(env[e]);\n    if (env[e]) {\n      env.name = e;\n    }\n  }\n\n  // Load environment variables from appropriate .env file\n  const envFile = env.dev ? '.dev.env' : '.env';\n  dotenv.config({ path: envFile });\n\n  // production-hmr is like release but with HMR enabled\n  if (env['production-hmr']) {\n    env.release = true;\n    env.name = 'release';\n  }\n\n  // Check for SSL certificates in certs directory\n  const certsPath = path.resolve(__dirname, '..', 'certs');\n  const keyPath = path.join(certsPath, 'shirezaks_com.key');\n  const certPath = path.join(certsPath, 'shirezaks_com.pem');\n\n  if (env.dev && env.WEBPACK_SERVE && (!fs.existsSync(keyPath) || !fs.existsSync(certPath))) {\n    console.error('SSL certificates not found in certs directory!');\n    console.error(`Expected key at: ${keyPath}`);\n    console.error(`Expected cert at: ${certPath}`);\n    throw new Error('SSL certificates missing');\n  }\n\n  const version = env.dev\n    ? packageJson.version?.toString() || '2.0.0'\n    : process.env.VERSION || '2.0.0';\n\n  if (!env.dev) {\n    console.log(`Building D2 Locker`);\n  }\n\n  const buildTime = Date.now();\n  const publicPath = process.env.PUBLIC_PATH ?? '/';\n\n  const featureFlags = makeFeatureFlags(env);\n  const contentSecurityPolicy = csp(env.name, featureFlags, version);\n\n  const analyticsProperty = env.release ? 'G-1PW23SGMHN' : 'G-MYWW38Z3LR';\n  const jsFilenamePattern = env.dev ? '[name]-[fullhash].js' : '[name]-[contenthash:8].js';\n  const cssFilenamePattern = env.dev ? '[name]-[fullhash].css' : '[name]-[contenthash:8].css';\n\n  const config: webpack.Configuration = {\n    mode: env.dev ? ('development' as const) : ('production' as const),\n\n    entry: {\n      main: './src/Index.tsx',\n      browsercheck: './src/browsercheck.js',\n      earlyErrorReport: './src/earlyErrorReport.js',\n      authReturn: './src/authReturn.ts',\n      backup: './src/backup.ts',\n    },\n\n    // https://github.com/webpack/webpack-dev-server/issues/2758\n    target: env.dev ? 'web' : 'browserslist',\n\n    output: {\n      path: path.resolve('./dist'),\n      publicPath,\n      filename: jsFilenamePattern,\n      chunkFilename: jsFilenamePattern,\n      assetModuleFilename: ASSET_NAME_PATTERN,\n      hashFunction: 'xxhash64',\n      // Enable HMR in production\n      hotUpdateChunkFilename: 'hot/hot-update-[id]-[fullhash].js',\n      hotUpdateMainFilename: 'hot/hot-update-[runtime]-[fullhash].json',\n    },\n\n    // Dev server\n    devServer:\n      env.dev || env['production-hmr']\n        ? ({\n            host: process.env.DOCKER ? '0.0.0.0' : 'localhost',\n            port: 443, // Use port 443 for both dev and production-hmr\n            allowedHosts: 'all',\n            server: {\n              type: 'https',\n              options: {\n                key: fs.readFileSync(keyPath), // Private keys in PEM format.\n                cert: fs.readFileSync(certPath), // Cert chains in PEM format.\n              },\n            },\n            devMiddleware: {\n              stats: 'errors-only',\n            },\n            client: {\n              overlay: false,\n            },\n            historyApiFallback: true,\n            hot: 'only',\n            liveReload: false,\n            headers: (req) => {\n              // This mirrors what's in .htaccess - headers for html paths, COEP for JS.\n              const headers: Record<string, string | string[]> = req.baseUrl.match(/^[^.]+$/)\n                ? {\n                    'Content-Security-Policy': contentSecurityPolicy,\n                    // credentialless is only supported by chrome but require-corp blocks Bungie.net messages\n                    // Disabled for now as it blocks Google fonts\n                    // 'Cross-Origin-Embedder-Policy': 'credentialless',\n                    // 'Cross-Origin-Opener-Policy': 'same-origin',\n                  }\n                : {};\n\n              return headers;\n            },\n            static: [],\n          } as DevServerConfiguration)\n        : undefined,\n\n    // Bail and fail hard on first error\n    bail: !env.dev && !env['production-hmr'],\n\n    stats: env.dev ? 'minimal' : 'normal',\n\n    devtool: 'source-map',\n\n    performance: {\n      // Don't warn about too-large chunks\n      hints: false,\n    },\n\n    optimization: {\n      // We always want the chunk name, otherwise it's just numbers\n      // chunkIds: 'named',\n      // Extract the runtime into a separate chunk.\n      runtimeChunk: 'single',\n      splitChunks: {\n        chunks(chunk) {\n          return chunk.name !== 'browsercheck' && chunk.name !== 'earlyErrorReport';\n        },\n        automaticNameDelimiter: '-',\n      },\n      minimizer: [\n        new TerserPlugin({\n          parallel: true,\n          terserOptions: {\n            ecma: 2020,\n            module: true,\n            compress: env.dev\n              ? false\n              : {\n                  passes: 1,\n                  toplevel: true,\n                  unsafe: true,\n                  unsafe_math: true,\n                  unsafe_proto: true,\n                  pure_getters: true,\n                  pure_funcs: [\n                    'JSON.parse',\n                    'Object.values',\n                    'Object.keys',\n                    'Object.groupBy',\n                    'Object.fromEntries',\n                    'Map.groupBy',\n                    'Map',\n                    'Set',\n                    'BigInt',\n                  ],\n                },\n            mangle: env.dev ? false : { toplevel: true },\n          },\n          extractComments: false,\n        }),\n      ],\n    },\n\n    module: {\n      strictExportPresence: true,\n      unsafeCache: env.dev,\n\n      rules: [\n        {\n          test: /\\.js$/,\n          exclude: [/node_modules/, /browsercheck\\.js$/],\n          use: [\n            {\n              loader: 'babel-loader',\n              options: {\n                cacheDirectory: true,\n              },\n            },\n          ],\n        },\n        {\n          // Optimize SVGs - mostly for destiny-icons.\n          test: /\\.svg$/,\n          exclude: /data\\/webfonts\\//,\n          type: 'asset',\n          generator: {\n            dataUrl: (content: any) => svgToMiniDataURI(String(content)),\n          },\n          parser: {\n            dataUrlCondition: {\n              maxSize: 5 * 1024, // only inline if less than 5kb\n            },\n          },\n          use: env.dev\n            ? []\n            : [\n                {\n                  loader: 'svgo-loader',\n                },\n              ],\n        },\n        {\n          test: /\\.(jpg|gif|png|eot|ttf|woff(2)?)(\\?v=\\d+\\.\\d+\\.\\d+)?/,\n          type: 'asset',\n          parser: {\n            dataUrlCondition: {\n              maxSize: 5 * 1024, // only inline if less than 5kb\n            },\n          },\n        },\n        // *.m.scss will have CSS Modules support\n        {\n          test: /\\.m\\.scss$/,\n          use: [\n            env.dev ? 'style-loader' : MiniCssExtractPlugin.loader,\n            {\n              loader: 'css-modules-typescript-loader',\n              options: {\n                mode: process.env.CI ? 'verify' : 'emit',\n              },\n            },\n            {\n              loader: 'css-loader',\n              options: {\n                modules: {\n                  localIdentName: !env.release\n                    ? '[name]_[local]-[contenthash:base64:8]'\n                    : '[contenthash:base64:8]',\n                  exportLocalsConvention: 'camelCaseOnly',\n                  // TODO: It's possible that setting this to true would allow\n                  // us to eliminate some original CSS names that still get into\n                  // the bundle, but it breaks css-modules-typescript-loader so\n                  // we'd need to fork/replace it.\n                  namedExport: false,\n                },\n                importLoaders: 2,\n              },\n            },\n            'postcss-loader',\n            { loader: 'sass-loader', options: { sassOptions: { quietDeps: true } } },\n          ],\n        },\n        // Regular *.scss are global\n        {\n          test: /\\.scss$/,\n          exclude: /\\.m\\.scss$/,\n          use: [\n            env.dev ? 'style-loader' : MiniCssExtractPlugin.loader,\n            'css-loader',\n            'postcss-loader',\n            { loader: 'sass-loader', options: { sassOptions: { quietDeps: true } } },\n          ],\n        },\n        {\n          test: /\\.css$/,\n          use: [\n            env.dev ? 'style-loader' : MiniCssExtractPlugin.loader,\n            'css-loader',\n            'postcss-loader',\n          ],\n        },\n        // All files with a '.ts' or '.tsx' extension will be handled by 'babel-loader'.\n        {\n          test: /\\.tsx?$/,\n          exclude: [/testing/, /\\.test\\.ts$/],\n          use: [\n            {\n              loader: 'babel-loader',\n              options: {\n                cacheDirectory: true,\n              },\n            },\n          ],\n        },\n        // All output '.js' files will have any sourcemaps re-processed by 'source-map-loader'.\n        {\n          enforce: 'pre',\n          test: /\\.jsx?$/,\n          loader: 'source-map-loader',\n        },\n        {\n          test: /\\.json/,\n          include: /(src(\\/|\\\\)locale)|(i18n\\.json)/,\n          type: 'asset/resource',\n          generator: {\n            filename: '[name]-[contenthash:8][ext]',\n          },\n        },\n        {\n          // Force webfonts to be separate files instead of having small ones inlined into CSS\n          test: /data\\/webfonts\\//,\n          type: 'asset/resource',\n        },\n        {\n          type: 'javascript/auto',\n          test: /\\.wasm/,\n        },\n        {\n          test: /CHANGELOG\\.md$/,\n          use: [\n            {\n              loader: 'html-loader',\n            },\n            {\n              loader: 'markdown-loader',\n            },\n          ],\n        },\n      ],\n\n      noParse: /manifests/,\n    },\n\n    resolve: {\n      extensions: ['.js', '.json', '.ts', '.tsx', '.jsx'],\n\n      // Speed up module resolution\n      symlinks: false,\n      cacheWithContext: false,\n\n      plugins: [new TsconfigPathsPlugin()],\n\n      alias: {\n        'textarea-caret': path.resolve('./src/app/utils/textarea-caret'),\n      },\n\n      fallback: {\n        fs: false,\n        net: false,\n        tls: false,\n      },\n    },\n\n    plugins: [],\n\n    cache: env.dev\n      ? {\n          type: 'filesystem',\n          buildDependencies: {\n            config: [__filename],\n          },\n        }\n      : false,\n  };\n\n  const plugins: any[] = [\n    new webpack.IgnorePlugin({ resourceRegExp: /caniuse-lite\\/data\\/regions/ }),\n\n    new NotifyPlugin('D2 Locker', !env.dev),\n\n    new MiniCssExtractPlugin({\n      filename: cssFilenamePattern,\n      chunkFilename: cssFilenamePattern,\n      ignoreOrder: true, // Suppress CSS module ordering warnings\n      experimentalUseImportModule: true, // Enable parallel CSS processing\n    }),\n\n    // Compress CSS after bundling so we can optimize across rules\n    new (PostCSSAssetsPlugin as any)({\n      test: /\\.css$/,\n      log: false,\n      plugins: [\n        // Sort media queries so they can be merged by cssnano\n        (sortMediaQueries as any)({\n          sort: 'desktop-first',\n        }),\n        (cssnano as any)({\n          preset: [\n            'default',\n            {\n              autoprefixer: false,\n              // We've already run svgo on all images\n              svgo: false,\n            },\n          ],\n        }),\n      ],\n    }),\n\n    // TODO: prerender?\n    new HtmlWebpackPlugin({\n      inject: false,\n      filename: 'index.html',\n      template: 'src/index.html',\n      chunks: ['earlyErrorReport', 'main', 'browsercheck'],\n      templateParameters: {\n        version,\n        date: new Date(buildTime).toString(),\n        splash,\n        analyticsProperty,\n        publicPath,\n      },\n      minify: env.dev\n        ? false\n        : {\n            collapseWhitespace: true,\n            keepClosingSlash: true,\n            removeComments: false,\n            removeRedundantAttributes: true,\n            removeScriptTypeAttributes: true,\n            removeStyleLinkTypeAttributes: true,\n            useShortDoctype: true,\n          },\n    }),\n\n    new HtmlWebpackPlugin({\n      inject: true,\n      filename: 'return.html',\n      template: 'src/return.html',\n      chunks: ['authReturn'],\n    }),\n\n    new HtmlWebpackPlugin({\n      inject: true,\n      filename: 'backup.html',\n      template: 'src/backup.html',\n      chunks: ['backup'],\n    }),\n\n    new HtmlWebpackPlugin({\n      inject: false,\n      filename: '404.html',\n      template: 'src/404.html',\n    }),\n\n    // Generate the .htaccess file (kind of an abuse of HtmlWebpack plugin just for templating)\n    new HtmlWebpackPlugin({\n      filename: '.htaccess',\n      template: 'src/htaccess',\n      inject: false,\n      minify: false,\n      templateParameters: {\n        publicPath: publicPath.replace('/', ''),\n        csp: contentSecurityPolicy,\n      },\n    }),\n\n    // Generate a version info JSON file we can poll. We could theoretically add more info here too.\n    new GenerateJsonPlugin('./version.json', {\n      version,\n      buildTime,\n    }),\n\n    // The web app manifest controls how our app looks when installed.\n    new GenerateJsonPlugin('./manifest-webapp.json', createWebAppManifest(publicPath)),\n\n    new CopyWebpackPlugin({\n      patterns: [\n        // Only copy the manifests out of the data folder. Everything else we import directly into the bundle.\n        { from: './src/data/d1/manifests', to: 'data/d1/manifests' },\n        { from: `./icons/${env.name}/` },\n        { from: `./icons/splash`, to: 'splash/' },\n        { from: `./icons/screenshots`, to: 'screenshots/' },\n        { from: './backend/light', to: 'backend/light/' },\n        { from: './src/safari-pinned-tab.svg' },\n        { from: './src/nuke.php' },\n        { from: './src/robots.txt' },\n      ],\n    }),\n\n    new webpack.DefinePlugin({\n      $D2L_VERSION: JSON.stringify(version),\n      $D2L_FLAVOR: JSON.stringify(env.name),\n      $D2L_BUILD_DATE: JSON.stringify(buildTime),\n      // These are set from the GitHub secrets\n      $D2L_WEB_API_KEY: JSON.stringify(process.env.WEB_API_KEY),\n      $D2L_WEB_CLIENT_ID: JSON.stringify(process.env.WEB_OAUTH_CLIENT_ID),\n      $D2L_WEB_CLIENT_SECRET: JSON.stringify(process.env.WEB_OAUTH_CLIENT_SECRET),\n      $D2L_API_KEY: JSON.stringify(process.env.D2L_API_KEY),\n      $DEFAULT_DESTINY_VERSION: JSON.stringify(process.env.DEFAULT_DESTINY_VERSION || '2'),\n      $ANALYTICS_PROPERTY: JSON.stringify(analyticsProperty),\n      $PUBLIC_PATH: JSON.stringify(publicPath),\n\n      $BROWSERS: JSON.stringify(browserslist(packageJson.browserslist)),\n\n      // Feature flags!\n      ...Object.fromEntries(\n        Object.entries(featureFlags).map(([key, value]) => [\n          `$featureFlags.${key}`,\n          JSON.stringify(value),\n        ]),\n      ),\n    }),\n  ];\n\n  if (env.dev || env['production-hmr']) {\n    // In dev we use babel to compile TS, and fork off a separate typechecker\n    plugins.push(new ForkTsCheckerWebpackPlugin());\n\n    // TODO: maybe reintroduce https://webpack.js.org/plugins/eslint-webpack-plugin/\n\n    if (process.env.SNORETOAST_DISABLE) {\n      console.log(\"Disabling build notifications as 'SNORETOAST_DISABLE' was defined\");\n    } else {\n      plugins.push(\n        new WebpackNotifierPlugin({\n          title: 'D2L',\n          excludeWarnings: false,\n          alwaysNotify: true,\n          contentImage: path.join(__dirname, '../icons/release/favicon-96x96.png'),\n        }),\n      );\n      plugins.push(\n        new ForkTsCheckerNotifierWebpackPlugin({\n          title: 'D2L TypeScript',\n          excludeWarnings: false,\n        }),\n      );\n    }\n\n    plugins.push(new ReactRefreshWebpackPlugin({ overlay: false }));\n  } else {\n    // env.beta and env.release\n    plugins.push(\n      new StatsWriterPlugin({\n        filename: '../webpack-stats.json',\n        stats: {\n          assets: true,\n          entrypoints: true,\n          chunks: true,\n          modules: true,\n          excludeAssets: [\n            /data\\/d1\\/manifests\\/d1-manifest-..(-br)?.json(.br|.gz)?/,\n            /^(?!en).{2,}json/,\n            /webpack-stats.json/,\n            /screenshots\\//,\n          ],\n        },\n      }),\n\n      ...(process.env.ANALYZE\n        ? [\n            new SondaWebpackPlugin({\n              format: 'html',\n              outputDir: 'sonda-report',\n              open: false,\n              sources: true,\n              gzip: false,\n              brotli: false,\n              exclude: [/\\.br$/, /\\.gz$/, /\\/manifests\\//, /webpack-stats\\.json/],\n            }),\n          ]\n        : []),\n\n      new CopyWebpackPlugin({\n        patterns: [\n          {\n            from: `./config/.well-known/android-config${env.release ? '' : '.beta'}.json`,\n            to: '.well-known/assetlinks.json',\n          },\n          {\n            from: `./config/.well-known/apple-config.json`,\n            to: '.well-known/apple-app-site-association',\n            toType: 'file',\n          },\n        ],\n      }),\n\n      new CleanWebpackPlugin({\n        cleanOnceBeforeBuildPatterns: ['node_modules/.cache'],\n      }),\n\n      // Tell React we're in Production mode\n      new webpack.DefinePlugin({\n        'process.env.NODE_ENV': JSON.stringify('production'),\n        'process.env': JSON.stringify({ NODE_ENV: 'production' }),\n      }),\n\n      // Generate a service worker\n      new InjectManifest({\n        include: [/\\.(html|js|css|woff2|json|wasm)$/, /static\\/(?!fa-).*\\.(png|gif|jpg|svg)$/],\n        exclude: [\n          /version\\.json/,\n          // Ignore both the webapp manifest and the d1-manifest files\n          /data\\/d1\\/manifests/,\n          /manifest-webapp/,\n          // Android and iOS manifest\n          /\\.well-known/,\n          /screenshots\\//,\n        ],\n        swSrc: './src/service-worker.ts',\n        swDest: 'service-worker.js',\n      }),\n    );\n\n    // Skip brotli compression for PR builds\n    if (!process.env.PR_BUILD) {\n      plugins.push(\n        // Brotli-compress all assets. We used to gzip too but everything supports brotli now\n        new CompressionPlugin({\n          filename: '[path][base].br',\n          algorithm: 'brotliCompress',\n          exclude: /data\\/d1\\/manifests/,\n          // Skip .woff and .woff2, they're already well compressed\n          test: /\\.js$|\\.css$|\\.html$|\\.json$|\\.map$|\\.ttf$|\\.eot$|\\.svg$|\\.wasm$/,\n          compressionOptions: {\n            [zlib.constants.BROTLI_PARAM_QUALITY]: 5,\n          },\n          minRatio: 0.8,\n        }),\n      );\n    }\n  }\n\n  config.plugins = plugins;\n\n  return config;\n};\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\docker-hmr-server.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\find-missing-deps.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\i18next-scanner.config.cjs","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\install-react-aria-deps.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\install-react-stately-deps.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\jest.config.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\proxy-server.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\simple-hmr-server.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\@types\\beyond-js-md5\\index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\@types\\i18next.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\Index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\StorageTest.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\__mocks__\\fileMock.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\App.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\App.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\Root.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\Account.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\Account.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\MenuAccounts.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\MenuAccounts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\SelectAccount.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\SelectAccount.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\bungie-account.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\destiny-account.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\destiny-account.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\observers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\platforms.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\accounts\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\AllWishlistRolls.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\AllWishlistRolls.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\Armory.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\Armory.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\ArmoryPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\ArmorySearch.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\ArmorySearch.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\ArmorySearchContext.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\ArmorySearchPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\ArmorySheet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\ArmorySheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\ItemGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\LazyArmory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\LazyArmorySearch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\Links.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\Links.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\WishListEntry.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\WishListEntry.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\crafting-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\trait-to-enhanced-trait.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\wishlist-collapser.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\armory\\wishlist-collapser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\authenticated-fetch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\bungie-api-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\bungie-core-api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\bungie-service-helper.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\destiny1-api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\destiny2-api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\error-toaster.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\http-client.test.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unsafe-return","severity":2,"message":"Unsafe return of a value of type `any`.","line":37,"column":16,"nodeType":"ObjectExpression","messageId":"unsafeReturn","endLine":37,"endColumn":66,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":108,"column":9,"nodeType":"VariableDeclarator","messageId":"anyAssignment","endLine":108,"endColumn":93,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\http-client.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\oauth-tokens.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\oauth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\rate-limit-config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\bungie-api\\rate-limiter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\CharacterHeaderXP.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\CharacterHeaderXP.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\CharacterTile.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\CharacterTile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\CharacterTileButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\CharacterTileButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\StoreHeading.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\StoreHeading.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\StoreIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\character-tile\\StoreIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\clarity\\about.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\clarity\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\clarity\\descriptions\\ClarityDescriptions.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":76,"column":59,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":76,"endColumn":60},{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":78,"column":72,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":78,"endColumn":73}],"suppressedMessages":[{"ruleId":"css-modules/no-unused-class","severity":2,"message":"Unused classes found in Description.m.scss: pvp, pve, green, yellow, blue, purple, enhancedArrow, center, descriptionDivider, spacer, bold, background, title, link, breakSpaces","line":6,"column":8,"nodeType":"ImportDefaultSpecifier","endLine":6,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { languageSelector } from 'app/d2l-api/selectors';\nimport ExternalLink from 'app/d2l-ui/ExternalLink';\nimport clsx from 'clsx';\nimport { useSelector } from 'react-redux';\n/* eslint-disable css-modules/no-unused-class */\nimport styles from './Description.m.scss';\nimport { LinesContent, Perk } from './descriptionInterface';\n\nconst customContent = (content: LinesContent) => {\n  if (content.link) {\n    return <ExternalLink href={content.link}>{content.text}</ExternalLink>;\n  }\n};\n\nconst joinClassNames = (classNames?: (keyof typeof styles)[]) =>\n  classNames?.map((className) => styles[className]).join(' ');\n\n/*\n       (^|\\b) : start from the beginning of the string or a word boundary\n        [+-]? : include + or - prefixes\n  (\\d*\\.)?\\d+ : match numbers (including decimal values)\n([xs]|ms|HP)? : optionally include 'x' multiplier, 's', 'ms' and 'HP' unit suffixes\n      ?:[%°+] : optionally include %, ° and + suffixes\n         \\b|$ : stop at a word boundary or the end of the string\n*/\nconst boldTextRegEx = /(?:^|\\b)[+-]?(?:\\d*\\.)?\\d+(?:[xs]|ms|HP)?(?:[%°+]|\\b|$)/g;\n\nfunction applyFormatting(text: string | undefined) {\n  if (text === undefined) {\n    return;\n  }\n  // I will remove this later just need to make this arrow optional in compiler\n  if (text === '🡅') {\n    return '';\n  }\n  const segments = [];\n\n  const matches = [...text.matchAll(boldTextRegEx)];\n  let startIndex = 0;\n  let n = 0;\n  for (const match of matches) {\n    if (match.index === undefined) {\n      continue;\n    }\n    const capturedText = match[0];\n    segments.push(text.substring(startIndex, match.index));\n    segments.push(<b key={n++}>{capturedText}</b>);\n    startIndex = match.index + capturedText.length;\n  }\n  if (startIndex < text.length) {\n    segments.push(text.substring(startIndex));\n  }\n\n  return segments;\n}\n\n/**\n * Renders the Clarity description for the provided Community Insight.\n * This is a cut-down version of the original from the Clarity extension.\n */\nexport default function ClarityDescriptions({\n  perk,\n  className,\n}: {\n  perk: Perk;\n  className?: string;\n}) {\n  const selectedLanguage = useSelector(languageSelector);\n  if (perk.descriptions === undefined) {\n    return null;\n  }\n\n  const description = perk.descriptions[selectedLanguage] || perk.descriptions.en;\n\n  const convertedDescription = description?.map((line, i) => (\n    <div className={joinClassNames(line.classNames)} key={i}>\n      {line.linesContent?.map((linesContent, i) => (\n        <span className={joinClassNames(linesContent.classNames)} key={i}>\n          {linesContent.link ? customContent(linesContent) : applyFormatting(linesContent.text)}\n        </span>\n      ))}\n    </div>\n  ));\n\n  return <div className={clsx(styles.communityDescription, className)}>{convertedDescription}</div>;\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\clarity\\descriptions\\Description.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\clarity\\descriptions\\character-stats.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\clarity\\descriptions\\descriptionInterface.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\clarity\\descriptions\\loadDescriptions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\clarity\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\clarity\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\Compare.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\Compare.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\CompareButtons.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\CompareColumns.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\CompareColumns.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\CompareContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\CompareItem.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\CompareItem.tsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/no-noninteractive-element-interactions","severity":2,"message":"Non-interactive elements should not be assigned mouse or keyboard event listeners.","line":113,"column":9,"nodeType":"JSXOpeningElement","endLine":125,"endColumn":10,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\CompareStat.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\CompareStat.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\CompareSuggestions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\compare-buttons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\compare-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\compare\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\css-variables.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\api-permission-prompt.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\api-permission-prompt.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\api-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\basic-actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\d2l-api-helper.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\d2l-api.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\import.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\reducer.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\register-app.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-api\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\AlertIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\AlertIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\AnimatedNumber.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\AutoRefresh.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\BungieImage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CharacterSelect.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CharacterSelect.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CheckButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CheckButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ClassIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ClickOutside.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ClickOutsideRoot.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ClosableContainer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ClosableContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CollapsibleTitle.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CollapsibleTitle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ConfirmButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ConfirmButton.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setContentHeight' of 'useState' directly in 'useEffect'.","line":37,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":37,"endColumn":61},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setContainerHeight' of 'useState' directly in 'useEffect'.","line":38,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":38,"endColumn":64}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { t } from 'app/i18next-t';\nimport clsx from 'clsx';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './ConfirmButton.m.scss';\n\n/**\n * a button that requests confirmation, and requires a second\n * click before it runs the provided onClick function\n *\n * this uses a goofy height transition to switch between two\n * different contents (normal content, and confirm message),\n * so please ensure the provided child content is a single line\n */\nexport function ConfirmButton({\n  /** apply \"danger\" styling, for destructive actions like deletion */\n  danger,\n  /** this will be executed once the users confirms the action */\n  onClick,\n  className,\n  /** button content. confine this to 1 text line and 1 line-height */\n  children,\n}: React.PropsWithChildren<{ danger?: boolean; onClick: () => void; className?: string }>) {\n  // controls whether the button is in \"ask for confirmation\" state\n  const [confirmMode, setConfirmMode] = useState(false);\n\n  // controls whether the button is ready to submit the requested function\n  // (available 100ms after \"ask for confirmation\" state)\n  const [confirmReady, setConfirmReady] = useState(false);\n\n  const [contentHeight, setContentHeight] = useState(0);\n  const [containerHeight, setContainerHeight] = useState(0);\n\n  const containerRef = useRef<HTMLButtonElement>(null);\n  const childrenRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setContentHeight(childrenRef.current?.offsetHeight || 0);\n    setContainerHeight(containerRef.current?.offsetHeight || 0);\n  }, []);\n\n  const onClickAction =\n    confirmMode && confirmReady\n      ? () => {\n          setConfirmMode(false);\n          setConfirmReady(false);\n          onClick();\n        }\n      : () => {\n          setConfirmMode(true);\n          setTimeout(() => {\n            setConfirmReady(true);\n          }, 100);\n        };\n\n  return (\n    <button\n      key=\"save\"\n      type=\"button\"\n      className={clsx('d2l-button', className, styles.confirmButton, {\n        [styles.confirmMode]: confirmMode,\n        danger,\n      })}\n      ref={containerRef}\n      onClick={onClickAction}\n      onMouseLeave={() => {\n        setConfirmMode(false);\n        setConfirmReady(false);\n      }}\n      style={{ height: containerHeight || 'auto' }}\n    >\n      <div style={{ height: confirmMode ? 0 : contentHeight || 'auto' }} ref={childrenRef}>\n        {children}\n      </div>\n      <div style={{ height: confirmMode ? contentHeight : 0 }}>{t('General.Confirm')}</div>\n    </button>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Countdown.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setDiff' of 'useState' directly in 'useEffect'.","line":24,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":24,"endColumn":20}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { i15dDurationFromMs } from 'app/utils/time';\nimport { useEffect, useState } from 'react';\n\n/**\n * Render a countdown to a specific date.\n */\nexport default function Countdown({\n  endTime,\n  compact,\n  className,\n}: {\n  endTime: Date;\n  /** Render the time as a compact string instead of spelled out */\n  compact?: boolean;\n  className?: string;\n}) {\n  const [diff, setDiff] = useState(endTime.getTime() - Date.now());\n\n  useEffect(() => {\n    let interval = 0;\n    const update = () => {\n      const diff = endTime.getTime() - Date.now();\n      // We set the diff just to make it re-render. We could just as easily set this to now(), or an incrementing number\n      setDiff(diff);\n      if (diff <= 0) {\n        clearInterval(interval);\n      }\n    };\n    interval = window.setInterval(update, 60000);\n    update();\n    return () => clearInterval(interval);\n  }, [endTime]);\n\n  return (\n    <time dateTime={endTime.toISOString()} className={className} title={endTime.toLocaleString()}>\n      {i15dDurationFromMs(diff, compact)}\n    </time>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CustomStatTotal.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CustomStatTotal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CustomStatWeights.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\CustomStatWeights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\DestinyTooltipText.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\DestinyTooltipText.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\DiamondProgress.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\DiamondProgress.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Dropdown.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Dropdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ElementIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ElementIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\EnergyIncrements.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\EnergyIncrements.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":61,"column":16,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":61,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { t } from 'app/i18next-t';\nimport { DimItem } from 'app/inventory/item-types';\nimport { getEnergyUpgradeHashes, sumModCosts } from 'app/inventory/store/energy';\nimport { EnergySwap } from 'app/loadout-builder/generated-sets/GeneratedSetItem';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { compareBy } from 'app/utils/comparators';\nimport Cost from 'app/vendors/Cost';\nimport clsx from 'clsx';\nimport styles from './EnergyIncrements.m.scss';\nimport { PressTip } from './PressTip';\n\n// TODO special display for T10 -> T10 + exotic artifice?\n\n/** this accepts either an item, or a partial DimItem.energy */\nfunction EnergyIncrements({\n  item,\n  energy,\n}:\n  | { item: DimItem; energy?: undefined }\n  | {\n      item?: undefined;\n      energy: {\n        energyCapacity: number;\n        energyUsed: number;\n      };\n    }) {\n  const { energyCapacity, energyUsed } = item?.energy ?? energy!;\n  return (\n    <EnergyMeterIncrements\n      energyCapacity={energyCapacity}\n      energyUsed={energyUsed}\n      variant=\"small\"\n    />\n  );\n}\n\nexport function EnergyMeterIncrements({\n  energyCapacity,\n  energyUsed,\n  minCapacity,\n  previewUpgrade,\n  variant,\n}: {\n  energyCapacity: number;\n  energyUsed: number;\n  minCapacity?: number;\n  previewUpgrade?: (i: number) => void;\n  variant: 'medium' | 'small';\n}) {\n  // This works because Tier 5 armor with 11 energy drops with all energy unlocked.\n  const maxEnergyCapacity = Math.max(10, energyCapacity);\n  // layer in possible total slots, then earned slots, then currently used slots\n  const meterIncrements = Array<string | undefined>(maxEnergyCapacity)\n    .fill(styles.unavailable)\n    .fill(undefined, 0, energyCapacity)\n    .fill(styles.used, 0, energyUsed);\n  return (\n    <div className={clsx(styles.energyMeterIncrements, { [styles.medium]: variant === 'medium' })}>\n      {meterIncrements.map((incrementStyle, i) => (\n        <div\n          key={i}\n          className={incrementStyle}\n          role={minCapacity !== undefined && i + 1 > minCapacity ? 'button' : undefined}\n          onClick={previewUpgrade ? () => previewUpgrade(i + 1) : undefined}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport function EnergyIncrementsWithPresstip({\n  energy,\n  wrapperClass,\n  item,\n}: {\n  energy: {\n    energyCapacity: number;\n    energyUsed: number;\n  };\n  wrapperClass?: string | undefined;\n  item: DimItem;\n}) {\n  const { energyCapacity, energyUsed } = energy;\n  const energyUnused = Math.max(energyCapacity - energyUsed, 0);\n\n  const defs = useD2Definitions()!;\n  if (!item.energy) {\n    return null;\n  }\n\n  const energyModHashes = getEnergyUpgradeHashes(item, energyUsed || 0);\n  const costs = sumModCosts(\n    defs,\n    energyModHashes.map((h) => defs.InventoryItem.get(h)),\n  ).sort(compareBy((c) => c.quantity));\n\n  return (\n    <PressTip\n      tooltip={\n        <>\n          {t('EnergyMeter.Energy')}\n          <hr />\n          {t('EnergyMeter.Used')}: {energyUsed}\n          <br />\n          {t('EnergyMeter.Unused')}: {energyUnused}\n          {energyUsed > energyCapacity && (\n            <>\n              <hr />\n              {t('EnergyMeter.UpgradeNeeded', energy)}\n            </>\n          )}\n          {costs.length > 0 && (\n            <>\n              <hr />\n              <div className={styles.costs}>\n                <span>{t('Loadouts.ModPlacement.UpgradeCosts')}</span>\n                {costs.map((cost) => (\n                  <Cost key={cost.itemHash} cost={cost} className={styles.cost} />\n                ))}\n              </div>\n            </>\n          )}\n        </>\n      }\n      className={wrapperClass}\n    >\n      <EnergyIncrements\n        energy={{\n          energyCapacity,\n          energyUsed,\n        }}\n      />\n      {energyUsed > energyCapacity && <EnergySwap energy={energy} />}\n    </PressTip>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ErrorBoundary.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ExpandableTextBlock.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ExpandableTextBlock.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setOpen' of 'useState' directly in 'useEffect'.","line":36,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":36,"endColumn":20}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import clsx from 'clsx';\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport styles from './ExpandableTextBlock.m.scss';\n\n/**\n * wrapped around some inline content, this crops to a specified number of lines\n * (with a fadeout) and allows the user to click it and show the rest\n *\n * @param linesWhenClosed an integer please. controls how many lines to collapse to\n * @param alreadyOpen allows a parent component to force it open\n */\nexport function ExpandableTextBlock({\n  children,\n  linesWhenClosed,\n  alreadyOpen,\n  className,\n}: {\n  children: React.ReactNode;\n  linesWhenClosed: number;\n  alreadyOpen?: boolean;\n  className?: string;\n}) {\n  const [isOpen, setOpen] = useState(alreadyOpen);\n  const [closedHeight, setClosedHeight] = useState<number>();\n  const contentRef = useRef<HTMLDivElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  // measure the element height, with lines clamped, the first time this component exists\n  useLayoutEffect(() => {\n    setClosedHeight(contentRef.current!.clientHeight);\n  }, []);\n  // after the element has been measured, if the unclamped text still fits inside clamped height,\n  // then clamping wasn't necessary. set isOpen to mark it as, effectively, already opened\n  useEffect(() => {\n    if (closedHeight && wrapperRef.current!.clientHeight >= contentRef.current!.clientHeight) {\n      setOpen(true);\n    }\n  }, [closedHeight]);\n\n  return (\n    <div\n      className={clsx(className, styles.textBlockWrapper, { [styles.open]: isOpen })}\n      ref={wrapperRef}\n      onClick={() => setOpen(true)}\n      style={{ height: isOpen ? 'max-content' : closedHeight, overflow: 'hidden' }}\n    >\n      <div\n        ref={contentRef}\n        style={\n          closedHeight\n            ? undefined\n            : {\n                WebkitLineClamp: linesWhenClosed,\n                WebkitBoxOrient: 'vertical',\n                display: '-webkit-box',\n              }\n        }\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ExternalLink.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\FileUpload.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\FileUpload.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\FilterPills.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\FilterPills.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\FractionalPowerLevel.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\FractionalPowerLevel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\HelpLink.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\HelpLink.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ItemCategoryIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ItemCategoryIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ItemPop.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\KeyHelp.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\KeyHelp.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Loading.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Loading.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\PageLoading.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\PageLoading.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\PageWithMenu.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\PageWithMenu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\PressTip.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\PressTip.tsx","messages":[],"suppressedMessages":[{"ruleId":"@eslint-react/naming-convention/context-name","severity":1,"message":"A context name must be a valid component name with the suffix 'Context'.","line":23,"column":14,"nodeType":"Identifier","messageId":"invalid","endLine":23,"endColumn":26,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\RadioButtons.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\RadioButtons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Select.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Select.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setDropdownWidth' of 'useState' directly in 'useEffect'.","line":104,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":104,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { expandDownIcon, expandUpIcon } from 'app/shell/icons';\nimport AppIcon from 'app/shell/icons/AppIcon';\nimport clsx from 'clsx';\nimport { useSelect } from 'downshift';\n\nimport { useHeightFromViewportBottom } from 'app/utils/hooks';\nimport { CSSProperties, ReactNode, useEffect, useRef, useState } from 'react';\nimport styles from './Select.m.scss';\nimport { usePopper } from './usePopper';\n\nexport interface Option<T> {\n  key: string;\n  content: ReactNode;\n  disabled?: boolean;\n  value?: T;\n}\n\ninterface Props<T> {\n  className?: string;\n  /** Hide the selected option from the dropdown */\n  hideSelected?: boolean;\n  disabled?: boolean;\n  /** Sets the max width for the button. */\n  maxButtonWidth?: number;\n  /**\n   * Sets the max width for the dropdown.\n   *\n   * If 'button' is used the two things can happen:\n   * 1. If maxButtonWidth is set it will use that as the max width.\n   * 2. If maxButtonWidth is undefined it will calculate the width\n   * of the button dynamically and use that to set the max width.\n   */\n  maxDropdownWidth?: number | 'button';\n  value?: T;\n  options: Option<T>[];\n  /** Optional override for the button content */\n  children?: ReactNode;\n  onChange: (value?: T) => void;\n}\n\n/**\n * A Select menu, which maintains a current value and a dropdown to choose\n * another value. A replacement for HTML's <select> element. This is a\n * controlled component.\n *\n * @see Dropdown for a menu of commands\n * @see MultiSelect for multiple-item selector\n */\nexport default function Select<T>({\n  className,\n  disabled,\n  maxButtonWidth,\n  maxDropdownWidth,\n  options: items,\n  onChange,\n  value,\n  hideSelected,\n  children,\n}: Props<T>) {\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n    selectedItem,\n  } = useSelect({\n    items,\n    selectedItem: items.find((o) => o.value === value) || null,\n    itemToString: (i) => i?.key || 'none',\n    onSelectedItemChange: ({ selectedItem }) => onChange(selectedItem?.value),\n    isItemDisabled: (item) => Boolean(item.disabled),\n  });\n\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [dropdownWidth, setDropdownWidth] = useState<number | undefined>(() =>\n    typeof maxDropdownWidth === 'number' ? maxDropdownWidth : undefined,\n  );\n  const [dropdownHeight, setDropdownHeight] = useState<number | undefined>();\n\n  usePopper(\n    {\n      contents: menuRef,\n      reference: buttonRef,\n      placement: 'bottom-start',\n      offset: 2,\n    },\n    [isOpen, items],\n  );\n\n  // Only throw error if value is defined but doesn't match any option\n  if (value !== undefined && !selectedItem) {\n    throw new Error('value must correspond to one of the provided options');\n  }\n\n  useEffect(() => {\n    if (maxDropdownWidth === 'button' && dropdownWidth === undefined && buttonRef.current) {\n      // Minus 2 because the menu has a thicker outline than the button border (2px vs 1px)\n      const width =\n        maxButtonWidth !== undefined\n          ? maxButtonWidth\n          : buttonRef.current.getBoundingClientRect().width - 2;\n      setDropdownWidth(width);\n    }\n  }, [dropdownWidth, maxButtonWidth, maxDropdownWidth]);\n\n  useHeightFromViewportBottom(buttonRef, setDropdownHeight, 28, true);\n\n  let buttonStyle: CSSProperties | undefined;\n\n  const dropdownStyle: CSSProperties = {\n    overflowY: 'auto',\n    overscrollBehaviorY: 'contain',\n    maxHeight: dropdownHeight,\n  };\n\n  if (maxButtonWidth !== undefined) {\n    buttonStyle = {\n      maxWidth: maxButtonWidth,\n    };\n  }\n\n  return (\n    <div className={className}>\n      <button\n        type=\"button\"\n        style={buttonStyle}\n        className={styles.button}\n        {...getToggleButtonProps({\n          ref: buttonRef,\n          disabled,\n        })}\n      >\n        {children ?? (\n          <>\n            {selectedItem?.content}{' '}\n            <AppIcon icon={isOpen ? expandUpIcon : expandDownIcon} className={styles.arrow} />\n          </>\n        )}\n      </button>\n      <div\n        {...getMenuProps({ ref: menuRef, className: clsx(styles.menu, { [styles.open]: isOpen }) })}\n      >\n        <div style={dropdownStyle}>\n          {isOpen &&\n            items.map(\n              (item, index) =>\n                !(hideSelected && item.value === value) && (\n                  <div\n                    className={clsx(styles.menuItem, {\n                      [styles.highlighted]: highlightedIndex === index,\n                      [styles.disabled]: item.disabled,\n                    })}\n                    key={item.key}\n                    {...getItemProps({\n                      item,\n                      index,\n                    })}\n                  >\n                    {item.content}\n                  </div>\n                ),\n            )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\SetFilterButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\SetFilterButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Sheet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Sheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\SheetHorizontalScrollContainer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\SheetHorizontalScrollContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\ShowPageLoading.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\SpecialtyModSlotIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\SpecialtyModSlotIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\StaticPage.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\StaticPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Switch.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\Switch.tsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must have accessible text.","line":33,"column":7,"nodeType":"JSXOpeningElement","endLine":33,"endColumn":31,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\TileGrid.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\TileGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\UserGuideLink.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\VirtualList.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\VirtualList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\WeaponGroupingIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\WeaponGroupingIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\destiny-symbols\\ColorDestinySymbols.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\destiny-symbols\\ColorDestinySymbols.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\destiny-symbols\\RichDestinyText.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\destiny-symbols\\SymbolsPicker.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\destiny-symbols\\SymbolsPicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\destiny-symbols\\destiny-symbols.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\destiny-symbols\\destiny-symbols.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\destiny-symbols\\rich-destiny-text.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\scroll.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\sheets-open.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\svgs\\BucketIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\svgs\\BucketIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\svgs\\itemCategory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\table-columns.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\table-columns.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\text-complete\\text-complete.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\text-complete\\text-complete.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\useBulkNote.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\useBulkNote.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\useConfirm.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\useDialog.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\useDialog.tsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/no-noninteractive-element-interactions","severity":2,"message":"Non-interactive elements should not be assigned mouse or keyboard event listeners.","line":81,"column":7,"nodeType":"JSXOpeningElement","endLine":86,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@eslint-react/no-missing-key","severity":2,"message":"Missing 'key' for element when rendering list.","line":108,"column":11,"nodeType":"JSXElement","messageId":"missingKey","endLine":108,"endColumn":54,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\useFixOverscrollBehavior.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\usePopper.ts","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useLayoutEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","line":184,"column":5,"nodeType":"SpreadElement","endLine":184,"endColumn":12,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\usePrompt.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\d2l-ui\\usePrompt.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\debug\\Debug.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\debug\\Debug.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setLocalStorageError' of 'useState' directly in 'useEffect'.","line":77,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":77,"endColumn":46},{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":233,"column":25,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":233,"endColumn":26}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Account from 'app/accounts/Account';\nimport { accountsSelector, currentAccountSelector } from 'app/accounts/selectors';\nimport { BungieError, HttpStatusError } from 'app/bungie-api/http-client';\nimport { getToken, Token } from 'app/bungie-api/oauth-tokens';\nimport { clarityCharacterStatsSelector, clarityDescriptionsSelector } from 'app/clarity/selectors';\nimport { DimAuthToken, getToken as getDimApiToken } from 'app/d2l-api/d2l-api-helper';\nimport {\n  apiPermissionGrantedSelector,\n  currentProfileSelector,\n  D2LSyncErrorSelector,\n  settingSelector,\n  updateQueueLengthSelector,\n} from 'app/d2l-api/selectors';\nimport { t } from 'app/i18next-t';\nimport { profileErrorSelector, profileResponseSelector } from 'app/inventory/selectors';\nimport { useLoadStores } from 'app/inventory/store/hooks';\nimport { TroubleshootingSettings } from 'app/settings/Troubleshooting';\nimport LocalStorageInfo from 'app/storage/LocalStorageInfo';\nimport { set } from 'app/storage/idb-keyval';\nimport { useThunkDispatch } from 'app/store/thunk-dispatch';\nimport { streamDeckSelector } from 'app/stream-deck/selectors';\nimport { DimError } from 'app/utils/d2l-error';\nimport { convertToError } from 'app/utils/errors';\nimport { usePageTitle } from 'app/utils/hooks';\nimport { systemInfo } from 'app/utils/system-info';\nimport { wishListsLastFetchedSelector, wishListsSelector } from 'app/wishlists/selectors';\nimport { fetchWishList } from 'app/wishlists/wishlist-fetch';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styles from './Debug.m.scss';\n\n/**\n * A user-facing debug page that displays information about the D2L environment,\n * browser, and various states and capabilities to help us figure things out.\n *\n * The text on this page is for D2L developers and does not need to be translated.\n */\nexport default function Debug() {\n  usePageTitle('Debug');\n  const dispatch = useThunkDispatch();\n  const bungieToken = getToken();\n  const d2lApiToken = getDimApiToken();\n\n  const accounts = useSelector(accountsSelector);\n  const currentAccount = useSelector(currentAccountSelector);\n  const profileResponse = useSelector(profileResponseSelector);\n  const profileError = useSelector(profileErrorSelector);\n  const D2LSyncProfile = useSelector(currentProfileSelector);\n  const D2LSyncError = useSelector(D2LSyncErrorSelector);\n  const D2LSyncUpdateQueueSize = useSelector(updateQueueLengthSelector);\n  const apiPermissionGranted = useSelector(apiPermissionGrantedSelector);\n  const wishListsLastFetched = useSelector(wishListsLastFetchedSelector);\n  const wishlistSource = useSelector(settingSelector('wishListSource'));\n  const wishList = useSelector(wishListsSelector);\n  const streamDeck = useSelector(streamDeckSelector);\n  const clarityDescriptions = useSelector(clarityDescriptionsSelector);\n  const clarityCharacterStats = useSelector(clarityCharacterStatsSelector);\n\n  useLoadStores(currentAccount);\n\n  const [localStorageError, setLocalStorageError] = useState<Error>();\n  const [idbError, setIdbError] = useState<Error>();\n  useEffect(() => {\n    (async () => {\n      try {\n        await set('idb-test', true);\n      } catch (e) {\n        setIdbError(convertToError(e));\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    try {\n      localStorage.setItem('test', 'true');\n    } catch (e) {\n      setLocalStorageError(convertToError(e));\n    }\n  }, []);\n\n  const [serviceWorkers, setServiceWorkers] = useState<readonly ServiceWorkerRegistration[]>([]);\n  useEffect(() => {\n    (async () => {\n      setServiceWorkers(await navigator.serviceWorker.getRegistrations());\n    })();\n  }, []);\n\n  const isD2 = currentAccount?.destinyVersion === 2;\n  useEffect(() => {\n    if ($featureFlags.wishLists && isD2) {\n      dispatch(fetchWishList());\n    }\n  }, [dispatch, isD2]);\n\n  const now = (\n    <p>\n      <b>Now:</b> {new Date().toISOString()}\n    </p>\n  );\n\n  const weirdWishlistRoll = wishList?.wishListAndInfo?.wishListRolls.find(\n    (r) => r.recommendedPerks && !(r.recommendedPerks instanceof Set),\n  );\n\n  // TODO: If these tiles get too complicated, they could be broken out into components\n  return (\n    <div className={styles.debugPage}>\n      <p>\n        Open the debug console (F12 or Ctrl + ⇧ Shift + J on Windows, ⌘ + ⌥ Option + J on macOS, ⌘ +\n        ⌥ Option + C in Safari (after enabling it)), select the console tab, then send a screenshot\n        of this entire page and the console.\n      </p>\n      <div className={styles.cells}>\n        <section>\n          <h3>Browser</h3>\n          <p>\n            {t('Views.About.Version', {\n              version: $D2L_VERSION,\n              flavor: $D2L_FLAVOR,\n              date: new Date($D2L_BUILD_DATE).toLocaleString(),\n            })}\n          </p>\n          <p>{systemInfo}</p>\n          <p>\n            <b>User Agent:</b> {navigator.userAgent}\n          </p>\n          <p>\n            <b>navigator.platform:</b> {navigator.platform}\n          </p>\n        </section>\n\n        <section>\n          <h3>Auth Tokens</h3>\n          {now}\n          {bungieToken ? (\n            <>\n              <p>\n                <b>Membership ID:</b> {bungieToken.bungieMembershipId}\n              </p>\n              {bungieToken.accessToken && <BungieTokenState token={bungieToken.accessToken} />}\n              {bungieToken.refreshToken && <BungieTokenState token={bungieToken.refreshToken} />}\n            </>\n          ) : (\n            <p>No auth token</p>\n          )}\n        </section>\n\n        <section>\n          <h3>d2l sync Auth Tokens</h3>\n          {now}\n          {d2lApiToken ? <D2LTokenState token={d2lApiToken} /> : <p>No auth token</p>}\n        </section>\n\n        <section>\n          <h3>Accounts</h3>\n          {accounts.map((account) => (\n            <div key={`${account.membershipId}-${account.destinyVersion}`}>\n              <Account account={account} selected={account === currentAccount} />\n              {account.membershipId}\n            </div>\n          ))}\n        </section>\n\n        <section>\n          <h3>Storage</h3>\n          <p>\n            {localStorageError ? (\n              <>\n                <b>Local Storage Broken:</b> <ErrorInfo error={localStorageError} />\n              </>\n            ) : (\n              <b>Local Storage Works</b>\n            )}\n          </p>\n          <p>\n            {idbError ? (\n              <>\n                <b>IDB Broken:</b> <ErrorInfo error={idbError} />\n              </>\n            ) : (\n              <b>IDB Works</b>\n            )}\n          </p>\n          <LocalStorageInfo showDetails />\n        </section>\n\n        <section>\n          <h3>Profile Response</h3>\n          {now}\n          {profileResponse && (\n            <p>\n              <b>Minted:</b> {new Date(profileResponse?.responseMintedTimestamp).toISOString()}\n            </p>\n          )}\n          <p>\n            <b>Error:</b> {profileError ? <ErrorInfo error={profileError} /> : 'None'}\n          </p>\n        </section>\n\n        <section>\n          <h3>d2l sync</h3>\n          <p>\n            <b>API Permission Granted:</b> {JSON.stringify(apiPermissionGranted)}\n          </p>\n          {now}\n          {D2LSyncProfile ? (\n            <>\n              <p>\n                <b>Last Fetched:</b> {new Date(D2LSyncProfile.profileLastLoaded).toISOString()}\n              </p>\n              <p>\n                <b>Tags:</b> {Object.keys(D2LSyncProfile.tags).length}\n              </p>\n              <p>\n                <b>Loadouts:</b> {Object.keys(D2LSyncProfile.loadouts).length}\n              </p>\n            </>\n          ) : (\n            <p>No Profile Loaded</p>\n          )}\n          <p>\n            <b>Update Queue Size:</b> {D2LSyncUpdateQueueSize}\n          </p>\n          <p>\n            <b>Error:</b> {D2LSyncError ? <ErrorInfo error={D2LSyncError} /> : 'None'}\n          </p>\n        </section>\n\n        <section>\n          <h3>Service Worker</h3>\n          {serviceWorkers.length > 0 ? (\n            serviceWorkers.map((w, i) => (\n              <div key={i}>\n                {i}: Active: {w.active?.state || 'null'}, Waiting: {w.waiting?.state || 'null'},\n                Installing: {w.installing?.state || 'null'}\n              </div>\n            ))\n          ) : (\n            <div>Service worker not installed</div>\n          )}\n        </section>\n\n        <section>\n          <h3>Wish Lists</h3>\n          <p>\n            <b>Source:</b> {wishlistSource}\n          </p>\n          <p>\n            <b>Last Fetched:</b> {wishListsLastFetched?.toISOString() ?? 'Never'}\n          </p>\n          <p>\n            <b>Wish list rolls:</b>{' '}\n            {wishList?.wishListAndInfo?.wishListRolls.length.toLocaleString() ?? 'No wishlist'}\n          </p>\n          <p>\n            <b>Weird recommendedPerks?:</b>{' '}\n            {weirdWishlistRoll ? typeof weirdWishlistRoll.recommendedPerks : 'All good'}\n          </p>\n        </section>\n\n        <section>\n          <h3>Clarity</h3>\n          <p>\n            <b>Descriptions loaded?:</b> {JSON.stringify(Boolean(clarityDescriptions))}\n          </p>\n          <p>\n            <b>Character stats loaded?:</b> {JSON.stringify(Boolean(clarityCharacterStats))}\n          </p>\n        </section>\n\n        {$featureFlags.elgatoStreamDeck && (\n          <section>\n            <h3>Stream Deck</h3>\n            <p>\n              <b>Enabled:</b> {JSON.stringify(Boolean(streamDeck.enabled))}\n            </p>\n            <p>\n              <b>Connected:</b> {JSON.stringify(streamDeck.connected)}\n            </p>\n            <p>\n              <b>Instance:</b> {JSON.stringify(streamDeck.auth?.instance) ?? '-'}\n            </p>\n            <p>\n              <b>Token:</b> {JSON.stringify(streamDeck.auth?.token) ?? '-'}\n            </p>\n          </section>\n        )}\n\n        {$D2L_FLAVOR !== 'release' && currentAccount?.destinyVersion === 2 && (\n          <TroubleshootingSettings />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction BungieTokenState({ token }: { token: Token }) {\n  const tokenInception = new Date(token.inception);\n  const expires = new Date(token.inception + token.expires * 1000);\n  const expired = expires.getTime() < Date.now();\n  return (\n    <div className={styles.token}>\n      <p>\n        <b>Type:</b> {token.name}\n      </p>\n      <p>\n        <b>Retrieved:</b> {tokenInception.toISOString()}\n      </p>\n      <p>\n        <b>Expires:</b> {expires.toISOString()}\n      </p>\n      <p>\n        <b>Expired?:</b> {JSON.stringify(expired)}\n      </p>\n    </div>\n  );\n}\n\nfunction D2LTokenState({ token }: { token: DimAuthToken }) {\n  const tokenInception = new Date(token.inception);\n  const expires = new Date(token.inception + token.expiresInSeconds * 1000);\n  const expired = expires.getTime() < Date.now();\n  return (\n    <div className={styles.token}>\n      <p>\n        <b>Retrieved:</b> {tokenInception.toISOString()}\n      </p>\n      <p>\n        <b>Expires:</b> {expires.toISOString()}\n      </p>\n      <p>\n        <b>Expired?:</b> {JSON.stringify(expired)}\n      </p>\n    </div>\n  );\n}\n\nfunction ErrorInfo({ error }: { error: Error | DimError }) {\n  const cause = error instanceof DimError ? error.cause : undefined;\n\n  const code =\n    error instanceof DimError || error instanceof BungieError\n      ? error.code\n      : error instanceof HttpStatusError\n        ? `HTTP ${error.status}`\n        : undefined;\n\n  const name = error.name;\n  const message = error.message || 'No message';\n\n  return (\n    <>\n      <div className={styles.error}>\n        {name}\n        {code !== undefined && ' '}\n        {code}: {message}\n      </div>\n      {cause && (\n        <div>\n          Cause: <ErrorInfo error={cause} />\n        </div>\n      )}\n    </>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\activities\\Activities.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\activities\\Activities.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":133,"column":50,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":133,"endColumn":55}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import CharacterTile from 'app/character-tile/CharacterTile';\nimport CharacterSelect from 'app/d2l-ui/CharacterSelect';\nimport ShowPageLoading from 'app/d2l-ui/ShowPageLoading';\nimport { t } from 'app/i18next-t';\nimport { useLoadStores } from 'app/inventory/store/hooks';\nimport { useD1Definitions } from 'app/manifest/selectors';\nimport Objective from 'app/progress/Objective';\nimport { useIsPhonePortrait } from 'app/shell/selectors';\nimport { compareBy, compareByIndex } from 'app/utils/comparators';\nimport { emptyArray } from 'app/utils/empty';\nimport { usePageTitle } from 'app/utils/hooks';\nimport { StringLookup } from 'app/utils/util-types';\nimport clsx from 'clsx';\nimport { useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { DestinyAccount } from '../../accounts/destiny-account';\nimport BungieImage, { bungieBackgroundStyle } from '../../d2l-ui/BungieImage';\nimport CollapsibleTitle from '../../d2l-ui/CollapsibleTitle';\nimport { sortedStoresSelector } from '../../inventory/selectors';\nimport { D1Store } from '../../inventory/store-types';\nimport { AppIcon, starIcon } from '../../shell/icons';\nimport { D1ManifestDefinitions } from '../d1-definitions';\nimport { D1ActivityComponent, D1ActivityTier, D1ObjectiveProgress } from '../d1-manifest-types';\nimport styles from './Activities.m.scss';\n\ninterface Skull {\n  displayName: string;\n  description: string;\n  icon: string;\n}\n\ninterface Activity {\n  hash: number;\n  name: string;\n  icon: string;\n  image: string;\n  type: string;\n  skulls: Skull[] | null;\n  tiers: ActivityTier[];\n  featured?: boolean;\n}\n\ninterface ActivityTier {\n  hash: number;\n  icon: string;\n  name: string;\n  complete: boolean;\n  characters: {\n    name: string;\n    lastPlayed: Date;\n    id: string;\n    icon: string;\n    steps: { complete: boolean }[];\n    objectives: D1ObjectiveProgress[];\n  }[];\n}\n\nexport default function Activities({ account }: { account: DestinyAccount }) {\n  usePageTitle(t('Activities.Activities'));\n  const storesLoaded = useLoadStores(account);\n  const stores = useSelector(sortedStoresSelector);\n  const isPhonePortrait = useIsPhonePortrait();\n\n  const defs = useD1Definitions();\n  const characters = stores.filter((s) => !s.isVault) as D1Store[];\n\n  const [selectedStoreId, setSelectedStoreId] = useState<string>();\n  const selectedStore =\n    (stores.find((store) => store.id === selectedStoreId) as D1Store) || characters[0];\n\n  const activities = useActivities(\n    defs,\n    isPhonePortrait && storesLoaded ? [selectedStore] : characters,\n  );\n\n  if (!defs || !storesLoaded) {\n    return <ShowPageLoading message={t('Loading.Profile')} />;\n  }\n\n  return (\n    <div className={styles.activities}>\n      {isPhonePortrait ? (\n        <CharacterSelect\n          selectedStore={selectedStore}\n          stores={characters}\n          onCharacterChanged={setSelectedStoreId}\n        />\n      ) : (\n        <div className={styles.characters}>\n          {characters.map((store) => (\n            <CharacterTile key={store.id} store={store} />\n          ))}\n        </div>\n      )}\n\n      {activities.map((activity) => (\n        <div key={activity.hash}>\n          <CollapsibleTitle\n            style={bungieBackgroundStyle(activity.image)}\n            className={clsx(styles.title, {\n              [styles.featured]: activity.featured,\n            })}\n            sectionId={`activities-${activity.hash}`}\n            title={\n              <>\n                <BungieImage src={activity.icon} className={styles.smallIcon} />\n                <span>{activity.name}</span>\n                {activity.featured && <AppIcon icon={starIcon} />}\n              </>\n            }\n            extra={<span className={styles.activityType}>{activity.type}</span>}\n          >\n            <div className={styles.activityInfo}>\n              {activity.tiers.map(\n                (tier) =>\n                  tier.characters.some((c) => c.objectives.length || c.steps.length) && (\n                    <div key={tier.name}>\n                      {activity.tiers.length > 1 && (\n                        <div className={styles.tierTitle}>{tier.name}</div>\n                      )}\n                      <div className={styles.tierCharacters}>\n                        {tier.characters\n                          .toSorted(compareBy((c) => characters.findIndex((s) => s.id === c.id)))\n                          .map(\n                            (character) =>\n                              (!isPhonePortrait || character.id === selectedStore.id) && (\n                                <div key={character.id}>\n                                  {character.objectives.length === 0 &&\n                                    character.steps.length > 0 && (\n                                      <div className={styles.steps}>\n                                        {character.steps.map((step, index) => (\n                                          <span\n                                            key={index}\n                                            className={clsx(styles.stepIcon, {\n                                              [styles.complete]: step.complete,\n                                            })}\n                                          />\n                                        ))}\n                                      </div>\n                                    )}\n                                  {character.objectives.map((objective) => (\n                                    <Objective\n                                      objective={objective}\n                                      key={objective.objectiveHash}\n                                    />\n                                  ))}\n                                </div>\n                              ),\n                          )}\n                      </div>\n                    </div>\n                  ),\n              )}\n              {activity.skulls && (\n                <div className={styles.skulls}>\n                  {activity.skulls?.map((skull) => (\n                    <div key={skull.displayName}>\n                      <BungieImage src={skull.icon} className={styles.skullIcon} />\n                      {skull.displayName}\n                      <span className={styles.weak}> - {skull.description}</span>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </CollapsibleTitle>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction useActivities(defs: D1ManifestDefinitions | undefined, characters: D1Store[]): Activity[] {\n  return useMemo(() => {\n    const processActivity = (\n      defs: D1ManifestDefinitions,\n      activityId: string,\n      stores: D1Store[],\n      tier: D1ActivityTier,\n      index: number,\n    ): ActivityTier => {\n      const tierDef = defs.Activity.get(tier.activityHash);\n\n      const name =\n        tier.activityData.recommendedLight === 390\n          ? '390'\n          : tier.tierDisplayName\n            ? t(`Activities.${tier.tierDisplayName}`, {\n                metadata: { keys: 'difficulty' },\n              })\n            : tierDef.activityName;\n\n      const characters =\n        activityId === 'heroicstrike'\n          ? []\n          : stores.map((store) => {\n              const activity = store.advisors.activities[activityId];\n              let steps = activity.activityTiers[index].steps;\n\n              if (!steps) {\n                steps = [activity.activityTiers[index].completion];\n              }\n\n              const objectives = activity.extended?.objectives || [];\n\n              return {\n                name: store.name,\n                lastPlayed: store.lastPlayed,\n                id: store.id,\n                icon: store.icon,\n                steps,\n                objectives,\n              };\n            });\n\n      return {\n        hash: tierDef.activityHash,\n        icon: tierDef.icon,\n        name,\n        complete: tier.activityData.isCompleted,\n        characters,\n      };\n    };\n\n    const processActivities = (\n      defs: D1ManifestDefinitions,\n      stores: D1Store[],\n      rawActivity: D1ActivityComponent,\n    ): Activity => {\n      const def = defs.Activity.get(rawActivity.display.activityHash);\n      const activity = {\n        hash: rawActivity.display.activityHash,\n        name: def.activityName,\n        icon: rawActivity.display.icon,\n        image: rawActivity.display.image,\n        type:\n          rawActivity.identifier === 'nightfall'\n            ? t('Activities.Nightfall')\n            : rawActivity.identifier === 'heroicstrike'\n              ? t('Activities.WeeklyHeroic')\n              : defs.ActivityType.get(def.activityTypeHash).activityTypeName,\n        skulls: null as Skull[] | null,\n        tiers: [] as ActivityTier[],\n      };\n\n      if (rawActivity.extended) {\n        activity.skulls = rawActivity.extended.skullCategories.flatMap((s) => s.skulls);\n      }\n\n      const rawSkullCategories = rawActivity.activityTiers[0].skullCategories;\n      if (rawSkullCategories?.length) {\n        activity.skulls = rawSkullCategories[0].skulls.flat();\n      }\n\n      if (activity.skulls) {\n        activity.skulls = i18nActivitySkulls(activity.skulls, defs);\n      }\n\n      // flatten modifiers and bonuses for now.\n      if (activity.skulls) {\n        activity.skulls = activity.skulls.flat();\n      }\n      activity.tiers = rawActivity.activityTiers.map((r, i) =>\n        processActivity(defs, rawActivity.identifier, stores, r, i),\n      );\n\n      return activity;\n    };\n\n    const init = (stores: D1Store[], defs: D1ManifestDefinitions) => {\n      const allowList = [\n        'vaultofglass',\n        'crota',\n        'kingsfall',\n        'wrathofthemachine',\n        'nightfall',\n        'heroicstrike',\n        'elderchallenge',\n      ];\n\n      const activities = Object.values(stores[0].advisors.activities)\n        .filter((a) => a.activityTiers && allowList.includes(a.identifier))\n        .sort(compareByIndex(allowList, (a) => a.identifier))\n        .map((a) => processActivities(defs, stores, a));\n\n      for (const a of activities) {\n        for (const t of a.tiers) {\n          if (t.hash === stores[0].advisors.activities.weeklyfeaturedraid.display.activityHash) {\n            a.featured = true;\n            t.name = t.hash === 1387993552 ? '390' : t.name;\n          }\n        }\n      }\n\n      return activities;\n    };\n\n    if (!defs || !characters.length) {\n      return emptyArray();\n    }\n    return init(characters, defs);\n  }, [characters, defs]);\n}\n\nconst skullHashesByName: StringLookup<number> = {\n  Heroic: 0,\n  'Arc Burn': 1,\n  'Solar Burn': 2,\n  'Void Burn': 3,\n  Berserk: 4,\n  Brawler: 5,\n  Lightswitch: 6,\n  'Small Arms': 7,\n  Specialist: 8,\n  Juggler: 9,\n  Grounded: 10,\n  Bloodthirsty: 11,\n  Chaff: 12,\n  'Fresh Troops': 13,\n  Ironclad: 14,\n  'Match Game': 15,\n  Exposure: 16,\n  Airborne: 17,\n  Catapult: 18,\n  Epic: 20,\n};\n\nfunction i18nActivitySkulls(skulls: Skull[], defs: D1ManifestDefinitions): Skull[] {\n  const activity = {\n    heroic: defs.Activity.get(870614351),\n    epic: defs.Activity.get(2234107290),\n  };\n\n  for (const skull of skulls) {\n    const hash = skullHashesByName[skull.displayName];\n    if (hash) {\n      if (hash === 20) {\n        skull.displayName = activity.epic.skulls[0].displayName;\n        skull.description = activity.epic.skulls[0].description;\n      } else if (activity.heroic.skulls[hash]) {\n        skull.displayName = activity.heroic.skulls[hash].displayName;\n        skull.description = activity.heroic.skulls[hash].description;\n      }\n    }\n  }\n  return skulls;\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\d1-bucket-categories.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\d1-buckets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\d1-definitions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\d1-factions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\d1-manifest-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\D1LoadoutBuilder.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\D1LoadoutBuilder.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setStateFull' of 'useState' directly in 'useEffect'.","line":124,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":124,"endColumn":68},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setStateFull' of 'useState' directly in 'useEffect'.","line":124,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":124,"endColumn":68},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setStateFull' of 'useState' directly in 'useEffect'.","line":153,"column":9,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":156,"endColumn":12}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'stores'. Either include it or remove the dependency array.","line":161,"column":6,"nodeType":"ArrayExpression","endLine":161,"endColumn":20,"suggestions":[{"desc":"Update the dependencies array to be: [stores, storesLoaded]","fix":{"range":[5554,5568],"text":"[stores, storesLoaded]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'excludeditems' and 'vendors'. Either include them or remove the dependency array.","line":227,"column":6,"nodeType":"ArrayExpression","endLine":227,"endColumn":21,"suggestions":[{"desc":"Update the dependencies array to be: [excludeditems, vendors, vendorsLoaded]","fix":{"range":[7351,7366],"text":"[excludeditems, vendors, vendorsLoaded]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { DestinyAccount } from 'app/accounts/destiny-account';\nimport ClosableContainer from 'app/d2l-ui/ClosableContainer';\nimport PageWithMenu from 'app/d2l-ui/PageWithMenu';\nimport ShowPageLoading from 'app/d2l-ui/ShowPageLoading';\nimport Switch from 'app/d2l-ui/Switch';\nimport { t } from 'app/i18next-t';\nimport { useLoadStores } from 'app/inventory/store/hooks';\nimport { getCurrentStore } from 'app/inventory/stores-helpers';\nimport { useD1Definitions } from 'app/manifest/selectors';\nimport { D1_StatHashes, D1BucketHashes } from 'app/search/d1-known-values';\nimport { getD1QualityColor } from 'app/shell/formatters';\nimport { useThunkDispatch } from 'app/store/thunk-dispatch';\nimport { uniqBy } from 'app/utils/collections';\nimport { compareBy, reverseComparator } from 'app/utils/comparators';\nimport { itemCanBeInLoadout } from 'app/utils/item-utils';\nimport { errorLog } from 'app/utils/log';\nimport { DestinyClass } from 'bungie-api-ts/destiny2';\nimport clsx from 'clsx';\nimport { BucketHashes, ItemCategoryHashes } from 'data/d2/generated-enums';\nimport { produce } from 'immer';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CharacterSelect from '../../d2l-ui/CharacterSelect';\nimport CollapsibleTitle from '../../d2l-ui/CollapsibleTitle';\nimport ErrorBoundary from '../../d2l-ui/ErrorBoundary';\nimport { D1GridNode, D1Item, DimItem } from '../../inventory/item-types';\nimport { bucketsSelector, sortedStoresSelector } from '../../inventory/selectors';\nimport { D1Store } from '../../inventory/store-types';\nimport { AppIcon, refreshIcon } from '../../shell/icons';\nimport { loadVendors, Vendor } from '../vendors/vendor.service';\nimport styles from './D1LoadoutBuilder.m.scss';\nimport ExcludeItemsDropTarget from './ExcludeItemsDropTarget';\nimport GeneratedSet from './GeneratedSet';\nimport LoadoutBuilderItem from './LoadoutBuilderItem';\nimport LoadoutBuilderLockPerk from './LoadoutBuilderLockPerk';\nimport { getSetBucketsStep } from './calculate';\nimport {\n  ArmorTypes,\n  ClassTypes,\n  D1ItemWithNormalStats,\n  LockedPerkHash,\n  PerkCombination,\n  SetType,\n} from './types';\nimport { getActiveHighestSets, loadBucket, loadVendorsBucket, mergeBuckets } from './utils';\n\ninterface State {\n  selectedCharacter?: D1Store;\n  excludeditems: D1Item[];\n  lockedperks: { [armorType in ArmorTypes]: LockedPerkHash };\n  activesets: string;\n  scaleType: 'base' | 'scaled';\n  progress: number;\n  fullMode: boolean;\n  includeVendors: boolean;\n  allSetTiers: string[];\n  highestsets: { [setHash: number]: SetType };\n  lockeditems: { [armorType in ArmorTypes]: D1ItemWithNormalStats | null };\n  vendors?: {\n    [vendorHash: number]: Vendor;\n  };\n  loadingVendors: boolean;\n}\n\nexport const d1ArmorTypes = [\n  BucketHashes.Helmet,\n  BucketHashes.Gauntlets,\n  BucketHashes.ChestArmor,\n  BucketHashes.LegArmor,\n  BucketHashes.ClassArmor,\n  D1BucketHashes.Artifact,\n  BucketHashes.Ghost,\n] as ArmorTypes[];\nconst allClassTypes: ClassTypes[] = [DestinyClass.Titan, DestinyClass.Warlock, DestinyClass.Hunter];\n\nconst initialState: State = {\n  activesets: '5/5/2',\n  scaleType: 'scaled',\n  progress: 0,\n  fullMode: false,\n  includeVendors: false,\n  loadingVendors: false,\n  allSetTiers: [],\n  highestsets: {},\n  excludeditems: [],\n  lockeditems: {\n    [BucketHashes.Helmet]: null,\n    [BucketHashes.Gauntlets]: null,\n    [BucketHashes.ChestArmor]: null,\n    [BucketHashes.LegArmor]: null,\n    [BucketHashes.ClassArmor]: null,\n    [D1BucketHashes.Artifact]: null,\n    [BucketHashes.Ghost]: null,\n  },\n  lockedperks: {\n    [BucketHashes.Helmet]: {},\n    [BucketHashes.Gauntlets]: {},\n    [BucketHashes.ChestArmor]: {},\n    [BucketHashes.LegArmor]: {},\n    [BucketHashes.ClassArmor]: {},\n    [D1BucketHashes.Artifact]: {},\n    [BucketHashes.Ghost]: {},\n  },\n};\n\nconst unwantedPerkHashes = [\n  1270552711, // Infuse\n  217480046, // Twist Fate\n  191086989, // Reforge Artifact\n  913963685, // Reforge Shell\n  1034209669, // Increase Intellect\n  1263323987, // Increase Discipline\n  193091484, // Increase Strength\n  2133116599, // Deactivate Chroma\n];\n\nexport default function D1LoadoutBuilder({ account }: { account: DestinyAccount }) {\n  const buckets = useSelector(bucketsSelector);\n  const stores = useSelector(sortedStoresSelector) as D1Store[];\n  const defs = useD1Definitions();\n\n  const [state, setStateFull] = useState(initialState);\n  const setState = (partialState: Partial<State>) =>\n    setStateFull((state: State) => ({ ...state, ...partialState }));\n  const cancelToken = useRef({ cancelled: false });\n  const dispatch = useThunkDispatch();\n  const storesLoaded = useLoadStores(account);\n\n  const {\n    includeVendors,\n    loadingVendors,\n    excludeditems,\n    progress,\n    allSetTiers,\n    fullMode,\n    scaleType,\n    activesets,\n    lockeditems,\n    lockedperks,\n    highestsets,\n    vendors,\n  } = state;\n\n  const selectedCharacter = state.selectedCharacter || getCurrentStore(stores);\n\n  useEffect(() => {\n    if (storesLoaded) {\n      // Exclude felwinters if we have them, but only the first time stores load\n      const felwinters = stores.flatMap((store) =>\n        store.items.filter((i) => i.hash === 2672107540),\n      );\n      if (felwinters.length) {\n        setStateFull((state) => ({\n          ...state,\n          excludeditems: uniqBy([...state.excludeditems, ...felwinters], (i) => i.id),\n        }));\n      }\n    }\n    // Only depend on storesLoaded because we only want this to run once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [storesLoaded]);\n\n  useEffect(() => {\n    // TODO: replace progress with state field (calculating/done)\n    if (defs && selectedCharacter && stores.length && !progress) {\n      (async () => {\n        cancelToken.current.cancelled = true;\n        cancelToken.current = {\n          cancelled: false,\n        };\n        const result = await getSetBucketsStep(\n          defs,\n          loadBucket(selectedCharacter, stores),\n          loadVendorsBucket(selectedCharacter, vendors),\n          lockeditems,\n          lockedperks,\n          excludeditems,\n          scaleType,\n          includeVendors,\n          fullMode,\n          cancelToken.current,\n        );\n        setState({ ...result, progress: 1 });\n      })();\n    }\n  }, [\n    defs,\n    selectedCharacter,\n    excludeditems,\n    fullMode,\n    includeVendors,\n    lockeditems,\n    lockedperks,\n    progress,\n    scaleType,\n    vendors,\n    stores,\n  ]);\n\n  useEffect(() => {\n    if (includeVendors && !vendors && !loadingVendors) {\n      setState({ loadingVendors: true });\n      dispatch(loadVendors()).then((vendors) => {\n        setState({ vendors, loadingVendors: false });\n      });\n    }\n  }, [dispatch, includeVendors, loadingVendors, vendors]);\n\n  const vendorsLoaded = Boolean(vendors);\n\n  useEffect(() => {\n    if (vendorsLoaded) {\n      const felwinters = Object.values(vendors!).flatMap((vendor) =>\n        vendor.allItems.filter((i) => i.item.hash === 2672107540),\n      );\n      if (felwinters.length) {\n        setState({\n          excludeditems: uniqBy(\n            [...excludeditems, ...felwinters.map((si) => si.item)],\n            (i) => i.id,\n          ),\n        });\n      }\n    }\n    // Only depend on vendorsLoaded because we only want this to run once\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [vendorsLoaded]);\n\n  const activePerks = useActivePerks({\n    classType: selectedCharacter?.classType,\n    vendors,\n    includeVendors,\n    stores,\n  });\n\n  const onFullModeChanged: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const fullMode = e.target.value === 'true';\n    setState({ fullMode, progress: 0 });\n  };\n\n  const onChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    if (e.target.name.length === 0) {\n      errorLog('loadout optimizer', new Error('You need to have a name on the form input'));\n    }\n\n    setState({\n      [e.target.name]: e.target.value,\n      progress: 0,\n    });\n  };\n\n  const onActiveSetsChange: React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const activesets = e.target.value;\n    setState({\n      activesets,\n    });\n  };\n\n  const onSelectedChange = (storeId: string) => {\n    // TODO: reset more state??\n    setState({\n      selectedCharacter: stores.find((s) => s.id === storeId),\n      progress: 0,\n    });\n  };\n\n  const onIncludeVendorsChange = (includeVendors: boolean) => {\n    setState({ includeVendors, progress: 0 });\n  };\n\n  const onPerkLocked = (perk: D1GridNode, type: ArmorTypes, $event: React.MouseEvent) => {\n    const { lockedperks } = state;\n    const lockedPerk = lockedperks[type][perk.hash];\n    const activeType = $event.shiftKey\n      ? lockedPerk?.lockType === 'and'\n        ? 'none'\n        : 'and'\n      : lockedPerk?.lockType === 'or'\n        ? 'none'\n        : 'or';\n\n    const newLockedPerks = produce(lockedperks, (lockedperks) => {\n      if (activeType === 'none') {\n        delete lockedperks[type][perk.hash];\n      } else {\n        lockedperks[type][perk.hash] = {\n          icon: perk.icon,\n          description: perk.description,\n          lockType: activeType,\n        };\n      }\n    });\n\n    setState({ lockedperks: newLockedPerks, progress: 0 });\n  };\n\n  const onItemLocked = (item: DimItem) => {\n    setStateFull((state) => ({\n      ...state,\n      lockeditems: { ...state.lockeditems, [item.bucket.hash]: item },\n      progress: 0,\n    }));\n  };\n\n  const onRemove = ({ type }: { type: ArmorTypes }) => {\n    setStateFull((state) => ({\n      ...state,\n      lockeditems: { ...state.lockeditems, [type]: null },\n      progress: 0,\n    }));\n  };\n\n  const excludeItem = (item: D1Item) => {\n    setStateFull((state) => ({\n      ...state,\n      excludeditems: [...state.excludeditems, item],\n      progress: 0,\n    }));\n  };\n\n  const onExcludedRemove = (item: DimItem) => {\n    setStateFull((state) => ({\n      ...state,\n      excludeditems: state.excludeditems.filter(\n        (excludeditem) => excludeditem.index !== item.index,\n      ),\n      progress: 0,\n    }));\n  };\n\n  const lockEquipped = () => {\n    const items = Map.groupBy(\n      selectedCharacter!.items.filter(\n        (item) =>\n          itemCanBeInLoadout(item) && item.equipped && d1ArmorTypes.includes(item.bucket.hash),\n      ),\n      (i) => i.bucket.hash as ArmorTypes,\n    );\n\n    function nullWithoutStats(items: DimItem[] | undefined) {\n      return items?.[0].stats ? (items[0] as D1Item) : null;\n    }\n\n    // Do not lock items with no stats\n    setState({\n      lockeditems: {\n        [BucketHashes.Helmet]: nullWithoutStats(items.get(BucketHashes.Helmet)),\n        [BucketHashes.Gauntlets]: nullWithoutStats(items.get(BucketHashes.Gauntlets)),\n        [BucketHashes.ChestArmor]: nullWithoutStats(items.get(BucketHashes.ChestArmor)),\n        [BucketHashes.LegArmor]: nullWithoutStats(items.get(BucketHashes.LegArmor)),\n        [BucketHashes.ClassArmor]: nullWithoutStats(items.get(BucketHashes.ClassArmor)),\n        [D1BucketHashes.Artifact]: nullWithoutStats(items.get(D1BucketHashes.Artifact)),\n        [BucketHashes.Ghost]: nullWithoutStats(items.get(BucketHashes.Ghost)),\n      },\n      progress: 0,\n    });\n  };\n\n  const clearLocked = () => {\n    setState({\n      lockeditems: {\n        [BucketHashes.Helmet]: null,\n        [BucketHashes.Gauntlets]: null,\n        [BucketHashes.ChestArmor]: null,\n        [BucketHashes.LegArmor]: null,\n        [BucketHashes.ClassArmor]: null,\n        [D1BucketHashes.Artifact]: null,\n        [BucketHashes.Ghost]: null,\n      },\n      activesets: '',\n      progress: 0,\n    });\n  };\n\n  if (!selectedCharacter || !stores.length || !buckets || !defs || !activePerks) {\n    return <ShowPageLoading message={t('Loading.Profile')} />;\n  }\n\n  const hasSets = allSetTiers.length > 0;\n\n  const activeHighestSets = getActiveHighestSets(highestsets, activesets);\n\n  const i18nItemNames = Object.fromEntries(\n    d1ArmorTypes.map((type, i) => [\n      type,\n      defs.ItemCategory.get(\n        [\n          ItemCategoryHashes.Helmets,\n          ItemCategoryHashes.Arms,\n          ItemCategoryHashes.Chest,\n          ItemCategoryHashes.Legs,\n          ItemCategoryHashes.ClassItems,\n          38, // D1 Artifact\n          ItemCategoryHashes.Ghost,\n        ][i],\n      ).title,\n    ]),\n  ) as { [key in ArmorTypes]: string };\n\n  return (\n    <PageWithMenu className=\"itemQuality\">\n      <PageWithMenu.Menu>\n        <CharacterSelect\n          selectedStore={selectedCharacter}\n          stores={stores}\n          onCharacterChanged={onSelectedChange}\n        />\n      </PageWithMenu.Menu>\n      <PageWithMenu.Contents>\n        <CollapsibleTitle\n          defaultCollapsed={true}\n          sectionId=\"lb1-classitems\"\n          title={t('LB.ShowGear', { class: selectedCharacter.className })}\n        >\n          <div className={styles.section}>\n            <ArmorForClass\n              i18nItemNames={i18nItemNames}\n              selectedCharacter={selectedCharacter}\n              stores={stores}\n              includeVendors={includeVendors}\n              loadingVendors={loadingVendors}\n              onIncludeVendorsChange={onIncludeVendorsChange}\n              excludeItem={excludeItem}\n            />\n          </div>\n        </CollapsibleTitle>\n        <div className={styles.section}>\n          <div className={styles.controls}>\n            <button type=\"button\" className=\"d2l-button\" onClick={lockEquipped}>\n              {t('LB.LockEquipped')}\n            </button>\n            <button type=\"button\" className=\"d2l-button\" onClick={clearLocked}>\n              {t('LB.ClearLocked')}\n            </button>\n            <span>\n              {t('LB.Locked')} - <small>{t('LB.LockedHelp')}</small>\n            </span>\n          </div>\n          <div className={styles.itemRow}>\n            {Object.entries(lockeditems).map(([type, lockeditem]) => (\n              <LoadoutBuilderLockPerk\n                key={type}\n                lockeditem={lockeditem}\n                activePerks={activePerks}\n                lockedPerks={lockedperks}\n                type={parseInt(type, 10) as ArmorTypes}\n                i18nItemNames={i18nItemNames}\n                onRemove={onRemove}\n                onPerkLocked={onPerkLocked}\n                onItemLocked={onItemLocked}\n              />\n            ))}\n          </div>\n        </div>\n        {excludeditems.length > 0 && (\n          <div className={styles.section}>\n            <p>\n              <span>{t('LB.Exclude')}</span> - <small>{t('LB.ExcludeHelp')}</small>\n            </p>\n            <div className={styles.itemRow}>\n              <ExcludeItemsDropTarget onExcluded={excludeItem} className={styles.excludedItems}>\n                {excludeditems.map((excludeditem) => (\n                  <ClosableContainer\n                    key={excludeditem.index}\n                    onClose={() => onExcludedRemove(excludeditem)}\n                  >\n                    <LoadoutBuilderItem item={excludeditem} />\n                  </ClosableContainer>\n                ))}\n              </ExcludeItemsDropTarget>\n            </div>\n          </div>\n        )}\n        {progress >= 1 && hasSets && (\n          <SetControls\n            allSetTiers={allSetTiers}\n            activesets={activesets}\n            fullMode={fullMode}\n            scaleType={scaleType}\n            onActiveSetsChange={onActiveSetsChange}\n            onFullModeChanged={onFullModeChanged}\n            onChangeScaleType={onChange}\n          />\n        )}\n        {progress >= 1 && !hasSets && (\n          <div>\n            <p>{t('LB.Missing2')}</p>\n          </div>\n        )}\n        {progress < 1 && hasSets && (\n          <div>\n            <p>\n              {t('LB.Loading')} <AppIcon spinning={true} icon={refreshIcon} />\n            </p>\n          </div>\n        )}\n        {progress >= 1 && (\n          <ErrorBoundary name=\"Generated Sets\">\n            <div className={styles.section}>\n              {activeHighestSets.map((setType) => (\n                <GeneratedSet\n                  key={setType.set.setHash}\n                  store={selectedCharacter}\n                  setType={setType}\n                  activesets={activesets}\n                  excludeItem={excludeItem}\n                />\n              ))}\n            </div>\n          </ErrorBoundary>\n        )}\n      </PageWithMenu.Contents>\n    </PageWithMenu>\n  );\n}\n\nfunction SetControls({\n  allSetTiers,\n  activesets,\n  fullMode,\n  scaleType,\n  onActiveSetsChange,\n  onFullModeChanged,\n  onChangeScaleType,\n}: {\n  allSetTiers: string[];\n  activesets: string;\n  fullMode: boolean;\n  scaleType: 'base' | 'scaled';\n  onActiveSetsChange: React.ChangeEventHandler<HTMLSelectElement>;\n  onFullModeChanged: React.ChangeEventHandler<HTMLSelectElement>;\n  onChangeScaleType: React.ChangeEventHandler<HTMLSelectElement>;\n}) {\n  const [showAdvanced, setShowAdvanced] = useState(false);\n  const [showHelp, setShowHelp] = useState(false);\n  const toggleShowHelp = () => setShowHelp((show) => !show);\n  const toggleShowAdvanced = () => setShowAdvanced((show) => !show);\n\n  return (\n    <div className={styles.section}>\n      <div className={styles.controls}>\n        <div>\n          <span>\n            {t('LB.FilterSets')} ({t('Stats.Intellect')}/{t('Stats.Discipline')}/\n            {t('Stats.Strength')}):{' '}\n          </span>\n          <select name=\"activesets\" onChange={onActiveSetsChange} value={activesets}>\n            {allSetTiers.map((val) => (\n              <option key={val} disabled={val.startsWith('-')} value={val}>\n                {val}\n              </option>\n            ))}\n          </select>\n        </div>\n        <button type=\"button\" className=\"d2l-button\" onClick={toggleShowAdvanced}>\n          {t('LB.AdvancedOptions')}\n        </button>\n        <button type=\"button\" className=\"d2l-button\" onClick={toggleShowHelp}>\n          {t('LB.Help.Help')}\n        </button>\n      </div>\n      <span>\n        {showAdvanced && (\n          <div>\n            <p>\n              <label>\n                <select\n                  name=\"fullMode\"\n                  onChange={onFullModeChanged}\n                  value={fullMode ? 'true' : 'false'}\n                >\n                  <option value=\"false\">{t('LB.ProcessingMode.Fast')}</option>\n                  <option value=\"true\">{t('LB.ProcessingMode.Full')}</option>\n                </select>{' '}\n                <span>{t('LB.ProcessingMode.ProcessingMode')}</span>\n              </label>\n              <small>\n                {' '}\n                - {fullMode ? t('LB.ProcessingMode.HelpFull') : t('LB.ProcessingMode.HelpFast')}\n              </small>\n            </p>\n            <p>\n              <label>\n                <select name=\"scaleType\" value={scaleType} onChange={onChangeScaleType}>\n                  <option value=\"scaled\">{t('LB.Scaled')}</option>\n                  <option value=\"base\">{t('LB.Current')}</option>\n                </select>{' '}\n                <span>{t('LB.LightMode.LightMode')}</span>\n              </label>\n              <small>\n                {' '}\n                - {scaleType === 'scaled' && t('LB.LightMode.HelpScaled')}\n                {scaleType === 'base' && t('LB.LightMode.HelpCurrent')}\n              </small>\n            </p>\n          </div>\n        )}\n      </span>\n      <span>\n        {showHelp && (\n          <div>\n            <ul>\n              <li>{t('LB.Help.Lock')}</li>\n              <ul>\n                <li>{t('LB.Help.NoPerk')}</li>\n                <li>{t('LB.Help.MultiPerk')}</li>\n                <li>\n                  <div className={clsx(styles.example, styles.or)}>- {t('LB.Help.Or')}</div>\n                </li>\n                <li>\n                  <div className={clsx(styles.example, styles.and)}>- {t('LB.Help.And')}</div>\n                </li>\n              </ul>\n              <li>{t('LB.Help.DragAndDrop')}</li>\n              <li>{t('LB.Help.ShiftClick')}</li>\n              <li>{t('LB.Help.HigherTiers')}</li>\n              <ul>\n                <li>{t('LB.Help.Tier11Example')}</li>\n                <li>{t('LB.Help.Intellect')}</li>\n                <li>{t('LB.Help.Discipline')}</li>\n                <li>{t('LB.Help.Strength')}</li>\n              </ul>\n              <li>{t('LB.Help.Synergy')}</li>\n              <li>{t('LB.Help.ChangeNodes')}</li>\n              <li>{t('LB.Help.StatsIncrease')}</li>\n            </ul>\n          </div>\n        )}\n      </span>\n    </div>\n  );\n}\n\nfunction ArmorForClass({\n  i18nItemNames,\n  selectedCharacter,\n  stores,\n  vendors,\n  includeVendors,\n  loadingVendors,\n  onIncludeVendorsChange,\n  excludeItem,\n}: {\n  i18nItemNames: { [key in ArmorTypes]: string };\n  selectedCharacter: D1Store;\n  stores: D1Store[];\n  vendors?: {\n    [vendorHash: number]: Vendor;\n  };\n  includeVendors: boolean;\n  loadingVendors: boolean;\n  onIncludeVendorsChange: (includeVendors: boolean) => void;\n  excludeItem: (item: D1Item) => void;\n}) {\n  const [type, setType] = useState<ArmorTypes>(BucketHashes.Helmet);\n\n  // Armor of each type on a particular character\n  // TODO: don't even need to load this much!\n  let bucket = loadBucket(selectedCharacter, stores);\n  if (includeVendors) {\n    bucket = mergeBuckets(bucket, loadVendorsBucket(selectedCharacter, vendors));\n  }\n\n  const items = bucket[type]\n    .filter((i) => i.power >= 280)\n    .sort(reverseComparator(compareBy((i) => i.quality?.min ?? 0)));\n\n  return (\n    <>\n      <div className={styles.controls}>\n        <div>\n          {/* TODO: break into its own component */}\n          <span>{t('Bucket.Armor')}:</span>{' '}\n          <select name=\"type\" value={type} onChange={(e) => setType(parseInt(e.target.value, 10))}>\n            {d1ArmorTypes.map((type) => (\n              <option key={type} value={type}>\n                {i18nItemNames[type]}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <Switch\n            name=\"includeVendors\"\n            checked={includeVendors}\n            onChange={onIncludeVendorsChange}\n          />\n          <label htmlFor=\"includeVendors\">{t('LB.Vendor')}</label>\n        </div>\n        {loadingVendors && <AppIcon spinning={true} icon={refreshIcon} />}\n      </div>\n      <div className={styles.itemRow}>\n        {items.map((item) => (\n          <div key={item.index}>\n            {item.stats?.map((stat) => (\n              <div\n                key={stat.statHash}\n                style={getD1QualityColor(\n                  item.normalStats![stat.statHash].qualityPercentage,\n                  'color',\n                )}\n              >\n                {item.normalStats![stat.statHash].scaled === 0 && <small>-</small>}\n                {item.normalStats![stat.statHash].scaled > 0 && (\n                  <span>\n                    <small>{item.normalStats![stat.statHash].scaled}</small>/\n                    <small>{stat.split}</small>\n                  </span>\n                )}\n              </div>\n            ))}\n            <LoadoutBuilderItem shiftClickCallback={excludeItem} item={item} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nfunction filterPerks(perks: D1GridNode[], item: D1Item) {\n  if (!item.talentGrid) {\n    return [];\n  }\n  return uniqBy(perks.concat(item.talentGrid.nodes), (node) => node.hash).filter(\n    (node) => !unwantedPerkHashes.includes(node.hash),\n  );\n}\n\nfunction useActivePerks({\n  classType,\n  vendors,\n  includeVendors,\n  stores,\n}: {\n  classType: DestinyClass | undefined;\n  vendors:\n    | {\n        [vendorHash: number]: Vendor;\n      }\n    | undefined;\n  includeVendors: boolean;\n  stores: D1Store[];\n}) {\n  return useMemo(() => {\n    if (classType === undefined) {\n      return undefined;\n    }\n\n    const emptyPerks = {\n      [BucketHashes.Helmet]: [],\n      [BucketHashes.Gauntlets]: [],\n      [BucketHashes.ChestArmor]: [],\n      [BucketHashes.LegArmor]: [],\n      [BucketHashes.ClassArmor]: [],\n      [D1BucketHashes.Artifact]: [],\n      [BucketHashes.Ghost]: [],\n    };\n    const perks: { [classType in ClassTypes]: PerkCombination } = {\n      [DestinyClass.Warlock]: structuredClone(emptyPerks),\n      [DestinyClass.Titan]: structuredClone(emptyPerks),\n      [DestinyClass.Hunter]: structuredClone(emptyPerks),\n    };\n\n    const vendorPerks: { [classType in ClassTypes]: PerkCombination } = structuredClone(perks);\n\n    function filterItems(items: readonly D1Item[]) {\n      return items.filter(\n        (item) =>\n          item.primaryStat?.statHash === D1_StatHashes.Defense &&\n          item.talentGrid?.nodes &&\n          item.stats,\n      );\n    }\n\n    let allItems: D1Item[] = [];\n    let vendorItems: D1Item[] = [];\n    for (const store of stores) {\n      const items = filterItems(store.items);\n\n      allItems = allItems.concat(items);\n\n      // Build a map of perks\n      for (const item of items) {\n        const itemType = item.bucket.hash as ArmorTypes;\n        if (item.classType === DestinyClass.Unknown) {\n          for (const classType of allClassTypes) {\n            perks[classType][itemType] = filterPerks(perks[classType][itemType], item);\n          }\n        } else if (item.classType !== DestinyClass.Classified) {\n          perks[item.classType][itemType] = filterPerks(perks[item.classType][itemType], item);\n        }\n      }\n    }\n\n    if (vendors && includeVendors) {\n      // Process vendors here\n      for (const vendor of Object.values(vendors)) {\n        const vendItems = filterItems(\n          vendor.allItems\n            .map((i) => i.item)\n            .filter(\n              (item) =>\n                item.bucket.sort === 'Armor' ||\n                item.bucket.hash === D1BucketHashes.Artifact ||\n                item.bucket.hash === BucketHashes.Ghost,\n            ),\n        );\n        vendorItems = vendorItems.concat(vendItems);\n\n        // Build a map of perks\n        for (const item of vendItems) {\n          const itemType = item.bucket.hash as ArmorTypes;\n          if (item.classType === DestinyClass.Unknown) {\n            for (const classType of allClassTypes) {\n              vendorPerks[classType][itemType] = filterPerks(\n                vendorPerks[classType][itemType],\n                item,\n              );\n            }\n          } else if (item.classType !== DestinyClass.Classified) {\n            vendorPerks[item.classType][itemType] = filterPerks(\n              vendorPerks[item.classType][itemType],\n              item,\n            );\n          }\n        }\n      }\n\n      // Remove overlapping perks in allPerks from vendorPerks\n      for (const [classType, perksWithType] of Object.entries(vendorPerks) as unknown as [\n        ClassTypes,\n        PerkCombination,\n      ][]) {\n        for (const [type, perkArr] of Object.entries(perksWithType) as unknown as [\n          ArmorTypes,\n          D1GridNode[],\n        ][]) {\n          vendorPerks[classType][type] = perkArr.filter(\n            (perk) => !perks[classType][type].map((i) => i.hash).includes(perk.hash),\n          );\n        }\n      }\n    }\n\n    return mergeBuckets<D1GridNode[]>(\n      perks[classType as ClassTypes],\n      vendorPerks[classType as ClassTypes],\n    );\n  }, [classType, vendors, includeVendors, stores]);\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\ExcludeItemsDropTarget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\GeneratedSet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\GeneratedSet.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":100,"column":29,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":100,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { t } from 'app/i18next-t';\nimport { findItemsByBucket } from 'app/inventory/stores-helpers';\nimport { applyLoadout } from 'app/loadout-drawer/loadout-apply';\nimport { editLoadout } from 'app/loadout-drawer/loadout-events';\nimport { Loadout } from 'app/loadout/loadout-types';\nimport { D1CharacterStats } from 'app/store-stats/D1CharacterStats';\nimport { useThunkDispatch } from 'app/store/thunk-dispatch';\nimport { filterMap } from 'app/utils/collections';\nimport { BucketHashes } from 'data/d2/generated-enums';\nimport { useState } from 'react';\nimport { D1Item } from '../../inventory/item-types';\nimport { DimStore } from '../../inventory/store-types';\nimport ItemTalentGrid from '../../item-popup/ItemTalentGrid';\nimport { convertToLoadoutItem, newLoadout } from '../../loadout-drawer/loadout-utils';\nimport { AppIcon, faMinusSquare, faPlusSquare } from '../../shell/icons';\nimport { d1ArmorTypes } from './D1LoadoutBuilder';\nimport styles from './GeneratedSet.m.scss';\nimport LoadoutBuilderItem from './LoadoutBuilderItem';\nimport { ArmorSet, ArmorTypes, SetType } from './types';\n\ninterface Props {\n  store: DimStore;\n  setType: SetType;\n  activesets: string;\n  excludeItem: (item: D1Item) => void;\n}\n\nexport default function GeneratedSet({ setType, store, activesets, excludeItem }: Props) {\n  const [collapsed, setCollapsed] = useState(true);\n  const dispatch = useThunkDispatch();\n  const subclass = findItemsByBucket(store, BucketHashes.Subclass).find((i) => i.equipped);\n\n  const toggle = () => setCollapsed((collapsed) => !collapsed);\n\n  const makeLoadoutFromSet = (set: ArmorSet): Loadout => {\n    const items = filterMap(d1ArmorTypes, (bucketHash) => set.armor[bucketHash]?.item);\n\n    const loadout = newLoadout(\n      '',\n      items.map((i) => convertToLoadoutItem(i, true)),\n      store.classType,\n    );\n    return loadout;\n  };\n\n  const makeNewLoadout = (set: ArmorSet) => {\n    editLoadout(makeLoadoutFromSet(set), store.id, {\n      showClass: false,\n    });\n  };\n  const equipItems = (set: ArmorSet) =>\n    dispatch(applyLoadout(store, makeLoadoutFromSet(set), { allowUndo: true }));\n\n  return (\n    <div key={setType.set.setHash} className={styles.loadout}>\n      <div className={styles.controls}>\n        {setType.set.includesVendorItems ? (\n          <span>{t('LB.ContainsVendorItems')}</span>\n        ) : (\n          <>\n            <button\n              type=\"button\"\n              className=\"d2l-button\"\n              onClick={() => makeNewLoadout(setType.set)}\n            >\n              {t('Loadouts.Create')}\n            </button>\n            <button type=\"button\" className=\"d2l-button\" onClick={() => equipItems(setType.set)}>\n              {t('LB.Equip', { character: store.name })}\n            </button>\n          </>\n        )}\n        <div className={styles.d2lStats}>\n          <D1CharacterStats stats={setType.tiers[activesets].stats} subclassHash={subclass?.hash} />\n        </div>\n      </div>\n      <div className={styles.set}>\n        {Object.entries(setType.set.armor).map(([type, armorpiece]) => (\n          <div key={type} className={styles.setItem}>\n            <LoadoutBuilderItem shiftClickCallback={excludeItem} item={armorpiece.item} />\n            <ItemTalentGrid item={armorpiece.item} className={styles.talentGrid} perksOnly={true} />\n            <div className={styles.label}>\n              {setType.tiers[activesets].configs[0][armorpiece.item.bucket.hash as ArmorTypes] ===\n              'int'\n                ? t('Stats.Intellect')\n                : setType.tiers[activesets].configs[0][\n                      armorpiece.item.bucket.hash as ArmorTypes\n                    ] === 'dis'\n                  ? t('Stats.Discipline')\n                  : setType.tiers[activesets].configs[0][\n                        armorpiece.item.bucket.hash as ArmorTypes\n                      ] === 'str'\n                    ? t('Stats.Strength')\n                    : t('Stats.NoBonus')}\n            </div>\n            {setType.tiers[activesets].configs.map(\n              (config, i) =>\n                i > 0 &&\n                !collapsed && (\n                  <div key={i} className={styles.label}>\n                    {config[armorpiece.item.bucket.hash as ArmorTypes] === 'int'\n                      ? t('Stats.Intellect')\n                      : config[armorpiece.item.bucket.hash as ArmorTypes] === 'dis'\n                        ? t('Stats.Discipline')\n                        : config[armorpiece.item.bucket.hash as ArmorTypes] === 'str'\n                          ? t('Stats.Strength')\n                          : t('Stats.NoBonus')}\n                  </div>\n                ),\n            )}\n          </div>\n        ))}\n      </div>\n      {setType.tiers[activesets].configs.length > 1 && (\n        <div className={styles.expandConfigs} onClick={toggle}>\n          {!collapsed ? (\n            <>\n              <AppIcon icon={faMinusSquare} title={t('LB.HideConfigs')} />\n              {t('LB.HideAllConfigs')}\n            </>\n          ) : (\n            <>\n              <AppIcon icon={faPlusSquare} title={t('LB.ShowConfigs')} />\n              {t('LB.ShowAllConfigs')}\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\LoadoutBuilderDropTarget.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\LoadoutBuilderDropTarget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\LoadoutBuilderItem.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\LoadoutBuilderItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\LoadoutBuilderLockPerk.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\LoadoutBuilderLockPerk.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\LoadoutBuilderLocksDialog.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\LoadoutBuilderLocksDialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\calculate.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-builder\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\Buttons.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\Buttons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\D1LoadoutDrawer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\D1LoadoutDrawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\LoadoutDrawerBucket.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\LoadoutDrawerBucket.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\LoadoutDrawerContents.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\LoadoutDrawerContents.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\LoadoutDrawerItem.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\LoadoutDrawerItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\LoadoutDrawerOptions.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\loadout-drawer\\LoadoutDrawerOptions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\record-books\\RecordBooks.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\record-books\\RecordBooks.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\vendors\\D1Vendor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\vendors\\D1VendorItem.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\vendors\\D1VendorItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\vendors\\D1VendorItems.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\vendors\\D1Vendors.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\vendors\\D1Vendors.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny1\\vendors\\vendor.service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny2\\d2-bucket-categories.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny2\\d2-buckets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny2\\d2-definitions.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny2\\d2-definitions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\destiny2\\definitions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\developer\\Developer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\developer\\developer-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\farming\\Farming.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\farming\\Farming.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\farming\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\farming\\basic-actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\farming\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\farming\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\gear-power\\GearPower.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\gear-power\\GearPower.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\gear-power\\gear-power.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\google.ts","messages":[],"suppressedMessages":[{"ruleId":"prefer-rest-params","severity":2,"message":"Use the rest parameters instead of 'arguments'.","line":15,"column":25,"nodeType":"Identifier","messageId":"preferRestParams","endLine":15,"endColumn":34,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\hotkeys\\GlobalHotkeys.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\hotkeys\\HotkeysCheatSheet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\hotkeys\\HotkeysCheatSheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\hotkeys\\hotkeys.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\hotkeys\\hotkeys.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\hotkeys\\useHotkey.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\i18n.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/prefer-promise-reject-errors","severity":2,"message":"Expected the Promise rejection reason to be an Error.","line":140,"column":11,"nodeType":"CallExpression","messageId":"rejectAnError","endLine":140,"endColumn":24,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\i18next-t.ts","messages":[],"suppressedMessages":[{"ruleId":"no-restricted-imports","severity":2,"message":"'t' import from 'i18next' is restricted. Please import t from app/i18next-t.","line":3,"column":10,"nodeType":"ImportDeclaration","messageId":"importNameWithCustomMessage","endLine":3,"endColumn":24,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\infuse\\InfusionFinder.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\infuse\\InfusionFinder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\infuse\\infuse.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\CategoryStrip.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\CategoryStrip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\D1Reputation.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\D1Reputation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\D1ReputationSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\DesktopStores.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\DesktopStores.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\HeaderShadowDiv.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\HeaderShadowDiv.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\Inventory.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\InventoryCollapsibleTitle.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\InventoryCollapsibleTitle.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\PhoneStores.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\PhoneStores.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\PhoneStoresHeader.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\PhoneStoresHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\StoreBucket.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\StoreBucket.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\StoreBucketDropTarget.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\StoreBucketDropTarget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\StoreBuckets.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\StoreBuckets.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\StoreInventoryItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory-page\\Stores.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ArtifactXP.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ArtifactXP.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\BadgeInfo.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\BadgeInfo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ConnectedInventoryItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\DragPerformanceFix.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\DragPerformanceFix.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\DraggableInventoryItem.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\DraggableInventoryItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\InventoryItem.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\InventoryItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ItemDragPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ItemIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ItemIcon.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":94,"column":25,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":94,"endColumn":26}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import BungieImage, { bungieBackgroundStyle } from 'app/d2l-ui/BungieImage';\nimport BucketIcon from 'app/d2l-ui/svgs/BucketIcon';\nimport { getBucketSvgIcon } from 'app/d2l-ui/svgs/itemCategory';\nimport { d2MissingIcon, ItemRarityMap, ItemRarityName } from 'app/search/d2-known-values';\nimport { braveShiny, riteShiny } from 'app/utils/item-utils';\nimport { errorLog } from 'app/utils/log';\nimport { isModCostVisible } from 'app/utils/socket-utils';\nimport { DestinyInventoryItemDefinition } from 'bungie-api-ts/destiny2';\nimport clsx from 'clsx';\nimport { BucketHashes, ItemCategoryHashes, PlugCategoryHashes } from 'data/d2/generated-enums';\nimport pursuitComplete from 'images/pursuitComplete.svg';\nimport { DimItem } from './item-types';\nimport styles from './ItemIcon.m.scss';\nimport { isPluggableItem } from './store/sockets';\n\nconst itemTierStyles: Record<ItemRarityName, string> = {\n  Legendary: styles.legendary,\n  Exotic: styles.exotic,\n  Common: styles.basic,\n  Rare: styles.rare,\n  Uncommon: styles.common,\n  Unknown: styles.common,\n  Currency: styles.common,\n};\n\nconst strandWrongColorPlugCategoryHashes = [\n  PlugCategoryHashes.TitanStrandClassAbilities,\n  PlugCategoryHashes.HunterStrandClassAbilities,\n  PlugCategoryHashes.WarlockStrandClassAbilities,\n  PlugCategoryHashes.TitanStrandMovement,\n  PlugCategoryHashes.HunterStrandMovement,\n  PlugCategoryHashes.WarlockStrandMovement,\n];\n\nexport function getItemImageStyles(item: DimItem, className?: string) {\n  const isCapped = item.maxStackSize > 1 && item.amount === item.maxStackSize && item.uniqueStack;\n  const borderless =\n    (item?.destinyVersion === 2 &&\n      (item.bucket.hash === BucketHashes.Subclass ||\n        item.itemCategoryHashes.includes(ItemCategoryHashes.Packages))) ||\n    item.isEngram;\n  const itemImageStyles = clsx('item-img', className, {\n    [styles.complete]: item.complete || isCapped,\n    [styles.borderless]: borderless,\n    [styles.masterwork]: item.masterwork,\n    [styles.deepsight]: item.deepsightInfo,\n    [itemTierStyles[item.rarity]]: !borderless && !item.plug,\n  });\n  return itemImageStyles;\n}\n\n/**\n * This is just the icon part of the inventory tile - without the bottom stats bar, tag icons, etc.\n * This exists because we have to do a fair bit of work to make the icon look like it does in game\n * with respect to masterwork, season icons, mod overlays, etc.\n *\n * This renders just a fragment - it always needs to be rendered inside another div with class \"item\".\n */\nexport default function ItemIcon({ item, className }: { item: DimItem; className?: string }) {\n  const classifiedPlaceholder =\n    item.icon === d2MissingIcon && item.classified && getBucketSvgIcon(item.bucket.hash);\n  const itemImageStyles = getItemImageStyles(item, className);\n  const itemIsShiny = braveShiny(item) || riteShiny(item);\n  return (\n    <>\n      {classifiedPlaceholder ? (\n        <BucketIcon\n          icon={classifiedPlaceholder}\n          className={clsx(itemImageStyles, {\n            [styles.inverted]: !classifiedPlaceholder.colorized,\n          })}\n        />\n      ) : (\n        <div style={bungieBackgroundStyle(item.icon)} className={itemImageStyles} />\n      )}\n      {item.iconOverlay && (\n        <div className={styles.iconOverlay} style={bungieBackgroundStyle(item.iconOverlay)} />\n      )}\n      {(itemIsShiny || item.masterwork || item.deepsightInfo) && (\n        <div\n          className={clsx(styles.backgroundOverlay, {\n            [styles.legendaryMasterwork]: item.masterwork && !item.isExotic && !itemIsShiny,\n            [styles.shinyMasterwork]: itemIsShiny,\n            [styles.exoticMasterwork]: item.masterwork && item.isExotic,\n            [styles.deepsightBorder]: item.deepsightInfo,\n          })}\n        />\n      )}\n      {item.tier > 1 ? (\n        <div className={styles.tierPipContainer}>\n          {Array(item.tier)\n            .fill(0)\n            .map((_, i) => (\n              <div key={i} className={styles.tierPip} />\n            ))}\n        </div>\n      ) : null}\n      {item.plug?.energyCost !== undefined && item.plug.energyCost > 0 && (\n        <>\n          <div className={styles.energyCostOverlay} />\n          <svg viewBox=\"0 0 100 100\" className={styles.energyCost}>\n            <text x=\"87\" y=\"26\" fontSize=\"18px\" textAnchor=\"end\">\n              {item.plug.energyCost}\n            </text>\n          </svg>\n        </>\n      )}\n      {item.highlightedObjective && !item.deepsightInfo && (\n        <img className={styles.highlightedObjective} src={pursuitComplete} />\n      )}\n    </>\n  );\n}\n\n/**\n * A variant of ItemIcon that operates directly on an item definition.\n */\nexport function DefItemIcon({\n  itemDef,\n  className,\n  borderless,\n}: {\n  itemDef: DestinyInventoryItemDefinition;\n  className?: string;\n  borderless?: boolean;\n}) {\n  if (!itemDef) {\n    errorLog('temp-deficon', new Error('DefItemIcon was called with a missing def'));\n    return null;\n  }\n  const itemCategoryHashes = itemDef.itemCategoryHashes || [];\n  borderless ||=\n    itemDef.plug?.plugCategoryHash === PlugCategoryHashes.Intrinsics ||\n    itemDef.plug?.plugCategoryHash === PlugCategoryHashes.ArmorArchetypes ||\n    itemCategoryHashes.includes(ItemCategoryHashes.Packages) ||\n    itemCategoryHashes.includes(ItemCategoryHashes.Engrams);\n\n  const needsStrandColorFix =\n    itemDef.plug && strandWrongColorPlugCategoryHashes.includes(itemDef.plug.plugCategoryHash);\n\n  const itemImageStyles = clsx(\n    'item-img',\n    className,\n    {\n      [styles.borderless]: borderless,\n      [styles.strandColorFix]: needsStrandColorFix,\n    },\n    !borderless &&\n      !itemDef.plug &&\n      itemDef.inventory && [itemTierStyles[ItemRarityMap[itemDef.inventory.tierType]]],\n  );\n  const energyCost = getModCostInfo(itemDef);\n\n  const iconOverlay = itemDef.iconWatermark || itemDef.iconWatermarkShelved || undefined;\n\n  return (\n    <>\n      <BungieImage src={itemDef.displayProperties.icon} className={itemImageStyles} alt=\"\" />\n      {iconOverlay && <BungieImage src={iconOverlay} className={styles.iconOverlay} alt=\"\" />}\n      {energyCost !== undefined && energyCost > 0 && (\n        <>\n          <div className={styles.energyCostOverlay} />\n          <svg viewBox=\"0 0 100 100\" className={styles.energyCost}>\n            <text x=\"87\" y=\"26\" fontSize=\"18px\" textAnchor=\"end\">\n              {energyCost}\n            </text>\n          </svg>\n        </>\n      )}\n    </>\n  );\n}\n\n/**\n * given a mod definition or hash, returns its energy cost if it should be shown\n */\nfunction getModCostInfo(mod: DestinyInventoryItemDefinition) {\n  if (isPluggableItem(mod) && isModCostVisible(mod)) {\n    return mod.plug.energyCost!.energyCost;\n  }\n\n  return undefined;\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ItemIconPlaceholder.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ItemIconPlaceholder.tsx","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-empty-function","severity":2,"message":"Unexpected empty method 'observe'.","line":36,"column":24,"nodeType":"ArrowFunctionExpression","messageId":"unexpected","endLine":36,"endColumn":26,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-empty-function","severity":2,"message":"Unexpected empty method 'unobserve'.","line":38,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"unexpected","endLine":38,"endColumn":28,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ItemPopupTrigger.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ItemPowerSet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\ItemPowerSet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\MoveNotifications.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\MoveNotifications.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":214,"column":20,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":214,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { AlertIcon } from 'app/d2l-ui/AlertIcon';\nimport { I18nKey, t, tl } from 'app/i18next-t';\nimport {\n  LoadoutApplyPhase,\n  LoadoutApplyState,\n  LoadoutItemState,\n  LoadoutModState,\n  LoadoutSocketOverrideState,\n} from 'app/loadout-drawer/loadout-apply-state';\nimport InGameLoadoutIcon from 'app/loadout/ingame/InGameLoadoutIcon';\nimport { InGameLoadout, Loadout, isInGameLoadout } from 'app/loadout/loadout-types';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { NotificationError, NotifyInput } from 'app/notifications/notifications';\nimport { AppIcon, faCheckCircle, faExclamationCircle, refreshIcon } from 'app/shell/icons';\nimport { isEmpty } from 'app/utils/collections';\nimport { DimError } from 'app/utils/d2l-error';\nimport { errorMessage } from 'app/utils/errors';\nimport { useThrottledSubscription } from 'app/utils/hooks';\nimport { Observable } from 'app/utils/observable';\nimport { LookupTable } from 'app/utils/util-types';\nimport clsx from 'clsx';\nimport { useEffect, useState } from 'react';\nimport ConnectedInventoryItem from './ConnectedInventoryItem';\nimport ItemIcon, { DefItemIcon } from './ItemIcon';\nimport styles from './MoveNotifications.m.scss';\nimport { DimItem } from './item-types';\nimport { DimStore } from './store-types';\n\n/** How long to leave the notification up after it's done. */\nconst lingerMs = 2000;\n\n/**\n * Generate JSX for a move item notification. This isn't a component.\n */\nexport function moveItemNotification(\n  item: DimItem,\n  target: DimStore,\n  movePromise: Promise<unknown>,\n  cancel: () => void,\n): NotifyInput {\n  return {\n    promise: movePromise,\n    duration: lingerMs,\n    title: item.name,\n    icon: <ConnectedInventoryItem item={item} />,\n    trailer: <MoveItemNotificationIcon completion={movePromise} />,\n    body: t('ItemMove.MovingItem', {\n      name: item.name,\n      target: target.name,\n      context: target.genderName,\n    }),\n    onCancel: cancel,\n  };\n}\n\n/**\n * Generate JSX for a loadout apply notification. This isn't a component.\n */\nexport function loadoutNotification(\n  loadout: Loadout | InGameLoadout,\n  stateObservable: Observable<LoadoutApplyState>,\n  loadoutPromise: Promise<unknown>,\n  cancel: () => void,\n): NotifyInput {\n  return {\n    promise: loadoutPromise.catch((e) => {\n      throw new NotificationError(errorMessage(e), {\n        body: <ApplyLoadoutProgressBody stateObservable={stateObservable} />,\n        type: stateObservable.getCurrentValue().inGameLoadoutInActivity ? 'warning' : 'error',\n      });\n    }),\n    duration: 5_000,\n    title: t('Loadouts.NotificationTitle', { name: loadout.name }),\n    icon: isInGameLoadout(loadout) && <InGameLoadoutIcon loadout={loadout} />,\n    body: <ApplyLoadoutProgressBody stateObservable={stateObservable} />,\n    onCancel: cancel,\n  };\n}\n\nconst messageByPhase: { [phase in LoadoutApplyPhase]: I18nKey } = {\n  [LoadoutApplyPhase.NotStarted]: tl('Loadouts.NotStarted'),\n  [LoadoutApplyPhase.Deequip]: tl('Loadouts.Deequip'),\n  [LoadoutApplyPhase.MoveItems]: tl('Loadouts.MoveItems'),\n  [LoadoutApplyPhase.EquipItems]: tl('Loadouts.EquipItems'),\n  [LoadoutApplyPhase.SocketOverrides]: tl('Loadouts.SocketOverrides'),\n  [LoadoutApplyPhase.ApplyMods]: tl('Loadouts.ApplyMods'),\n  [LoadoutApplyPhase.ClearSpace]: tl('Loadouts.ClearingSpace'),\n  [LoadoutApplyPhase.InGameLoadout]: tl('Loadouts.EquipInGameLoadout'),\n  [LoadoutApplyPhase.Succeeded]: tl('Loadouts.Succeeded'),\n  [LoadoutApplyPhase.Failed]: tl('Loadouts.Failed'),\n};\n\nfunction ApplyLoadoutProgressBody({\n  stateObservable,\n}: {\n  stateObservable: Observable<LoadoutApplyState>;\n}) {\n  // TODO: throttle subscription?\n  const {\n    phase,\n    equipNotPossible,\n    itemStates,\n    socketOverrideStates,\n    modStates,\n    inGameLoadoutInActivity,\n  } = useThrottledSubscription(stateObservable, 100);\n  const defs = useD2Definitions()!;\n\n  const progressIcon =\n    phase === LoadoutApplyPhase.Succeeded\n      ? faCheckCircle\n      : phase === LoadoutApplyPhase.Failed\n        ? faExclamationCircle\n        : refreshIcon;\n\n  const itemStatesList = Object.values(itemStates);\n  // TODO: when we have per-item socket overrides this will probably need to be more subtle\n  const socketOverrideStatesList = Object.values(socketOverrideStates);\n\n  const groupErrors = <T extends { error?: Error }>(items: T[]) =>\n    Object.groupBy(\n      items.filter(({ error }) => error),\n      ({ error }) =>\n        (error instanceof DimError\n          ? (error.bungieErrorCode()?.toString() ?? error.cause?.message)\n          : undefined) ??\n        error?.message ??\n        'Unknown',\n    );\n\n  const groupedItemErrors = groupErrors(itemStatesList);\n  const groupedModErrors = groupErrors(modStates);\n\n  return (\n    <>\n      <div className={styles.loadoutDetails}>\n        <AppIcon icon={progressIcon} spinning={progressIcon === refreshIcon} />\n        {t(messageByPhase[phase])}\n      </div>\n      {equipNotPossible && (\n        <div className={styles.warning}>\n          <AlertIcon className={styles.warningIcon} />\n          {t('BungieService.DestinyCannotPerformActionAtThisLocation')}\n        </div>\n      )}\n      {inGameLoadoutInActivity && (\n        <div className={styles.warning}>\n          <AlertIcon className={styles.warningIcon} />\n          {t('Loadouts.ApplyInGameLoadoutInGame')}\n        </div>\n      )}\n      {itemStatesList.length > 0 && (\n        <div className={styles.iconList}>\n          {itemStatesList.map(({ item, state }) => (\n            <div\n              className={clsx('item', {\n                [styles.loadoutItemPending]:\n                  state === LoadoutItemState.Pending ||\n                  state === LoadoutItemState.DequippedPendingMove ||\n                  state === LoadoutItemState.MovedPendingEquip,\n                [styles.loadoutItemFailed]:\n                  state === LoadoutItemState.FailedDequip ||\n                  state === LoadoutItemState.FailedEquip ||\n                  state === LoadoutItemState.FailedMove,\n              })}\n              key={item.index}\n            >\n              <ItemIcon item={item} />\n            </div>\n          ))}\n        </div>\n      )}\n\n      {!isEmpty(groupedItemErrors) && (\n        <div className={styles.errorList}>\n          {Object.values(groupedItemErrors).map(\n            (errorStates) =>\n              errorStates && (\n                <div key={errorStates[0].item.index}>\n                  <b>{t('Loadouts.ItemErrorSummary', { count: errorStates.length })}</b>{' '}\n                  {errorStates[0].error instanceof DimError && errorStates[0].error.cause\n                    ? errorStates[0].error.cause.message\n                    : (errorStates[0].error?.message ?? 'Unknown')}\n                </div>\n              ),\n          )}\n        </div>\n      )}\n\n      {socketOverrideStatesList.length > 0 && (\n        <div className={styles.iconList}>\n          {socketOverrideStatesList.map(({ item, results }) => (\n            <div key={item.index} className={styles.iconList}>\n              {Object.entries(results).map(([socketIndex, { plugHash, state }]) => (\n                <div\n                  key={socketIndex}\n                  className={clsx('item', {\n                    [styles.loadoutItemPending]: state === LoadoutSocketOverrideState.Pending,\n                    [styles.loadoutItemFailed]: state === LoadoutSocketOverrideState.Failed,\n                  })}\n                >\n                  <DefItemIcon itemDef={defs.InventoryItem.get(plugHash)} />\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      )}\n\n      {modStates.length > 0 && (\n        <div className={styles.iconList}>\n          {modStates.map(({ modHash, state }, i) => (\n            <div\n              key={i}\n              className={clsx('item', {\n                [styles.loadoutItemPending]: state === LoadoutModState.Pending,\n                [styles.loadoutItemFailed]:\n                  state === LoadoutModState.Unassigned || state === LoadoutModState.Failed,\n              })}\n            >\n              <DefItemIcon itemDef={defs.InventoryItem.get(modHash)} />\n            </div>\n          ))}\n        </div>\n      )}\n\n      {!isEmpty(groupedModErrors) && (\n        <div className={styles.errorList}>\n          {Object.values(groupedModErrors).map(\n            (errorStates) =>\n              errorStates && (\n                <div key={errorStates[0].modHash}>\n                  <b>{t('Loadouts.ModErrorSummary', { count: errorStates.length })}</b>{' '}\n                  {errorStates[0].error instanceof DimError && errorStates[0].error.cause\n                    ? errorStates[0].error.cause.message\n                    : (errorStates[0].error?.message ?? 'Unknown')}\n                </div>\n              ),\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\n/**\n * Generate JSX for a pull from postmaster notification. This isn't a component.\n */\nexport function postmasterNotification(\n  count: number,\n  store: DimStore,\n  promise: Promise<unknown>,\n  cancel: () => void,\n): NotifyInput {\n  // TODO: pass in a state updater that can communicate application state\n\n  return {\n    promise,\n    duration: lingerMs,\n    title: t('Loadouts.PullFromPostmasterPopupTitle'),\n    trailer: <MoveItemNotificationIcon completion={promise} />,\n    body: t('Loadouts.PullFromPostmasterNotification', {\n      count,\n      store: store.name,\n      context: store.genderName,\n    }),\n    onCancel: cancel,\n  };\n}\n\nconst enum MoveState {\n  InProgress,\n  Failed,\n  Succeeded,\n}\n\nconst moveStateClasses: LookupTable<MoveState, string> = {\n  [MoveState.Failed]: styles.failed,\n  [MoveState.Succeeded]: styles.succeeded,\n};\n\nfunction MoveItemNotificationIcon({ completion }: { completion: Promise<unknown> }) {\n  const [inProgress, setInProgress] = useState(MoveState.InProgress);\n  useEffect(() => {\n    let cancel = false;\n    completion\n      .then(() => !cancel && setInProgress(MoveState.Succeeded))\n      .catch(() => !cancel && setInProgress(MoveState.Failed));\n    return () => {\n      cancel = true;\n    };\n  }, [completion]);\n\n  const progressIcon =\n    inProgress === MoveState.InProgress\n      ? refreshIcon\n      : inProgress === MoveState.Succeeded\n        ? faCheckCircle\n        : faExclamationCircle;\n\n  return (\n    <div className={clsx(styles.progressIcon, moveStateClasses[inProgress])}>\n      <AppIcon icon={progressIcon} spinning={inProgress === MoveState.InProgress} />\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\NewItemIndicator.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\NewItemIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\PullFromPostmaster.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\PullFromPostmaster.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\RatingIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\RatingIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\SyncTagLock.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\TagIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\advanced-write-actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\bulk-actions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\cross-tab.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\d1-stores.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\d2-stores.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\d2-stores.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\d2l-item-info.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\drag-events.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\inventory-buckets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\item-move-service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\item-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\locate-item.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\manual-moves.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\move-item.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\note-hashtags.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\notes-hashtags.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\observers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\spreadsheets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\armor-quality.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\catalyst.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\character-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\crafted.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\d1-item-factory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\d1-store-factory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\d2-item-factory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\d2-store-factory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\deepsight.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\energy.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\enhanced-info.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\exotic-class-item.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\exotic-to-catalyst-record.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\hooks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\item-index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\masterwork.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\missing-sources.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\objectives.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\override-sockets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\patterns.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\season-d2ai.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\season.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\sockets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\stats-conditional.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\stats-custom.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\stats.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\store\\well-rested.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\stores-helpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\inventory\\subclass.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\issue-awareness-banner\\Game2Give.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\issue-awareness-banner\\Game2Give.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\issue-awareness-banner\\IssueAwarenessBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\issue-awareness-banner\\useGame2GiveData.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\ActionButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\ActionButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\ActionButtons.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\ActionButtons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\ItemAccessoryButtons.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useSelector\" is called conditionally. React Hooks must be called in the exact same order in every component render.","line":30,"column":7,"nodeType":"Identifier","endLine":30,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\ItemActionsDropdown.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\ItemActionsDropdown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\ItemMoveLocations.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\ItemMoveLocations.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\LockButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-actions\\LockButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\Highlights.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\Highlights.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\ItemFeed.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\ItemFeed.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\ItemFeedPage.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\ItemFeedPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\ItemFeedSidebar.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\ItemFeedSidebar.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\TagButtons.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-feed\\TagButtons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-picker\\ItemPicker.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-picker\\ItemPicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-picker\\ItemPickerContainer.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setOptionsState' of 'useState' directly in 'useEffect'.","line":39,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":45,"endColumn":7}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { noop } from 'app/utils/functions';\nimport { createContext, use, useCallback, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport ItemPicker from './ItemPicker';\nimport { ItemPickerState } from './item-picker';\n\nexport const ItemPickerContext = createContext<(value: ItemPickerState | undefined) => void>(noop);\n\n/**\n * A container that can show a single item picker. This is a single element to\n * help prevent multiple pickers from showing at once and to make the API\n * easier. It uses context so you can nest item picker containers and the\n * closest one in the tree to your component will handle showing the picker.\n */\nexport default function ItemPickerContainer({ children }: { children: React.ReactNode }) {\n  const parentSetOptions = use(ItemPickerContext);\n\n  // The \"generation\" just allows us to set a key so the item picker isn't reused between different invocations\n  const [generation, setGeneration] = useState(0);\n  const [options, setOptionsState] = useState<ItemPickerState>();\n\n  const setOptions = useCallback(\n    (newOptions: ItemPickerState | undefined) => {\n      // Close any open item pickers higher up the tree - we want to have only one\n      parentSetOptions(undefined);\n      setOptionsState((options) => {\n        if (options) {\n          // Cleanup any existing item picker\n          options.onItemSelected(undefined);\n        }\n        return newOptions;\n      });\n      setGeneration((gen) => gen + 1);\n    },\n    [parentSetOptions],\n  );\n\n  const onClose = useCallback(() => {\n    setOptionsState((options) => {\n      if (options) {\n        // Cleanup any existing item picker\n        options.onItemSelected(undefined);\n      }\n      return undefined;\n    });\n  }, []);\n\n  // Close the item picker if we change page\n  const location = useLocation();\n  useEffect(() => {\n    onClose();\n  }, [location.pathname, onClose]);\n\n  return (\n    <ItemPickerContext value={setOptions}>\n      {children}\n      {options && <ItemPicker key={generation} {...options} onSheetClosed={onClose} />}\n    </ItemPickerContext>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-picker\\item-picker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\AmmoIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\AmmoIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ApplyPerkSelection.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ApplyPerkSelection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ArchetypeSocket.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ArchetypeSocket.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\BreakerType.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\BreakerType.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\DeepSightHarmonizerIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\DeepsightHarmonizerIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\DesktopItemActions.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\DesktopItemActions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\EmblemPreview.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\EmblemPreview.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\EmoteSockets.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\EmoteSockets.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\EnergyMeter.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\EnergyMeter.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":2,"message":"Unexpected confirm.","line":50,"column":10,"nodeType":"CallExpression","messageId":"unexpected","endLine":50,"endColumn":46,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemDescription.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemDescription.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemDetails.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemDetails.tsx","messages":[{"ruleId":"@eslint-react/no-unstable-default-props","severity":1,"message":"A/an 'object expression' as default prop. This could lead to potential infinite render loop in React. Use a variable instead of 'object expression'.","line":46,"column":15,"nodeType":"ObjectExpression","messageId":"noUnstableDefaultProps","endLine":46,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { DestinyTooltipText } from 'app/d2l-ui/DestinyTooltipText';\nimport { t, tl } from 'app/i18next-t';\nimport { createItemContextSelector, storesSelector } from 'app/inventory/selectors';\nimport { isTrialsPassage } from 'app/inventory/store/objectives';\nimport { applySocketOverrides, useSocketOverrides } from 'app/inventory/store/override-sockets';\nimport { getStore } from 'app/inventory/stores-helpers';\nimport { KillTrackerInfo } from 'app/item-popup/KillTracker';\nimport { useDefinitions } from 'app/manifest/selectors';\nimport { ActivityModifier } from 'app/progress/ActivityModifier';\nimport Objective from 'app/progress/Objective';\nimport { Reward } from 'app/progress/Reward';\nimport { RootState } from 'app/store/types';\nimport { getItemKillTrackerInfo, isD1Item } from 'app/utils/item-utils';\nimport { SingleVendorSheetContext } from 'app/vendors/single-vendor/SingleVendorSheetContainer';\nimport clsx from 'clsx';\nimport { BucketHashes, ItemCategoryHashes } from 'data/d2/generated-enums';\nimport helmetIcon from 'destiny-icons/armor_types/helmet.svg';\nimport modificationIcon from 'destiny-icons/general/modifications.svg';\nimport handCannonIcon from 'destiny-icons/weapons/hand_cannon.svg';\nimport { use } from 'react';\nimport { useSelector } from 'react-redux';\nimport BungieImage from '../d2l-ui/BungieImage';\nimport { DimItem } from '../inventory/item-types';\nimport { AppIcon, faCheck } from '../shell/icons';\nimport ApplyPerkSelection from './ApplyPerkSelection';\nimport EmblemPreview from './EmblemPreview';\nimport EnergyMeter from './EnergyMeter';\nimport ItemDescription from './ItemDescription';\nimport styles from './ItemDetails.m.scss';\nimport ItemExpiration from './ItemExpiration';\nimport ItemPerks from './ItemPerks';\nimport './ItemPopupBody.scss';\nimport ItemSockets from './ItemSockets';\nimport ItemStats from './ItemStats';\nimport ItemTalentGrid from './ItemTalentGrid';\nimport MetricCategories from './MetricCategories';\nimport { WeaponCatalystInfo } from './WeaponCatalystInfo';\nimport { WeaponCraftedInfo } from './WeaponCraftedInfo';\nimport { WeaponDeepsightInfo } from './WeaponDeepsightInfo';\nimport { ItemPopupExtraInfo } from './item-popup';\n\n// TODO: probably need to load manifest. We can take a lot of properties off the item if we just load the definition here.\nexport default function ItemDetails({\n  item: originalItem,\n  id,\n  extraInfo = {},\n}: {\n  item: DimItem;\n  id: string;\n  extraInfo?: ItemPopupExtraInfo;\n}) {\n  const defs = useDefinitions()!;\n  const itemCreationContext = useSelector(createItemContextSelector);\n  const [socketOverrides, onPlugClicked, resetSocketOverrides] = useSocketOverrides();\n  const item = defs.isDestiny2\n    ? applySocketOverrides(itemCreationContext, originalItem, socketOverrides)\n    : originalItem;\n  const modTypeIcon = item.itemCategoryHashes.includes(ItemCategoryHashes.ArmorMods)\n    ? helmetIcon\n    : handCannonIcon;\n\n  const ownerStore = useSelector((state: RootState) => getStore(storesSelector(state), item.owner));\n\n  const killTrackerInfo = getItemKillTrackerInfo(item);\n\n  const showVendor = use(SingleVendorSheetContext);\n\n  const missingSocketsMessage =\n    item.missingSockets === 'missing'\n      ? tl('MovePopup.MissingSockets')\n      : tl('MovePopup.LoadingSockets');\n\n  return (\n    <div id={id} role=\"tabpanel\" aria-labelledby={`${id}-tab`} className={styles.itemDetailsBody}>\n      {item.itemCategoryHashes.includes(ItemCategoryHashes.Shaders) && (\n        <BungieImage className={styles.itemShader} src={item.icon} width=\"96\" height=\"96\" />\n      )}\n\n      {(item.bucket.hash === BucketHashes.Quests ||\n        item.itemCategoryHashes.includes(ItemCategoryHashes.Mods_Ornament)) &&\n        item.secondaryIcon && (\n          <BungieImage\n            src={item.secondaryIcon}\n            className={clsx(styles.fullImage, {\n              [styles.milestoneImage]: item.bucket.hash === BucketHashes.Quests,\n            })}\n          />\n        )}\n\n      <ItemDescription item={item} />\n\n      {!item.stats && Boolean(item.collectibleHash) && defs.isDestiny2 && (\n        <div className={clsx('item-details', styles.itemSource)}>\n          {defs.Collectible.get(item.collectibleHash!).sourceString}\n        </div>\n      )}\n\n      {defs.isDestiny2 && item.itemCategoryHashes.includes(ItemCategoryHashes.Emblems) && (\n        <div className=\"item-details\">\n          <EmblemPreview item={item} />\n        </div>\n      )}\n\n      {defs.isDestiny2 && item.availableMetricCategoryNodeHashes && (\n        <div className=\"item-details\">\n          <MetricCategories\n            availableMetricCategoryNodeHashes={item.availableMetricCategoryNodeHashes}\n          />\n        </div>\n      )}\n\n      {defs.isDestiny2 && <WeaponCraftedInfo item={item} className=\"crafted-progress\" />}\n\n      {defs.isDestiny2 && <WeaponDeepsightInfo item={item} />}\n\n      {defs.isDestiny2 && <WeaponCatalystInfo item={item} />}\n\n      {killTrackerInfo && defs.isDestiny2 && (\n        <KillTrackerInfo tracker={killTrackerInfo} showTextLabel className=\"masterwork-progress\" />\n      )}\n\n      {item.classified && <div className=\"item-details\">{t('ItemService.Classified2')}</div>}\n\n      {item.stats && (\n        <div className=\"item-details\">\n          <ItemStats item={item} />\n        </div>\n      )}\n\n      {isD1Item(item) && item.talentGrid && (\n        <div className=\"item-details\">\n          <ItemTalentGrid item={item} />\n        </div>\n      )}\n\n      {item.missingSockets && (\n        <div className=\"item-details warning\">{t(missingSocketsMessage)}</div>\n      )}\n\n      {defs.isDestiny2 && item.energy && defs && <EnergyMeter item={item} />}\n      {item.sockets && <ItemSockets item={item} onPlugClicked={onPlugClicked} />}\n\n      <ApplyPerkSelection\n        item={item}\n        setSocketOverride={onPlugClicked}\n        onApplied={resetSocketOverrides}\n      />\n\n      {item.perks && <ItemPerks item={item} />}\n\n      {defs && item.objectives && (\n        <div className=\"item-details\">\n          {item.objectives.map((objective) => (\n            <Objective\n              objective={objective}\n              key={objective.objectiveHash}\n              isTrialsPassage={defs.isDestiny2 && isTrialsPassage(item.hash)}\n            />\n          ))}\n        </div>\n      )}\n\n      {item.previewVendor !== undefined &&\n        item.previewVendor !== 0 &&\n        (extraInfo.characterId ?? (ownerStore && !ownerStore.isVault)) && (\n          <div className={styles.itemDescription}>\n            <a\n              onClick={() =>\n                showVendor?.({\n                  characterId: extraInfo.characterId ?? ownerStore!.id,\n                  vendorHash: item.previewVendor,\n                })\n              }\n            >\n              {t('ItemService.PreviewVendor', { type: item.typeName })}\n            </a>\n          </div>\n        )}\n\n      {defs.isDestiny2 && item.pursuit && item.pursuit.rewards.length !== 0 && (\n        <div className=\"item-details\">\n          <div>{t('MovePopup.Rewards')}</div>\n          {item.pursuit.rewards.map((reward) => (\n            <Reward key={reward.itemHash} reward={reward} store={ownerStore} itemHash={item.hash} />\n          ))}\n        </div>\n      )}\n\n      {defs.isDestiny2 && item.pursuit && item.pursuit.modifierHashes.length !== 0 && (\n        <div className=\"item-details\">\n          {item.pursuit.modifierHashes.map((modifierHash) => (\n            <ActivityModifier key={modifierHash} modifierHash={modifierHash} />\n          ))}\n        </div>\n      )}\n\n      {extraInfo.mod ? (\n        <div className={clsx('item-details', styles.mods)}>\n          {extraInfo.owned && (\n            <div>\n              <img className={styles.ownedIcon} src={modificationIcon} /> {t('MovePopup.OwnedMod')}\n            </div>\n          )}\n          {extraInfo.acquired && (\n            <div>\n              <img className={styles.acquiredIcon} src={modTypeIcon} /> {t('MovePopup.AcquiredMod')}\n            </div>\n          )}\n        </div>\n      ) : (\n        (extraInfo.owned || extraInfo.acquired) && (\n          <div className=\"item-details\">\n            {extraInfo.owned && (\n              <div>\n                <AppIcon className={styles.ownedIcon} icon={faCheck} /> {t('MovePopup.Owned')}\n              </div>\n            )}\n            {extraInfo.acquired && (\n              <div>\n                <AppIcon className={styles.acquiredIcon} icon={faCheck} /> {t('MovePopup.Acquired')}\n              </div>\n            )}\n          </div>\n        )\n      )}\n\n      <ItemExpiration item={item} />\n      <DestinyTooltipText item={item} />\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemExpiration.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemMoveAmount.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemMoveAmount.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPerks.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPerks.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPerksList.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPerksList.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPopup.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPopup.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useSelector\" is called conditionally. React Hooks must be called in the exact same order in every component render.","line":84,"column":7,"nodeType":"Identifier","endLine":84,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPopupContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPopupHeader.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPopupHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPopupTabs.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemPopupTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemSockets.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemSockets.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemSocketsGeneral.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemSocketsGeneral.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemSocketsWeapons.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemSocketsWeapons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemStat.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemStat.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":234,"column":22,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":234,"endColumn":27},{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":258,"column":36,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":258,"endColumn":41}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { customStatsSelector, settingSelector } from 'app/d2l-api/selectors';\nimport AnimatedNumber from 'app/d2l-ui/AnimatedNumber';\nimport BungieImage from 'app/d2l-ui/BungieImage';\nimport { CustomStatWeightsFromHash } from 'app/d2l-ui/CustomStatWeights';\nimport ExternalLink from 'app/d2l-ui/ExternalLink';\nimport { PressTip } from 'app/d2l-ui/PressTip';\nimport { I18nKey, t, tl } from 'app/i18next-t';\nimport { D1Item, D1Stat, DimItem, DimSocket, DimStat } from 'app/inventory/item-types';\nimport { statsMs } from 'app/inventory/store/stats';\nimport { TOTAL_STAT_HASH, armorStats, statfulOrnaments } from 'app/search/d2-known-values';\nimport { getD1QualityColor, percent } from 'app/shell/formatters';\nimport { AppIcon, helpIcon } from 'app/shell/icons';\nimport { userGuideUrl } from 'app/shell/links';\nimport { sumBy } from 'app/utils/collections';\nimport { compareBy, reverseComparator } from 'app/utils/comparators';\nimport { LookupTable } from 'app/utils/util-types';\nimport clsx from 'clsx';\nimport { ItemCategoryHashes, StatHashes } from 'data/d2/generated-enums';\nimport { clamp } from 'es-toolkit';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { socketContainsIntrinsicPlug } from '../utils/socket-utils';\nimport styles from './ItemStat.m.scss';\nimport RecoilStat from './RecoilStat';\n\n// used in displaying the modded segments on item stats\nconst modItemCategoryHashes = new Set([\n  ItemCategoryHashes.WeaponModsDamage,\n  ItemCategoryHashes.ArmorModsGameplay, // armor mods (pre-2.0)\n  ItemCategoryHashes.ArmorMods, // armor 2.0 mods\n]);\n\n// used in displaying the component segments on item stats\nconst weaponParts = new Set([\n  ItemCategoryHashes.WeaponModsBowstring,\n  ItemCategoryHashes.WeaponModsBatteries,\n  ItemCategoryHashes.WeaponModsSwordBlades,\n  ItemCategoryHashes.WeaponModsLaunchTubes,\n  ItemCategoryHashes.WeaponModsScopes,\n  ItemCategoryHashes.WeaponModsHafts,\n  ItemCategoryHashes.WeaponModsStocks,\n  ItemCategoryHashes.WeaponModsSwordGuards,\n  ItemCategoryHashes.WeaponModsBarrels,\n  ItemCategoryHashes.WeaponModsArrows,\n  ItemCategoryHashes.WeaponModsGrips,\n  ItemCategoryHashes.WeaponModsSights,\n  ItemCategoryHashes.WeaponModsMagazines,\n]);\n\n// Some stat labels are long. This lets us replace them with i18n\nconst statLabels: LookupTable<StatHashes, I18nKey> = {\n  [StatHashes.RoundsPerMinute]: tl('Organizer.Stats.RPM'),\n  [StatHashes.AirborneEffectiveness]: tl('Organizer.Stats.Airborne'),\n  [StatHashes.AmmoGeneration]: tl('Organizer.Stats.AmmoGeneration'),\n};\n\ntype StatSegmentType = 'base' | 'parts' | 'mod' | 'masterwork';\nconst statStyles: Record<StatSegmentType, [style: string, label: I18nKey]> = {\n  base: [styles.base, tl('Organizer.Columns.BaseStats')],\n  parts: [styles.parts, tl('Stats.WeaponPart')],\n  mod: [styles.mod, tl('Loadouts.Mods')],\n  masterwork: [styles.masterwork, tl('Organizer.Columns.MasterworkStat')],\n};\ntype StatSegments = [value: number, statSegmentType: StatSegmentType, modName?: string][];\n\n/**\n * A single stat line.\n */\nexport default function ItemStat({ stat, item }: { stat: DimStat; item?: DimItem }) {\n  const showQuality = useSelector(settingSelector('itemQuality'));\n  const customStatsList = useSelector(customStatsSelector);\n  const customStatHashes = customStatsList.map((c) => c.statHash);\n\n  const modEffects =\n    item &&\n    getModEffects(item, stat.statHash).sort(reverseComparator(compareBy(([value]) => value)));\n  const modEffectsTotal = modEffects ? sumBy(modEffects, ([value]) => value) : 0;\n\n  const partEffects =\n    item &&\n    getPartEffects(item, stat.statHash).sort(reverseComparator(compareBy(([value]) => value)));\n  const partEffectsTotal = partEffects ? sumBy(partEffects, ([value]) => value) : 0;\n\n  const armorMasterworkSockets = item!.sockets?.allSockets.filter((s) =>\n    s.plugged?.plugDef.plug.plugCategoryIdentifier.startsWith('v460.plugs.armor.masterworks'),\n  );\n  const armorMasterworkValue =\n    armorMasterworkSockets && getTotalPlugEffects(armorMasterworkSockets, [stat.statHash]);\n\n  const masterworkValue =\n    item?.masterworkInfo?.stats?.find((s) => s.hash === stat.statHash)?.value ?? 0;\n  // This bool controls the stat name being gold\n  const isMasterworkedStat = masterworkValue !== 0;\n  const masterworkDisplayValue = masterworkValue || armorMasterworkValue;\n  let masterworkDisplayWidth = masterworkDisplayValue || 0;\n  // baseBar here is the leftmost segment of the stat bar.\n  // For armor, this is the \"roll,\" the sum of its invisible stat plugs.\n  // For weapons, this is the default base stat in its item definition, before barrels/mags/etc.\n  const baseBar = item?.bucket.inArmor\n    ? // if it's armor, the base bar length should be\n      // the shortest of base or resulting value, but not below 0\n      Math.max(Math.min(stat.base, stat.value), 0)\n    : // otherwise, for weapons, we just subtract masterwork and\n      // consider the \"base\" to include selected perks but not mods\n      stat.value - masterworkValue - modEffectsTotal - partEffectsTotal;\n\n  const segments: StatSegments = [[baseBar, 'base']];\n\n  for (const [effectAmount, modName] of partEffects ?? []) {\n    segments.push([effectAmount, 'parts', modName]);\n  }\n\n  for (const [effectAmount, modName] of modEffects ?? []) {\n    segments.push([effectAmount, 'mod', modName]);\n  }\n\n  if (masterworkDisplayWidth) {\n    // Account for a masterwork being completely counteracted by a mod penalty.\n    // A MW segment cannot be longer than the bar's total.\n    // ie: a +6 base, a +2mw, and a -10 mod, results in 0. MW segment width is 0.\n    if (modEffectsTotal < 0) {\n      masterworkDisplayWidth = clamp(masterworkDisplayWidth, 0, stat.value);\n    }\n    segments.push([masterworkDisplayWidth, 'masterwork']);\n  }\n\n  // Get the values that contribute to the total stat value\n  const totalDetails =\n    item &&\n    stat.statHash === TOTAL_STAT_HASH &&\n    breakDownTotalValue(stat.base, item, armorMasterworkSockets || []);\n\n  const modSign =\n    (stat.value !== stat.base ? modEffectsTotal : 0) * (stat.smallerIsBetter ? -1 : 1);\n\n  const optionalClasses = {\n    [styles.masterworked]: isMasterworkedStat,\n    [styles.mod]: modSign > 0,\n    [styles.negativeModded]: modSign < 0,\n    [styles.totalRow]: Boolean(totalDetails),\n    [styles.customTotal]: customStatHashes.includes(stat.statHash),\n  };\n\n  return (\n    <>\n      <div\n        className={clsx(styles.statName, optionalClasses)}\n        aria-label={stat.displayProperties.name}\n        title={stat.displayProperties.description}\n      >\n        {stat.statHash in statLabels\n          ? t(statLabels[stat.statHash as StatHashes]!)\n          : stat.displayProperties.name}\n      </div>\n\n      <div className={clsx(styles.value, optionalClasses)}>\n        {stat.additive && stat.value >= 0 && '+'}\n        <AnimatedNumber value={stat.value} />\n      </div>\n\n      {item?.destinyVersion === 2 && statsMs.includes(stat.statHash) && (\n        <div className={clsx(optionalClasses)}>{t('Stats.Milliseconds')}</div>\n      )}\n\n      {stat.displayProperties.hasIcon && (\n        <div className={styles.icon}>\n          <BungieImage className=\"stat-icon\" src={stat.displayProperties.icon} alt=\"\" />\n        </div>\n      )}\n\n      {showQuality &&\n        item &&\n        isD1Stat(item, stat) &&\n        stat.qualityPercentage &&\n        stat.qualityPercentage.min !== 0 && (\n          <div\n            className={styles.quality}\n            style={getD1QualityColor(stat.qualityPercentage.min, 'color')}\n          >\n            ({stat.qualityPercentage.range})\n          </div>\n        )}\n\n      {stat.statHash === StatHashes.RecoilDirection && (\n        <div className={styles.statBar}>\n          <RecoilStat value={stat.value} />\n        </div>\n      )}\n\n      {stat.bar && <StatBar stat={stat} segments={segments} />}\n\n      {totalDetails &&\n        Boolean(totalDetails.totalModsValue || totalDetails.totalMasterworkValue) && (\n          <StatTotal totalDetails={totalDetails} optionalClasses={optionalClasses} stat={stat} />\n        )}\n\n      {item && customStatHashes.includes(stat.statHash) && (\n        <CustomStatWeightsFromHash\n          className={clsx(styles.smallStatToggle, styles.nonDimmedStatIcons)}\n          customStatHash={stat.statHash}\n        />\n      )}\n    </>\n  );\n}\n\nfunction StatBar({ segments, stat }: { segments: StatSegments; stat: DimStat }) {\n  // Make sure the combined \"filled\"-colored segments never exceed this.\n  let remainingFilled = stat.value;\n  // Make sure the red bar section never exceeds the blank space,\n  // which would increase the total stat bar width.\n  let remainingEmpty = Math.max(stat.maximumValue - stat.value, 0);\n  return (\n    <div className={styles.statBar} aria-label={stat.displayProperties.name} aria-hidden=\"true\">\n      <PressTip\n        placement=\"top-start\"\n        className={styles.barContainer}\n        tooltip={<StatBarTooltip segments={segments} stat={stat} />}\n      >\n        {segments\n          // Process base stats last, letting them be the most likely to hit cap and lose display length\n          .toSorted(([, statType]) => (statType === 'base' ? 1 : 0))\n          .map(([val, statType], index) => {\n            let segmentLength = Math.abs(val);\n            if (val < 0) {\n              segmentLength = Math.min(segmentLength, remainingEmpty);\n              remainingEmpty -= segmentLength;\n            } else {\n              segmentLength = Math.min(segmentLength, remainingFilled);\n              remainingFilled -= segmentLength;\n            }\n            return (\n              <div\n                key={index}\n                className={clsx(\n                  styles.statBarSegment,\n                  val < 0 && statType !== 'masterwork' ? styles.negative : statStyles[statType][0],\n                )}\n                style={{ width: percent(segmentLength / stat.maximumValue) }}\n              />\n            );\n          })}\n      </PressTip>\n    </div>\n  );\n}\n\nfunction StatBarTooltip({ segments, stat }: { segments: StatSegments; stat: DimStat }) {\n  const showMath = !(segments.length === 1 && segments[0][1] === 'base');\n  return (\n    <>\n      <div className={styles.statBarTooltip}>\n        {showMath &&\n          segments.map(([val, statType, description], index) => {\n            const [typeClassName, i18nLabel] = statStyles[statType];\n            const className = clsx(typeClassName, { [styles.negative]: val < 0 });\n            return (\n              <React.Fragment key={index}>\n                <span className={className}>\n                  {index > 0 && val >= 0 && '+'}\n                  {val}\n                </span>\n                <span className={className}>{description || t(i18nLabel)}</span>\n              </React.Fragment>\n            );\n          })}\n        <span className={clsx({ [styles.tooltipTotalRow]: showMath }, styles.tooltipNetStat)}>\n          <span>{stat.value}</span>\n          <span>{stat.displayProperties.name}</span>\n        </span>\n      </div>\n    </>\n  );\n}\n\nfunction StatTotal({\n  totalDetails,\n  optionalClasses,\n  stat,\n}: {\n  totalDetails: {\n    baseTotalValue: number;\n    totalModsValue: number;\n    totalMasterworkValue: number;\n  };\n  optionalClasses: NodeJS.Dict<boolean>;\n  stat: DimStat;\n}) {\n  return (\n    <div\n      className={clsx(styles.totalStatDetailed, optionalClasses)}\n      aria-label={stat.displayProperties.name}\n      title={stat.displayProperties.description}\n    >\n      <span>{totalDetails.baseTotalValue}</span>\n      {Boolean(totalDetails.totalModsValue > 0) && (\n        <span className={styles.totalStatModded}>{` + ${totalDetails.totalModsValue}`}</span>\n      )}\n      {Boolean(totalDetails.totalModsValue < 0) && (\n        <span\n          className={styles.totalStatNegativeModded}\n        >{` - ${-totalDetails.totalModsValue}`}</span>\n      )}\n      {Boolean(totalDetails.totalMasterworkValue) && (\n        <span className={styles.totalStatMasterwork}>\n          {` + ${totalDetails.totalMasterworkValue}`}\n        </span>\n      )}\n    </div>\n  );\n}\n\n/**\n * A special stat row for D1 items that have item quality calculations\n */\nexport function D1QualitySummaryStat({ item }: { item: D1Item }) {\n  if (!item.quality) {\n    return null;\n  }\n  return (\n    <>\n      <div className={styles.statName}>{t('Stats.Quality')}</div>\n      <div className={styles.qualitySummary} style={getD1QualityColor(item.quality.min, 'color')}>\n        {t('Stats.OfMaxRoll', { range: item.quality.range })}\n        <ExternalLink\n          href={userGuideUrl('View-how-good-the-stat-(Int-Dis-Str)-roll-on-your-armor-is')}\n          title={t('Stats.PercentHelp')}\n        >\n          <AppIcon icon={helpIcon} />\n        </ExternalLink>\n      </div>\n    </>\n  );\n}\n\n/**\n * Gets sockets that are considered \"mods\", like \"Mobility Mod\" in armor,\n * or \"Adept Range\" on weapons. These are marked blue on stat bars.\n */\nfunction getNonReusableModSockets(item: DimItem) {\n  if (!item.sockets) {\n    return [];\n  }\n\n  return item.sockets.allSockets.filter(\n    (s) =>\n      s.plugged &&\n      !s.isPerk && // excludes armor 1.0 perks and stats?\n      !socketContainsIntrinsicPlug(s) &&\n      !s.plugged.plugDef.plug.plugCategoryIdentifier.includes('masterwork') &&\n      (s.plugged.plugDef.itemCategoryHashes?.some((h) => modItemCategoryHashes.has(h)) ||\n        statfulOrnaments.includes(s.plugged.plugDef.hash)),\n  );\n}\n/**\n * Gets weapon parts, like barrels, mags, etc.\n * Sockets that contribute to the item's stats, but aren't its base stats or mods.\n */\nfunction getWeaponPartSockets(item: DimItem) {\n  return (item.sockets?.allSockets ?? []).filter((s) =>\n    s.plugged?.plugDef.itemCategoryHashes?.some((h) => weaponParts.has(h)),\n  );\n}\n\n/**\n * Looks through the item sockets to find any weapon/armor mods that modify this stat.\n * Returns the value the stat is modified by, or 0 if it is not being modified.\n */\nfunction getModEffects(item: DimItem, statHash: number) {\n  const modSockets = getNonReusableModSockets(item);\n  return getPlugEffects(modSockets, [statHash]);\n}\n/**\n * Looks through the item sockets to find any weapon/armor mods that modify this stat.\n * Returns the value the stat is modified by, or 0 if it is not being modified.\n */\nfunction getPartEffects(item: DimItem, statHash: number) {\n  const modSockets = getWeaponPartSockets(item);\n  return getPlugEffects(modSockets, [statHash]);\n}\n\nexport function isD1Stat(item: DimItem, _stat: DimStat): _stat is D1Stat {\n  return item.destinyVersion === 1;\n}\n\n/**\n * check all sockets for plug effects upon specified statHashes, and total them\n *\n * includes a check for conditionally active stats.\n * passing the item parameter will make this more accurate\n */\nfunction getTotalPlugEffects(sockets: DimSocket[], armorStatHashes: number[]) {\n  return sumBy(getPlugEffects(sockets, armorStatHashes), ([s]) => s);\n}\n\n/**\n * check all sockets for plug effects upon specified statHashes\n *\n * includes a check for conditionally active stats.\n * passing the item parameter will make this more accurate\n *\n * returns a list of tuples of\n * [ the mod's name, its numeric effect upon selected stats ]\n */\nfunction getPlugEffects(sockets: DimSocket[], statHashes: number[]) {\n  const modEffects: [value: number, name: string][] = [];\n\n  for (const socket of sockets) {\n    if (!socket.plugged?.enabled || !socket.plugged.stats || socketContainsIntrinsicPlug(socket)) {\n      continue;\n    }\n\n    for (const [statHash_, modificationAmount] of Object.entries(socket.plugged.stats)) {\n      const statHash = Number(statHash_);\n      if (!statHashes.includes(statHash)) {\n        continue;\n      }\n\n      modEffects.push([modificationAmount.value, socket.plugged.plugDef.displayProperties.name]);\n    }\n  }\n  return modEffects;\n}\n\nfunction breakDownTotalValue(\n  baseTotalValue: number,\n  item: DimItem,\n  masterworkSockets: DimSocket[],\n) {\n  const modSockets = getNonReusableModSockets(item);\n\n  // Armor 1.0 doesn't increase stats when masterworked\n  const totalModsValue = getTotalPlugEffects(modSockets, armorStats);\n  const totalMasterworkValue = masterworkSockets\n    ? getTotalPlugEffects(masterworkSockets, armorStats)\n    : 0;\n  return { baseTotalValue, totalModsValue, totalMasterworkValue };\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemStats.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemTagHotkeys.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemTagSelector.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemTagSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemTalentGrid.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\ItemTalentGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\KillTracker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\MetricCategories.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\MetricCategories.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\NotesArea.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\NotesArea.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\Plug.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\Plug.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\PlugTooltip.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\PlugTooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\RecoilStat.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\Socket.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\Socket.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\SocketDetails.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\SocketDetails.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\SocketDetailsSelectedPlug.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\SocketDetailsSelectedPlug.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\WeaponCatalystInfo.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\WeaponCatalystInfo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\WeaponCraftedInfo.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\WeaponCraftedInfo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\WeaponDeepsightInfo.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\WeaponDeepsightInfo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\item-popup-actions.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\item-popup-actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\item-popup.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-popup\\sidecar-popper-modifier.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-triage\\ItemTriage.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-triage\\ItemTriage.tsx","messages":[],"suppressedMessages":[{"ruleId":"css-modules/no-unused-class","severity":2,"message":"Unused classes found in ItemDescription.m.scss: label","line":34,"column":8,"nodeType":"ImportDefaultSpecifier","endLine":34,"endColumn":19,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-triage\\TriageFactors.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-triage\\triage-factors.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-triage\\triage-utils.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\item-triage\\triage-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-analyzer\\analysis.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-analyzer\\analysis.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-analyzer\\finding-display.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-analyzer\\hooks.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setAnalyzer' of 'useState' directly in 'useEffect'.","line":85,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":85,"endColumn":49}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { currentAccountSelector } from 'app/accounts/selectors';\nimport { savedLoStatConstraintsByClassSelector } from 'app/d2l-api/selectors';\nimport {\n  allItemsSelector,\n  createItemContextSelector,\n  unlockedPlugSetItemsSelector,\n} from 'app/inventory/selectors';\nimport { DimStore } from 'app/inventory/store-types';\nimport { loVendorItemsSelector } from 'app/loadout-builder/loadout-builder-vendors';\nimport { getAutoMods } from 'app/loadout-builder/process/mappers';\nimport { Loadout } from 'app/loadout/loadout-types';\nimport { d2ManifestSelector } from 'app/manifest/selectors';\nimport { filterFactorySelector, validateQuerySelector } from 'app/search/items/item-search-filter';\nimport { noop } from 'app/utils/functions';\nimport { currySelector } from 'app/utils/selectors';\nimport { useLoadVendors } from 'app/vendors/hooks';\nimport {\n  ReactNode,\n  createContext,\n  use,\n  useCallback,\n  useEffect,\n  useId,\n  useState,\n  useSyncExternalStore,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { LoadoutBackgroundAnalyzer } from './store';\nimport { LoadoutAnalysisContext, LoadoutAnalysisResult, LoadoutAnalysisSummary } from './types';\n\nconst LoadoutAnalyzerReactContext = createContext<LoadoutBackgroundAnalyzer | null>(null);\n\nconst autoModSelector = createSelector(\n  d2ManifestSelector,\n  unlockedPlugSetItemsSelector.selector,\n  (defs, unlockedPlugSetItems) => defs && getAutoMods(defs, unlockedPlugSetItems),\n);\n\n// It'd be really neat if this one didn't depend on the storeId but\n// unlockedPlugSetItemsSelector and as a result, autoModSelector\n// do need it.\nconst autoOptimizationContextSelector = currySelector(\n  createSelector(\n    createItemContextSelector,\n    unlockedPlugSetItemsSelector.selector,\n    savedLoStatConstraintsByClassSelector,\n    autoModSelector,\n    allItemsSelector,\n    loVendorItemsSelector.selector,\n    filterFactorySelector,\n    validateQuerySelector,\n    (\n      itemCreationContext,\n      unlockedPlugs,\n      savedLoStatConstraintsByClass,\n      autoModDefs,\n      inventoryItems,\n      vendorItems,\n      filterFactory,\n      validateQuery,\n    ) => {\n      const allItems = inventoryItems.concat(vendorItems);\n      return (\n        itemCreationContext.defs &&\n        autoModDefs &&\n        ({\n          itemCreationContext,\n          unlockedPlugs,\n          savedLoStatConstraintsByClass,\n          autoModDefs,\n          allItems,\n          filterFactory,\n          validateQuery,\n        } satisfies LoadoutAnalysisContext)\n      );\n    },\n  ),\n);\n\n/** Wrapper component that holds the analyzer task and results. */\nexport function MakeLoadoutAnalysisAvailable({ children }: { children: ReactNode }) {\n  const [analyzer, setAnalyzer] = useState<LoadoutBackgroundAnalyzer | null>(null);\n  useEffect(() => {\n    setAnalyzer(new LoadoutBackgroundAnalyzer());\n    return () => {\n      setAnalyzer((oldAnalyzer) => {\n        oldAnalyzer?.destroy();\n        return null;\n      });\n    };\n  }, []);\n  return <LoadoutAnalyzerReactContext value={analyzer}>{children}</LoadoutAnalyzerReactContext>;\n}\n\n/**\n * Keep injecting an up-to-date loadout analysis context into the analyzer so that\n * it can keep analyzing loadouts when the user changes items etc.\n */\nexport function useUpdateLoadoutAnalysisContext(storeId: string) {\n  const account = useSelector(currentAccountSelector)!;\n  const analyzer = use(LoadoutAnalyzerReactContext);\n  const analysisContext = useSelector(autoOptimizationContextSelector(storeId));\n\n  useLoadVendors(account, storeId);\n\n  useEffect(\n    () => analysisContext && analyzer?.updateAnalysisContext(storeId, analysisContext),\n    [analysisContext, analyzer, storeId],\n  );\n}\n\n/** Submit a single loadout to analysis. This will return undefined until results are available. */\nexport function useAnalyzeLoadout(\n  loadout: Loadout,\n  store: DimStore,\n  active: boolean,\n):\n  | {\n      outdated: boolean;\n      result: LoadoutAnalysisResult;\n    }\n  | undefined {\n  const id = useId();\n  const analyzer = use(LoadoutAnalyzerReactContext);\n  const subscribe = useCallback(\n    (callback: () => void) =>\n      active && analyzer\n        ? analyzer.subscribeToLoadoutResult(id, store.id, store.classType, loadout, callback)\n        : noop,\n    [active, analyzer, id, loadout, store.classType, store.id],\n  );\n  const getSnapshot = useCallback(\n    () => (active ? analyzer?.getLoadoutResults(store.id, loadout) : undefined),\n    [active, analyzer, loadout, store.id],\n  );\n  return useSyncExternalStore(subscribe, getSnapshot);\n}\n\n/** Bulk analyze loadouts, returning a summary with loadout IDs grouped by findings */\nexport function useSummaryLoadoutsAnalysis(\n  loadouts: Loadout[],\n  store: DimStore,\n  active: boolean,\n): LoadoutAnalysisSummary | undefined {\n  const id = useId();\n  const analyzer = use(LoadoutAnalyzerReactContext);\n  const subscribe = useCallback(\n    (callback: () => void) =>\n      active && analyzer\n        ? analyzer?.subscribeToSummary(id, store.id, store.classType, loadouts, callback)\n        : noop,\n    [active, analyzer, id, loadouts, store.classType, store.id],\n  );\n  const getSnapshot = useCallback(\n    () => (active ? analyzer?.getSummary(id) : undefined),\n    [active, analyzer, id],\n  );\n  return useSyncExternalStore(subscribe, getSnapshot);\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-analyzer\\store.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-analyzer\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-analyzer\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\LoadoutBucketDropTarget.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\LoadoutBucketDropTarget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\LoadoutBuilder.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\LoadoutBuilder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\LoadoutBuilderContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\LoadoutBuilderItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\NoBuildsFoundExplainer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\NoBuildsFoundExplainer.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":80,"column":16,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":80,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { AssumeArmorMasterwork, LoadoutParameters } from '@destinyitemmanager/dim-api-types';\nimport { AlertIcon } from 'app/d2l-ui/AlertIcon';\nimport { D2ManifestDefinitions } from 'app/destiny2/d2-definitions';\nimport { t } from 'app/i18next-t';\nimport { PluggableInventoryItemDefinition } from 'app/inventory/item-types';\nimport { ResolvedLoadoutMod } from 'app/loadout/loadout-types';\nimport PlugDef from 'app/loadout/loadout-ui/PlugDef';\nimport { ModMap } from 'app/loadout/mod-assignment-utils';\nimport { AppIcon, banIcon } from 'app/shell/icons';\nimport { compact, filterMap, uniqBy } from 'app/utils/collections';\nimport { DestinyClass } from 'bungie-api-ts/destiny2';\nimport { Dispatch } from 'react';\nimport styles from './NoBuildsFoundExplainer.m.scss';\nimport ExoticArmorChoice from './filter/ExoticArmorChoice';\nimport LockedItem from './filter/LockedItem';\nimport { FilterInfo } from './item-filter';\nimport { LoadoutBuilderAction } from './loadout-builder-reducer';\nimport { ProcessStatistics, RejectionRate } from './process-worker/types';\nimport { ArmorBucketHashes, ArmorEnergyRules, PinnedItems } from './types';\n\ninterface ActionableSuggestion {\n  id: string;\n  contents: React.ReactNode;\n}\n\ninterface ProblemDescription {\n  description: string;\n  id: string;\n  suggestions: ActionableSuggestion[];\n}\n\n/** How many sets can be excluded by upper bounds before we warn. Not too high because upper bounds are rarely useful. */\nconst UPPER_STAT_BOUNDS_WARN_RATIO = 0.8;\n/**\n * How many sets can be excluded by lower bounds before we warn.\n * Quite high because LO's purpose is literally to sift through tons of garbage sets.\n */\nconst LOWER_STAT_BOUNDS_WARN_RATIO = 0.95;\n/**\n * Pretty much only from activity mods or too many expensive mods.\n */\nconst EARLY_MOD_REJECTION_WARN_RATIO = 0.8;\n\nexport default function NoBuildsFoundExplainer({\n  defs,\n  dispatch,\n  classType,\n  params,\n  resolvedMods,\n  lockedModMap,\n  alwaysInvalidMods,\n  armorEnergyRules,\n  pinnedItems,\n  filterInfo,\n  processInfo,\n}: {\n  defs: D2ManifestDefinitions;\n  dispatch: Dispatch<LoadoutBuilderAction>;\n  classType: DestinyClass;\n  params: LoadoutParameters;\n  resolvedMods: ResolvedLoadoutMod[];\n  lockedModMap: ModMap;\n  alwaysInvalidMods: PluggableInventoryItemDefinition[];\n  armorEnergyRules: ArmorEnergyRules;\n  pinnedItems: PinnedItems;\n  filterInfo?: FilterInfo;\n  processInfo?: ProcessStatistics;\n}) {\n  const problems: ProblemDescription[] = [];\n\n  // Note: This component looks at what happened to mods when they were assigned, and offers ways to\n  // remove them based on that. Unfortunately removal needs ResolvedLoadoutMods, but we don't really want\n  // to make all mod assignment code operate on ResolvedLoadoutMods, so instead we find the original mod\n  // using a search through `resolvedMods`. We should avoid this, so maybe look at using ResolvedLoadoutMod more?\n\n  const modRow = (mods: PluggableInventoryItemDefinition[]) => (\n    <div key=\"modsDisplay\" className={styles.modRow}>\n      {mods.map((mod, index) => (\n        <PlugDef\n          key={index}\n          plug={mod}\n          onClose={() =>\n            dispatch({\n              type: 'removeLockedMod',\n              mod: resolvedMods.find((resolved) => resolved.resolvedMod === mod)!,\n            })\n          }\n          forClassType={classType}\n        />\n      ))}\n    </div>\n  );\n\n  // Easy to diagnose problem -- we have things that aren't\n  // armor mods, or deprecated mods. The correct option is\n  // to drop them, so offer that.\n  if (alwaysInvalidMods.length) {\n    problems.push({\n      id: 'alwaysInvalidMods',\n      description: t('LoadoutBuilder.NoBuildsFoundExplainer.AlwaysInvalidMods'),\n      suggestions: [\n        {\n          id: 'dropInvalidMods',\n          contents: (\n            <>\n              <button\n                key=\"removeAllInvalid\"\n                type=\"button\"\n                className=\"d2l-button\"\n                onClick={() =>\n                  dispatch({\n                    type: 'lockedModsChanged',\n                    // Drop all invalid mods by setting current mods to only the valid mods\n                    lockedMods: lockedModMap.allMods.map((mod) => mod.hash),\n                  })\n                }\n              >\n                <AppIcon icon={banIcon} /> {t('LoadoutBuilder.NoBuildsFoundExplainer.RemoveMods')}\n              </button>\n              {modRow(alwaysInvalidMods)}\n            </>\n          ),\n        },\n      ],\n    });\n  }\n\n  let failedModsInBucket = false;\n\n  // Also quite easy to diagnose: If a bucket has no valid pieces before we send to the worker,\n  // then we should consider removing some item restrictions (such as unpinning/unrestricting items)\n  // or removing mods.\n  if (filterInfo) {\n    const lockedExoticHash = params.exoticArmorHash;\n    const lockedExoticBucketHash =\n      lockedExoticHash !== undefined &&\n      lockedExoticHash > 0 &&\n      defs.InventoryItem.get(lockedExoticHash).inventory!.bucketTypeHash;\n    for (const bucketHash of ArmorBucketHashes) {\n      const bucketInfo = filterInfo.perBucketStats[bucketHash];\n      const bucketMods = lockedModMap.bucketSpecificMods[bucketHash];\n      if (bucketInfo.totalConsidered > 0 && bucketInfo.finalValid === 0 && bucketMods?.length) {\n        failedModsInBucket = true;\n        const suggestions: ActionableSuggestion[] = [\n          {\n            id: 'considerDroppingMods',\n            contents: (\n              <>\n                {t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeRemoveMods')}\n                {modRow(bucketMods)}\n              </>\n            ),\n          },\n        ];\n        const pinnedItem = pinnedItems[bucketHash];\n        if (pinnedItem) {\n          suggestions.push({\n            id: 'considerUnpinningItem',\n            contents: (\n              <>\n                {t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeAllowMoreItems')}\n                <div className={styles.modRow}>\n                  <LockedItem\n                    lockedItem={pinnedItem}\n                    onRemove={() => dispatch({ type: 'unpinItem', item: pinnedItem })}\n                  />\n                </div>\n              </>\n            ),\n          });\n        }\n\n        if (bucketHash === lockedExoticBucketHash) {\n          suggestions.push({\n            id: 'considerRemovingExotic',\n            contents: (\n              <>\n                {t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeAllowMoreItems')}\n                <div className={styles.modRow}>\n                  <ExoticArmorChoice\n                    lockedExoticHash={lockedExoticHash!}\n                    onClose={() => dispatch({ type: 'removeLockedExotic' })}\n                  />\n                </div>\n              </>\n            ),\n          });\n        }\n\n        problems.push({\n          id: `badBucket-${bucketHash}`,\n          description: t('LoadoutBuilder.NoBuildsFoundExplainer.BadSlot', {\n            bucketName: defs.InventoryBucket.get(bucketHash).displayProperties.name,\n          }),\n          suggestions,\n        });\n      }\n    }\n  }\n\n  // TODO: Maybe add a \"trivially infeasible slot-independent mods\" check?\n  // E.g. if we have solar mods in helmet, arms and chest but have more than\n  // two non-solar combat mods, mod assignment is trivially infeasible and we\n  // can point that out directly?\n\n  const anyStatMinimums = params.statConstraints!.some((f) => Boolean(f.minTier || f.minStat));\n\n  const bucketIndependentMods = [...lockedModMap.generalMods, ...lockedModMap.activityMods];\n\n  const capacityMayCauseProblems =\n    armorEnergyRules.assumeArmorMasterwork !== AssumeArmorMasterwork.All &&\n    armorEnergyRules.assumeArmorMasterwork !== AssumeArmorMasterwork.ArtificeExotic &&\n    (processInfo?.statistics.modsStatistics.finalAssignment.modsAssignmentFailed ||\n      processInfo?.statistics.modsStatistics.finalAssignment.autoModsAssignmentFailed ||\n      failedModsInBucket) &&\n    (lockedModMap.allMods.length || anyStatMinimums);\n\n  if ((!alwaysInvalidMods || alwaysInvalidMods.length === 0) && capacityMayCauseProblems) {\n    // If we might have problems assigning bucket specific mods or mods in the\n    // process worker, offer some advice.\n    problems.push({\n      id: 'armorEnergyRestrictions',\n      description: t('LoadoutBuilder.NoBuildsFoundExplainer.AssumptionsRestricted'),\n      suggestions: [\n        {\n          id: 'assumeMasterworked',\n          contents: (\n            <button\n              key=\"assumeMasterworked\"\n              type=\"button\"\n              className=\"d2l-button\"\n              onClick={() =>\n                dispatch({\n                  type: 'assumeArmorMasterworkChanged',\n                  assumeArmorMasterwork: AssumeArmorMasterwork.All,\n                })\n              }\n            >\n              {t('LoadoutBuilder.NoBuildsFoundExplainer.AssumeMasterworked')}\n            </button>\n          ),\n        },\n      ],\n    });\n  }\n\n  // This time we made it to the LO worker process,\n  // so time to investigate why LO could not find a single set.\n  if (processInfo) {\n    if (filterInfo?.searchQueryEffective) {\n      problems.push({\n        id: 'searchQuery',\n        description: t('LoadoutBuilder.NoBuildsFoundExplainer.ActiveSearchQuery'),\n        suggestions: [\n          {\n            id: 'clearQuery',\n            contents: t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeRemoveSearchQuery'),\n          },\n        ],\n      });\n    }\n\n    const allPinnedItems = filterMap(ArmorBucketHashes, (hash) => pinnedItems[hash]);\n    let usedUnpinSuggestion = false;\n    const unpinItemsSuggestion = () => {\n      if (usedUnpinSuggestion) {\n        return undefined;\n      }\n      usedUnpinSuggestion = true;\n      return (\n        allPinnedItems.length > 0 && {\n          id: 'considerUnpinningItems',\n          contents: (\n            <>\n              {t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeAllowMoreItems')}\n              {allPinnedItems.map((pinnedItem) => (\n                <div key={pinnedItem.id} className={styles.modRow}>\n                  <LockedItem\n                    lockedItem={pinnedItem}\n                    onRemove={() => dispatch({ type: 'unpinItem', item: pinnedItem })}\n                  />\n                </div>\n              ))}\n            </>\n          ),\n        }\n      );\n    };\n\n    // Here, we check which parts of the worker process rejected a ton of sets. LO essentially\n    // checks upper bounds, lower bounds, mod assignments in that order. We base our reports on the\n    // percentage of sets that failed each of the steps. This is, statistically speaking, not really a good\n    // way to do it because the \"last\" step that fails always fails 100% of the sets it sees (otherwise\n    // it either wouldn't be the last step or we wouldn't be here). So if we have three filter steps A -> B -> C and no sets,\n    // where A, B, C are the events that a set would independently pass A, B and C respectively,\n    // we get approximations for P(!A), P(!B | A) (B failed given that A succeeded) and P(!C | B∩A) (similarly)\n    // our numFailed/numChecked rate for C will be either 0/0 or result in P(!C | B∩A) = 1.\n    // Say A is the upper bounds check, B is the lower bounds check, and C is mod assignment, then if A rejected 99.9% of sets\n    // and left 1 set through, this set passed lower bounds, and then we failed to assign combat mods to that 1 set in step C,\n    // then blaming the selected combat mods is kind of unfair even though 100% of sets failed C. So there's no perfect way to solve this,\n    // we just have to make up percentages that work well.\n    // As an aside, this particularly interesting when the steps aren't statistically independent -- e.g. if everything that\n    // passes A fails C and everything that fails A would pass C.\n    // This might happen with stat upper bounds -- non-masterworked armor tends to have lower stats, so may pass more upper bounds\n    // checks, but also has less energy capacity for mods. So upper bounds should probably be warned about quite early and often.\n\n    const isInteresting = ({ timesChecked, timesFailed }: RejectionRate, threshold: number) =>\n      timesChecked > 0 && timesFailed / timesChecked >= threshold;\n\n    const {\n      lowerBoundsExceeded,\n      upperBoundsExceeded,\n      modsStatistics: modsStats,\n    } = processInfo.statistics;\n\n    if (isInteresting(upperBoundsExceeded, UPPER_STAT_BOUNDS_WARN_RATIO)) {\n      problems.push({\n        id: 'upperBoundsExceeded',\n        description: t('LoadoutBuilder.NoBuildsFoundExplainer.UpperBoundsFailed'),\n        suggestions: compact([\n          {\n            id: 'hint',\n            contents: t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeIncreaseUpperBounds'),\n          },\n          unpinItemsSuggestion(),\n        ]),\n      });\n    }\n\n    if (isInteresting(lowerBoundsExceeded, LOWER_STAT_BOUNDS_WARN_RATIO)) {\n      problems.push({\n        id: 'lowerBoundsExceeded',\n        description: t('LoadoutBuilder.NoBuildsFoundExplainer.LowerBoundsFailed'),\n        suggestions: compact([\n          !params.autoStatMods &&\n            $featureFlags.loAutoStatMods && {\n              id: 'hint1',\n              contents: (\n                <button\n                  key=\"allowAutoStatMods\"\n                  type=\"button\"\n                  className=\"d2l-button\"\n                  onClick={() =>\n                    dispatch({\n                      type: 'autoStatModsChanged',\n                      autoStatMods: true,\n                    })\n                  }\n                >\n                  {t('LoadoutBuilder.NoBuildsFoundExplainer.AllowAutoStatMods')}\n                </button>\n              ),\n            },\n          params.autoStatMods &&\n            lockedModMap.generalMods.length > 0 && {\n              id: 'removeGeneralMods',\n              contents: (\n                <>\n                  {t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeRemoveMods')}\n                  {modRow(lockedModMap.generalMods)}\n                </>\n              ),\n            },\n          {\n            id: 'hint2',\n            contents: t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeDecreaseLowerBounds'),\n          },\n          unpinItemsSuggestion(),\n        ]),\n      });\n    }\n\n    if (modsStats.earlyModsCheck.timesChecked > 0) {\n      // If we got here, we took a closer look at a number of sets, but failed to pick/assign mods.\n\n      const suggestions: (ActionableSuggestion | false | undefined)[] = [];\n\n      if (isInteresting(modsStats.earlyModsCheck, EARLY_MOD_REJECTION_WARN_RATIO)) {\n        // Early mod rejection is mod tags\n        suggestions.push(\n          lockedModMap.activityMods.length > 0 && {\n            id: 'removeElementOrTagMods',\n            contents: (\n              <>\n                {t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeRemoveMods')}\n                {modRow([...lockedModMap.activityMods])}\n              </>\n            ),\n          },\n          unpinItemsSuggestion(),\n        );\n      }\n\n      if (isInteresting(modsStats.autoModsPick, LOWER_STAT_BOUNDS_WARN_RATIO)) {\n        // We fail to pick stat mods to hit these stats very often, so consider\n        // relaxing stat requirements and dropping general mods so min auto mods\n        // has more freedom\n        suggestions.push(\n          lockedModMap.generalMods.length > 0 && {\n            id: 'removeGeneralMods',\n            contents: (\n              <>\n                {t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeRemoveMods')}\n                {modRow(lockedModMap.generalMods)}\n              </>\n            ),\n          },\n          {\n            id: 'decreaseLowerBounds',\n            contents: t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeDecreaseLowerBounds'),\n          },\n          unpinItemsSuggestion(),\n        );\n      }\n\n      if (modsStats.finalAssignment.modAssignmentAttempted > 0) {\n        // We made it to mod assignment, but didn't end up successfully. Definitely worth pointing out.\n        suggestions.push(\n          bucketIndependentMods.length > 0 && {\n            id: 'removeBucketIndependentMods',\n            contents: (\n              <>\n                {t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeRemoveMods')}\n                {modRow(bucketIndependentMods)}\n              </>\n            ),\n          },\n          modsStats.finalAssignment.autoModsAssignmentFailed > 0 && {\n            id: 'decreaseLowerBounds',\n            contents: t('LoadoutBuilder.NoBuildsFoundExplainer.MaybeDecreaseLowerBounds'),\n          },\n          unpinItemsSuggestion(),\n        );\n      }\n      problems.push({\n        id: 'modAssignmentFailed',\n        description: t('LoadoutBuilder.NoBuildsFoundExplainer.ModAssignmentFailed'),\n        suggestions: uniqBy(compact(suggestions), ({ id }) => id),\n      });\n    }\n  }\n\n  return (\n    <div className={styles.noBuildsExplainerContainer}>\n      <h3 className={styles.noBuildsFoundMsg}>\n        <AlertIcon />\n        {t('LoadoutBuilder.NoBuildsFoundExplainer.Header')}\n      </h3>\n      {problems.length > 0 && (\n        <ul>\n          {problems.map((p) => (\n            <li key={p.id}>\n              <div className={styles.problemDescription}>\n                <h3>{p.description}</h3>\n                <ul className={styles.suggestionList}>\n                  {p.suggestions.map((suggestion) => (\n                    <li key={suggestion.id}>{suggestion.contents}</li>\n                  ))}\n                </ul>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\EnergyOptions.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\EnergyOptions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\ExoticArmorChoice.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\ExoticArmorChoice.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\ExoticPicker.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\ExoticPicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\ExoticTile.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\ExoticTile.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\LoadoutOptimizerExotic.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\LoadoutOptimizerExotic.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\LoadoutOptimizerMenuItems.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\LoadoutOptimizerMenuItems.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\LockedItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\NewFeaturedGearFilter.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\NewFeaturedGearFilter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\TierlessStatConstraintEditor.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\filter\\TierlessStatConstraintEditor.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setMinText' of 'useState' directly in 'useEffect'.","line":272,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":272,"endColumn":31},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setMaxText' of 'useState' directly in 'useEffect'.","line":275,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":275,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import {\n  DragDropContext,\n  Draggable,\n  Droppable,\n  DropResult,\n  PreDragActions,\n  SensorAPI,\n  SnapDragActions,\n} from '@hello-pangea/dnd';\nimport BungieImage from 'app/d2l-ui/BungieImage';\nimport { t } from 'app/i18next-t';\nimport { DimStore } from 'app/inventory/store-types';\nimport { MAX_STAT } from 'app/loadout/known-values';\nimport LoadoutEditSection from 'app/loadout/loadout-edit/LoadoutEditSection';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { percent } from 'app/shell/formatters';\nimport {\n  AppIcon,\n  dragHandleIcon,\n  faCheckSquare,\n  faSquare,\n  moveDownIcon,\n  moveUpIcon,\n} from 'app/shell/icons';\nimport { delay } from 'app/utils/promises';\nimport clsx from 'clsx';\nimport { Dispatch, useEffect, useId, useRef, useState } from 'react';\nimport { LoadoutBuilderAction } from '../loadout-builder-reducer';\nimport { ArmorStatHashes, MinMaxStat, ResolvedStatConstraint, StatRanges } from '../types';\nimport styles from './TierlessStatConstraintEditor.m.scss';\n\n/**\n * A selector that allows for choosing minimum and maximum stat ranges, plus\n * reordering the stat priority. This does not use tiers, it allows selecting\n * exact stat values and is mean to be used after Edge of Fate releases and\n * makes all stats have an incremental effect.\n */\nexport default function TierlessStatConstraintEditor({\n  store,\n  resolvedStatConstraints,\n  statRangesFiltered,\n  equippedHashes,\n  className,\n  lbDispatch,\n  processing,\n}: {\n  store: DimStore;\n  resolvedStatConstraints: ResolvedStatConstraint[];\n  /** The ranges the stats could have gotten to INCLUDING stat filters and mod compatibility */\n  statRangesFiltered?: Readonly<StatRanges>;\n  equippedHashes: Set<number>;\n  className?: string;\n  lbDispatch: Dispatch<LoadoutBuilderAction>;\n  processing: boolean;\n}) {\n  // Actually change the stat constraints in the LO state, which triggers recalculation of sets.\n  const handleStatChange = (constraint: ResolvedStatConstraint) =>\n    lbDispatch({ type: 'statConstraintChanged', constraint });\n\n  const handleClear = () => lbDispatch({ type: 'statConstraintReset' });\n\n  const handleRandomize = () => lbDispatch({ type: 'statConstraintRandomize' });\n\n  const handleSyncFromEquipped = () => {\n    const constraints = Object.values(store.stats).map(\n      (s): ResolvedStatConstraint => ({\n        statHash: s.hash,\n        ignored: false,\n        maxStat: MAX_STAT,\n        minStat: s.value,\n      }),\n    );\n    lbDispatch({ type: 'setStatConstraints', constraints });\n  };\n\n  // Handle dropping the stat constraints in a new order\n  const handleDragEnd = (result: DropResult) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    const sourceIndex = result.source.index;\n    const destinationIndex = result.destination.index;\n    if (sourceIndex !== destinationIndex) {\n      lbDispatch({\n        type: 'statOrderChanged',\n        sourceIndex,\n        destinationIndex: result.destination.index,\n      });\n    }\n  };\n\n  return (\n    <LoadoutEditSection\n      title={t('LoadoutBuilder.StatConstraints')}\n      className={className}\n      onClear={handleClear}\n      onSyncFromEquipped={handleSyncFromEquipped}\n      onRandomize={handleRandomize}\n    >\n      <DragDropContext onDragEnd={handleDragEnd} sensors={[useButtonSensor]}>\n        <Droppable droppableId=\"droppable\">\n          {(provided) => (\n            <div ref={provided.innerRef} className={styles.editor}>\n              {resolvedStatConstraints.map((c, index) => {\n                const statHash = c.statHash as ArmorStatHashes;\n                return (\n                  <StatRow\n                    key={statHash}\n                    statConstraint={c}\n                    index={index}\n                    statRange={statRangesFiltered?.[statHash]}\n                    onStatChange={handleStatChange}\n                    equippedHashes={equippedHashes}\n                    processing={processing}\n                  />\n                );\n              })}\n\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </LoadoutEditSection>\n  );\n}\n\nfunction StatRow({\n  statConstraint,\n  statRange,\n  index,\n  onStatChange,\n  equippedHashes,\n  processing,\n}: {\n  statConstraint: ResolvedStatConstraint;\n  statRange?: MinMaxStat;\n  index: number;\n  onStatChange: (constraint: ResolvedStatConstraint) => void;\n  equippedHashes: Set<number>;\n  processing: boolean;\n}) {\n  const defs = useD2Definitions()!;\n  const statHash = statConstraint.statHash as ArmorStatHashes;\n  const statDef = defs.Stat.get(statHash);\n  const handleIgnore = () => onStatChange({ ...statConstraint, ignored: !statConstraint.ignored });\n\n  const setMin = (value: number) => {\n    if (value !== statConstraint.minStat) {\n      onStatChange({\n        ...statConstraint,\n        minStat: value,\n        maxStat: Math.max(value, statConstraint.maxStat),\n      });\n    }\n  };\n  const setMax = (value: number) => {\n    if (value !== statConstraint.maxStat) {\n      onStatChange({\n        ...statConstraint,\n        minStat: Math.min(value, statConstraint.minStat),\n        maxStat: value,\n      });\n    }\n  };\n\n  const min = statConstraint.minStat;\n  const max = statConstraint.maxStat;\n\n  return (\n    <Draggable draggableId={statHash.toString()} index={index}>\n      {(provided, snapshot) => (\n        <div\n          className={clsx(styles.row, {\n            [styles.dragging]: snapshot.isDragging,\n            [styles.ignored]: statConstraint.ignored,\n          })}\n          data-index={index}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n        >\n          <span\n            className={styles.grip}\n            {...provided.dragHandleProps}\n            tabIndex={-1}\n            aria-hidden={true}\n          >\n            <AppIcon icon={dragHandleIcon} />\n          </span>\n          <div className={styles.name}>\n            <button\n              type=\"button\"\n              role=\"checkbox\"\n              aria-checked={!statConstraint.ignored}\n              className={styles.rowControl}\n              onClick={handleIgnore}\n              title={t('LoadoutBuilder.IgnoreStat')}\n            >\n              <AppIcon icon={statConstraint.ignored ? faSquare : faCheckSquare} />\n            </button>\n            <div className={styles.label} {...provided.dragHandleProps}>\n              <BungieImage\n                className={styles.iconStat}\n                src={statDef.displayProperties.icon}\n                aria-hidden={true}\n                alt=\"\"\n              />\n              {statDef.displayProperties.name}\n            </div>\n          </div>\n          <div className={styles.buttons}>\n            <button\n              type=\"button\"\n              className={styles.rowControl}\n              title={t('LoadoutBuilder.IncreaseStatPriority')}\n              disabled={index === 0}\n              tabIndex={-1 /* Better to use the react-dnd keyboard interactions than this button */}\n              data-direction=\"up\"\n              data-draggable-id={statHash.toString()}\n            >\n              <AppIcon icon={moveUpIcon} />\n            </button>\n            <button\n              type=\"button\"\n              className={styles.rowControl}\n              title={t('LoadoutBuilder.DecreaseStatPriority')}\n              disabled={index === 5}\n              tabIndex={-1 /* Better to use the react-dnd keyboard interactions than this button */}\n              data-direction=\"down\"\n              data-draggable-id={statHash.toString()}\n            >\n              <AppIcon icon={moveDownIcon} />\n            </button>\n          </div>\n          {!statConstraint.ignored && (\n            <StatEditBar min={min} max={max} setMin={setMin} setMax={setMax}>\n              <StatBar\n                range={statRange}\n                equippedHashes={equippedHashes}\n                min={min}\n                max={max}\n                setMin={setMin}\n                setMax={setMax}\n                processing={processing}\n              />\n            </StatEditBar>\n          )}\n        </div>\n      )}\n    </Draggable>\n  );\n}\n\nfunction StatEditBar({\n  min,\n  max,\n  setMin,\n  setMax,\n  children,\n}: {\n  min: number;\n  max: number;\n  setMin: (value: number) => void;\n  setMax: (value: number) => void;\n  children: React.ReactNode;\n}) {\n  const id = useId();\n  const [minText, setMinText] = useState(min.toString());\n  const [maxText, setMaxText] = useState(max.toString());\n  useEffect(() => {\n    setMinText(min.toString());\n  }, [min]);\n  useEffect(() => {\n    setMaxText(max.toString());\n  }, [max]);\n\n  const setMinMaxFromText = (text: string, setter: (s: number) => void) => {\n    const value = parseInt(text, 10);\n    if (isNaN(value) || value < 0 || value > MAX_STAT) {\n      return;\n    }\n    setter(value);\n  };\n  const setMinFromText = setMinMaxFromText.bind(null, minText, setMin);\n  const setMaxFromText = setMinMaxFromText.bind(null, maxText, setMax);\n\n  const handleEnter = (setter: () => void) => (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      setter();\n    }\n  };\n\n  return (\n    <div className={styles.statBar}>\n      <input\n        id={`${id}-min`}\n        type=\"number\"\n        min={0}\n        max={MAX_STAT}\n        value={minText}\n        aria-label={t('LoadoutBuilder.StatMin')}\n        onChange={(e) => {\n          setMinText(e.target.value);\n        }}\n        onBlur={setMinFromText}\n        onKeyDown={handleEnter(setMinFromText)}\n      />\n      {children}\n      <input\n        id={`${id}-max`}\n        type=\"number\"\n        min={0}\n        max={MAX_STAT}\n        value={maxText}\n        aria-label={t('LoadoutBuilder.StatMax')}\n        onChange={(e) => {\n          setMaxText(e.target.value);\n        }}\n        onBlur={setMaxFromText}\n        onKeyDown={handleEnter(setMaxFromText)}\n      />\n    </div>\n  );\n}\n\nfunction StatBar({\n  min,\n  max,\n  range,\n  setMin,\n  setMax,\n  processing,\n}: {\n  range?: MinMaxStat;\n  equippedHashes: Set<number>;\n  min: number;\n  max: number;\n  setMin: (value: number) => void;\n  setMax: (value: number) => void;\n  processing: boolean;\n}) {\n  const [dragging, setDragging] = useState(false);\n  const [dragValue, setDragValue] = useState(0);\n  // Whether we're dragging the max or min value\n  const draggingMax = useRef(false);\n  const lastClickTime = useRef(0);\n\n  // Set the live value of min or max based on where the pointer is\n  const setValueToPointer = (e: React.PointerEvent<HTMLDivElement>) => {\n    const bar = e.currentTarget;\n    const rect = bar.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const ratio = Math.max(0, Math.min(1, clickX / rect.width));\n    const value = Math.round(ratio * MAX_STAT);\n    setDragValue(value);\n  };\n\n  const handlePointerMove = (e: React.PointerEvent<HTMLDivElement>) => {\n    setValueToPointer(e);\n  };\n\n  // Commit the value on pointer up\n  const handlePointerUp = (e: React.PointerEvent<HTMLDivElement>) => {\n    const bar = e.currentTarget;\n    bar.releasePointerCapture(e.pointerId);\n    // Detect double-click\n    if (performance.now() - lastClickTime.current < 200 && !draggingMax.current && range) {\n      setMin(range.maxStat);\n    } else {\n      draggingMax.current ? setMax(dragValue) : setMin(dragValue);\n    }\n    setDragging(false);\n    lastClickTime.current = performance.now();\n  };\n  const handlePointerDown = (e: React.PointerEvent<HTMLDivElement>) => {\n    // If you shift-click you set max, or if you click on the max bar first.\n    draggingMax.current = e.shiftKey || (e.target as Element).classList.contains(styles.statBarMax);\n    const bar = e.currentTarget;\n    bar.setPointerCapture(e.pointerId);\n    setValueToPointer(e);\n    setDragging(true);\n  };\n\n  const effectiveMin = dragging && !draggingMax.current ? dragValue : min;\n  const effectiveMax = dragging && draggingMax.current ? dragValue : max;\n\n  return (\n    <div\n      className={styles.statRange}\n      title={\n        range &&\n        t('LoadoutBuilder.StatRangeTooltip', {\n          min: range.minStat,\n          max: range.maxStat,\n        })\n      }\n      onPointerDown={handlePointerDown}\n      onPointerUp={dragging ? handlePointerUp : undefined}\n      onPointerMove={dragging ? handlePointerMove : undefined}\n    >\n      {range && range.minStat < range.maxStat && (\n        <div\n          className={clsx(styles.statBarFill, { [styles.processing]: processing })}\n          style={{\n            left: percent(range.minStat / MAX_STAT),\n            width: percent((range.maxStat - range.minStat) / MAX_STAT),\n          }}\n        />\n      )}\n      {(!range || range.minStat !== max) && (\n        <div\n          key=\"min\"\n          className={styles.statBarMin}\n          style={{ left: percent(effectiveMin / MAX_STAT) }}\n        />\n      )}\n      {(!range || range.maxStat !== max) && (\n        <div\n          key=\"max\"\n          className={styles.statBarMax}\n          style={{ left: percent(effectiveMax / MAX_STAT) }}\n        />\n      )}\n    </div>\n  );\n}\n\n// Listen for button presses on the up and down buttons and turn it into lift+move+drop actions.\nfunction useButtonSensor(api: SensorAPI) {\n  useEffect(() => {\n    const onClick = (event: MouseEvent) => {\n      // Event already used\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      const target = event.target as HTMLButtonElement;\n      if (\n        target.tagName !== 'BUTTON' ||\n        target.disabled ||\n        !target.dataset.direction ||\n        !target.dataset.draggableId\n      ) {\n        return;\n      }\n\n      const draggableId = target.dataset.draggableId;\n      if (!draggableId) {\n        return;\n      }\n\n      const preDrag: PreDragActions | null = api.tryGetLock(draggableId);\n      if (!preDrag) {\n        return;\n      }\n\n      // we are consuming the event\n      event.preventDefault();\n\n      (async () => {\n        const actions: SnapDragActions = preDrag.snapLift();\n        if (target.dataset.direction === 'down') {\n          actions.moveDown();\n        } else if (target.dataset.direction === 'up') {\n          actions.moveUp();\n        }\n        await delay(300);\n        actions.drop();\n      })();\n    };\n    document.addEventListener('click', onClick);\n    return () => document.removeEventListener('click', onClick);\n  }, [api]);\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\CompareLoadoutsDrawer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\CompareLoadoutsDrawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\GeneratedSet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\GeneratedSet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\GeneratedSetButtons.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\GeneratedSetButtons.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\GeneratedSetItem.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\GeneratedSetItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\GeneratedSets.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\SetStats.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\SetStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\generated-sets\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\item-filter.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\item-filter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\loadout-builder-reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\loadout-builder-vendors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\loadout-params.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\loadout-params.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process-worker\\ProcessWorker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process-worker\\auto-stat-mod-utils.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process-worker\\auto-stat-mod-utils.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/prefer-optional-chain","severity":2,"message":"Prefer using an optional chain expression instead, as it's more concise and easier to read.","line":87,"column":7,"nodeType":null,"messageId":"preferOptionalChain","endLine":87,"endColumn":52,"suggestions":[{"fix":{"range":[3224,3269],"text":"pickedMods?.length"},"messageId":"optionalChainSuggest","desc":"Change to an optional chain."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/prefer-for-of","severity":2,"message":"Expected a `for-of` loop instead of a `for` loop with this simple iteration.","line":91,"column":5,"nodeType":"ForStatement","messageId":"preferForOf","endLine":93,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process-worker\\process-utils.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process-worker\\process-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process-worker\\process.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process-worker\\set-tracker.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process-worker\\set-tracker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process-worker\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process\\mappers.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process\\mappers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process\\process-wrapper.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\process\\useProcess.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\updated-loadout.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\useEquippedHashes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-builder\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\LoadoutDrawer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\LoadoutDrawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\LoadoutDrawerContainer.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setInitialLoadout' of 'useState' directly in 'useEffect'.","line":48,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":48,"endColumn":33},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setInitialLoadout' of 'useState' directly in 'useEffect'.","line":128,"column":9,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":133,"endColumn":11}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { DestinyAccount } from 'app/accounts/destiny-account';\nimport { t } from 'app/i18next-t';\nimport { DimItem } from 'app/inventory/item-types';\nimport { storesSelector } from 'app/inventory/selectors';\nimport { getCurrentStore } from 'app/inventory/stores-helpers';\nimport { warnMissingClass } from 'app/loadout-builder/loadout-builder-reducer';\nimport { decodeUrlLoadout } from 'app/loadout/loadout-share/loadout-import';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { showNotification } from 'app/notifications/notifications';\nimport { errorMessage } from 'app/utils/errors';\nimport { useEventBusListener } from 'app/utils/hooks';\nimport { DestinyClass } from 'bungie-api-ts/destiny2';\nimport { Suspense, lazy, useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router';\nimport { EditLoadoutState, addItem$, editLoadout$ } from './loadout-events';\nimport { convertToLoadoutItem, newLoadout, pickBackingStore } from './loadout-utils';\n\nconst LoadoutDrawer = lazy(\n  () => import(/* webpackChunkName: \"loadout-drawer\" */ './LoadoutDrawer'),\n);\nconst D1LoadoutDrawer = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"d1-loadout-drawer\" */ 'app/destiny1/loadout-drawer/D1LoadoutDrawer'\n    ),\n);\n\n/**\n * A launcher for the LoadoutDrawer. This is used both so we can lazy-load the\n * LoadoutDrawer, and so we can make sure defs are defined when the loadout\n * drawer is rendered.\n */\nexport default function LoadoutDrawerContainer({ account }: { account: DestinyAccount }) {\n  const defs = useD2Definitions();\n  const navigate = useNavigate();\n  const { search: queryString, pathname } = useLocation();\n\n  // This state only holds the initial version of the loadout that launches the\n  // drawer - after that, the loadout drawer itself manages edits to the\n  // loadout.\n  // TODO: Alternately we could come up with the concept of a\n  // `useControlledReducer` that applied a reducer to mutate an object whose\n  // state is handled outside the component.\n  const [initialLoadout, setInitialLoadout] = useState<EditLoadoutState>();\n\n  const handleDrawerClose = useCallback(() => {\n    setInitialLoadout(undefined);\n  }, []);\n\n  const stores = useSelector(storesSelector);\n\n  // The loadout to edit comes in from the editLoadout$ observable\n  useEventBusListener(\n    editLoadout$,\n    useCallback(\n      (state) => {\n        const { storeId, loadout } = state;\n        // Fall back to current store because otherwise there's no way to delete loadouts\n        // the user doesn't have a class for.\n        const editingStore =\n          pickBackingStore(stores, storeId, loadout.classType) ?? getCurrentStore(stores);\n\n        if (!editingStore) {\n          if (defs) {\n            warnMissingClass(loadout.classType, defs);\n          }\n          return;\n        }\n\n        setInitialLoadout({ ...state, storeId: editingStore.id });\n      },\n      [stores, defs],\n    ),\n  );\n\n  const hasInitialLoadout = Boolean(initialLoadout);\n\n  // Only react to add item if there's not a loadout open (otherwise it'll be handled in the loadout drawer!)\n  useEventBusListener(\n    addItem$,\n    useCallback(\n      (item: DimItem) => {\n        if (!hasInitialLoadout) {\n          // If we don't have a loadout, this action was invoked via the \"+ Loadout\" button\n          // in item actions, so pick the best store to back this loadout with\n          const owner = pickBackingStore(stores, item.owner, item.classType);\n\n          if (!owner) {\n            showNotification({\n              type: 'warning',\n              title: t('Loadouts.ClassTypeMissing', { className: item.classTypeNameLocalized }),\n            });\n            return;\n          }\n\n          const classType =\n            item.classType === DestinyClass.Unknown ? owner.classType : item.classType;\n          const draftLoadout = newLoadout('', [], classType);\n          draftLoadout.items.push(convertToLoadoutItem(item, true));\n          setInitialLoadout({\n            loadout: draftLoadout,\n            storeId: owner.id,\n            showClass: true,\n            fromExternal: true,\n          });\n        }\n      },\n      [hasInitialLoadout, stores],\n    ),\n  );\n\n  // Load in a full loadout specified in the URL\n  useEffect(() => {\n    if (!stores.length || !defs?.isDestiny2) {\n      return;\n    }\n    try {\n      const parsedLoadout = decodeUrlLoadout(queryString);\n      if (parsedLoadout) {\n        const storeId = pickBackingStore(stores, undefined, parsedLoadout.classType)?.id;\n\n        if (!storeId) {\n          warnMissingClass(parsedLoadout.classType, defs);\n          return;\n        }\n\n        setInitialLoadout({\n          loadout: parsedLoadout,\n          storeId,\n          showClass: false,\n          fromExternal: true,\n        });\n        // Clear the loadout from params if the URL contained one...\n        navigate(pathname, { replace: true });\n      }\n    } catch (e) {\n      showNotification({\n        type: 'error',\n        title: t('Loadouts.BadLoadoutShare'),\n        body: t('Loadouts.BadLoadoutShareBody', { error: errorMessage(e) }),\n      });\n      // ... or if it contained errors\n      navigate(pathname, { replace: true });\n    }\n  }, [defs, queryString, navigate, pathname, stores]);\n\n  // Close the loadout on navigation\n  // TODO: prompt for saving?\n  useEffect(() => {\n    // Don't close if moving to the inventory or loadouts screen\n    if (!pathname.endsWith('inventory') && !pathname.endsWith('loadouts')) {\n      handleDrawerClose();\n    }\n  }, [handleDrawerClose, pathname]);\n\n  if (initialLoadout) {\n    return (\n      <Suspense fallback={null}>\n        {account.destinyVersion === 2 ? (\n          <LoadoutDrawer\n            initialLoadout={initialLoadout.loadout}\n            storeId={initialLoadout.storeId}\n            onClose={handleDrawerClose}\n            fromExternal={initialLoadout.fromExternal}\n          />\n        ) : (\n          <D1LoadoutDrawer\n            initialLoadout={initialLoadout.loadout}\n            storeId={initialLoadout.storeId}\n            showClass={initialLoadout.showClass}\n            onClose={handleDrawerClose}\n          />\n        )}\n      </Suspense>\n    );\n  }\n  return null;\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\LoadoutDrawerDropTarget.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\LoadoutDrawerDropTarget.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\LoadoutDrawerFooter.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\LoadoutDrawerFooter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\LoadoutDrawerHeader.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\LoadoutDrawerHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\auto-loadouts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\loadout-apply-state.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\loadout-apply.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\loadout-drawer-reducer.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\loadout-drawer-reducer.ts","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has an unnecessary dependency: 'defs'. Either exclude it or remove the dependency array. Outer scope values like 'defs' aren't valid dependencies because mutating them doesn't re-render the component.","line":80,"column":71,"nodeType":"ArrayExpression","endLine":80,"endColumn":81,"suggestions":[{"desc":"Update the dependencies array to be: [fn]","fix":{"range":[3321,3331],"text":"[fn]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has unnecessary dependencies: 'defs' and 'store'. Either exclude them or remove the dependency array. Outer scope values like 'defs' aren't valid dependencies because mutating them doesn't re-render the component.","line":91,"column":78,"nodeType":"ArrayExpression","endLine":91,"endColumn":95,"suggestions":[{"desc":"Update the dependencies array to be: [fn]","fix":{"range":[3776,3793],"text":"[fn]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\loadout-events.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\loadout-item-conversion.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\loadout-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout-drawer\\postmaster.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\LoadoutView.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\LoadoutView.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\Loadouts.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\Loadouts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\LoadoutsRow.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useStreamDeckSelection\" is called conditionally. React Hooks must be called in the exact same order in every component render.","line":34,"column":7,"nodeType":"Identifier","endLine":34,"endColumn":29,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ModPicker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\SubclassPlugDrawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\armor-upgrade-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\fashion\\FashionDrawer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\fashion\\FashionDrawer.tsx","messages":[{"ruleId":"@eslint-react/no-unstable-default-props","severity":1,"message":"A/an 'array expression' as default prop. This could lead to potential infinite render loop in React. Use a variable instead of 'array expression'.","line":412,"column":10,"nodeType":"ArrayExpression","messageId":"noUnstableDefaultProps","endLine":412,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { LoadoutParameters } from '@destinyitemmanager/dim-api-types';\nimport ClosableContainer from 'app/d2l-ui/ClosableContainer';\nimport { PressTip } from 'app/d2l-ui/PressTip';\nimport Sheet from 'app/d2l-ui/Sheet';\nimport { D2ManifestDefinitions } from 'app/destiny2/d2-definitions';\nimport { t } from 'app/i18next-t';\nimport ConnectedInventoryItem from 'app/inventory/ConnectedInventoryItem';\nimport { DefItemIcon } from 'app/inventory/ItemIcon';\nimport { DimItem, DimSocket, PluggableInventoryItemDefinition } from 'app/inventory/item-types';\nimport { allItemsSelector, unlockedPlugSetItemsSelector } from 'app/inventory/selectors';\nimport SocketDetails from 'app/item-popup/SocketDetails';\nimport { ArmorBucketHashes } from 'app/loadout-builder/types';\nimport { Loadout, ResolvedLoadoutItem } from 'app/loadout/loadout-types';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { DEFAULT_ORNAMENTS, DEFAULT_SHADER } from 'app/search/d2-known-values';\nimport { AppIcon, clearIcon, rightArrowIcon } from 'app/shell/icons';\nimport { useIsPhonePortrait } from 'app/shell/selectors';\nimport { filterMap, isEmpty } from 'app/utils/collections';\nimport { getSocketsByCategoryHash, plugFitsIntoSocket } from 'app/utils/socket-utils';\nimport { HashLookup } from 'app/utils/util-types';\nimport {\n  DestinyCollectibleDefinition,\n  DestinyInventoryItemDefinition,\n} from 'bungie-api-ts/destiny2';\nimport clsx from 'clsx';\nimport { PlugCategoryHashes, SocketCategoryHashes } from 'data/d2/generated-enums';\nimport { keyBy, maxBy } from 'es-toolkit';\nimport { produce } from 'immer';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { BucketPlaceholder } from '../loadout-ui/BucketPlaceholder';\nimport PlugDef from '../loadout-ui/PlugDef';\nimport styles from './FashionDrawer.m.scss';\n\ninterface PickPlugState {\n  item: DimItem;\n  socket: DimSocket;\n}\n\n/** An editor for \"Fashion\" (shaders and ornaments) in a loadout */\nexport default function FashionDrawer({\n  loadout,\n  storeId,\n  items,\n  onModsByBucketUpdated,\n  onClose,\n}: {\n  loadout: Loadout;\n  storeId?: string;\n  items: ResolvedLoadoutItem[];\n  onModsByBucketUpdated: (modsByBucket: LoadoutParameters['modsByBucket']) => void;\n  onClose: () => void;\n}) {\n  const defs = useD2Definitions()!;\n  const unlockedPlugs = useSelector(unlockedPlugSetItemsSelector(storeId));\n  const isPhonePortrait = useIsPhonePortrait();\n  const [pickPlug, setPickPlug] = useState<PickPlugState>();\n  const allItems = useSelector(allItemsSelector);\n  const armor = items.filter(\n    (li) => li.loadoutItem.equip && ArmorBucketHashes.includes(li.item.bucket.hash),\n  );\n\n  const classType = loadout.classType;\n\n  const armorItemsByBucketHash: HashLookup<ResolvedLoadoutItem> = keyBy(\n    armor,\n    (li) => li.item.bucket.hash,\n  );\n\n  // The items we'll use to determine what sockets are available on each item. Either the equipped item from\n  // the loadout, or a suitable \"example\" item from inventory.\n  const exampleItemsByBucketHash = Object.fromEntries(\n    ArmorBucketHashes.map((bucketHash) => {\n      const looksFashionable = (i: DimItem) =>\n        i.bucket.hash === bucketHash && i.power && i.energy && i.classType === classType;\n      const getFashionSockets = (i: DimItem) =>\n        getSocketsByCategoryHash(i.sockets, SocketCategoryHashes.ArmorCosmetics);\n\n      // TODO: is this really the best way to do this? we just default to the equipped item, but that may be an exotic\n      const exampleItem =\n        armorItemsByBucketHash[bucketHash]?.item ??\n        // Try to find a legendary example\n        allItems.find(\n          (i) => i.rarity === 'Legendary' && looksFashionable(i) && getFashionSockets(i).length > 1,\n        ) ??\n        // Fall back to any non-exotic example\n        allItems.find(\n          (i) => !i.isExotic && looksFashionable(i) && getFashionSockets(i).length > 1,\n        ) ??\n        // Finally, find something shaderable at least. This user must have only rud2lentary armor.\n        allItems.find(\n          (i) =>\n            !i.isExotic &&\n            i.bucket.hash === bucketHash &&\n            i.classType === classType &&\n            getFashionSockets(i).length,\n        );\n      return [bucketHash, exampleItem];\n    }),\n  );\n\n  const [modsByBucket, setModsByBucket] = useState(loadout.parameters?.modsByBucket ?? {});\n  const isShader = (h: number) =>\n    defs.InventoryItem.get(h)?.plug?.plugCategoryHash === PlugCategoryHashes.Shader;\n  const modHashes = Object.values(modsByBucket).flat();\n  const shaders = modHashes.filter(isShader);\n  const ornaments = modHashes.filter((h) => !isShader(h));\n\n  const header = (\n    <>\n      <h1>{t('FashionDrawer.Title')}</h1>\n    </>\n  );\n\n  const footer = ({ onClose }: { onClose: () => void }) => (\n    <>\n      <button\n        type=\"button\"\n        className=\"d2l-button\"\n        onClick={() => {\n          onModsByBucketUpdated(modsByBucket);\n          onClose();\n        }}\n      >\n        {t('FashionDrawer.Accept')}\n      </button>\n    </>\n  );\n\n  const handlePlugSelected = ({\n    item,\n    socket,\n    plugHash,\n  }: {\n    item: DimItem;\n    socket: DimSocket;\n    plugHash: number;\n  }) => {\n    setModsByBucket((modsByBucket) => {\n      // Clear out existing selections for this socket.\n      const existingMods = (modsByBucket[item.bucket.hash] ?? []).filter(\n        (mod) => !plugFitsIntoSocket(socket, mod),\n      );\n\n      return {\n        ...modsByBucket,\n        // Add in the new mod\n        [item.bucket.hash]: [...existingMods, plugHash],\n      };\n    });\n  };\n\n  const handleUseEquipped = () => {\n    const newModsByBucket = Object.fromEntries(\n      ArmorBucketHashes.map((bucketHash) => {\n        // Either the item that's in the loadout, or whatever's equipped\n        const item =\n          armorItemsByBucketHash[bucketHash]?.item ??\n          allItems.find(\n            (i) =>\n              i.bucket.hash === bucketHash &&\n              i.equipped &&\n              (storeId ? i.owner === storeId : i.classType === classType),\n          );\n        const cosmeticSockets = item?.sockets\n          ? getSocketsByCategoryHash(item.sockets, SocketCategoryHashes.ArmorCosmetics)\n          : [];\n        return [\n          bucketHash,\n          filterMap(cosmeticSockets, (s) => (s.actuallyPlugged || s.plugged)?.plugDef.hash),\n        ];\n      }),\n    );\n\n    setModsByBucket(newModsByBucket);\n  };\n\n  const handleSyncShader = () => {\n    const shaders = Object.values(modsByBucket).flat().filter(isShader);\n\n    const groupedShaders = Object.groupBy(shaders, (h) => h);\n    const mostCommonShaders = maxBy(\n      Object.values(groupedShaders),\n      (shaders) => shaders?.length || 0,\n    );\n    if (!mostCommonShaders) {\n      return;\n    }\n\n    setModsByBucket((modsByBucket) =>\n      Object.fromEntries(\n        ArmorBucketHashes.map((bucketHash) => [\n          bucketHash,\n          [...(modsByBucket[bucketHash] ?? []).filter((h) => !isShader(h)), mostCommonShaders[0]],\n        ]),\n      ),\n    );\n  };\n\n  const handleSyncOrnament = () => {\n    const isShader = (h: number) =>\n      defs.InventoryItem.get(h)?.plug?.plugCategoryHash === PlugCategoryHashes.Shader;\n    const ornaments = Object.values(modsByBucket)\n      .flat()\n      .filter((h) => !isShader(h));\n\n    // Make it easy to spread default ornament\n    if (ornaments.every((h) => DEFAULT_ORNAMENTS.includes(h))) {\n      setModsByBucket((modsByBucket) =>\n        Object.fromEntries(\n          ArmorBucketHashes.map((bucketHash) => [\n            bucketHash,\n            [...(modsByBucket[bucketHash] ?? []).filter((h) => isShader(h)), ornaments[0]],\n          ]),\n        ),\n      );\n      return;\n    }\n\n    const groupedOrnaments = Object.groupBy(ornaments, (h) => {\n      const collectibleHash =\n        defs.InventoryItem.get(h)?.collectibleHash ??\n        // if the item has no collectible hash, try to find an \"identical\" item with one\n        findOtherCopies(defs, h).find((i) => i.collectibleHash)?.collectibleHash;\n\n      return (collectibleHash && defs.Collectible.get(collectibleHash)?.parentNodeHashes[0]) ?? -1;\n    });\n    delete groupedOrnaments[-1];\n    const mostCommonOrnamentSet = maxBy(\n      Object.entries(groupedOrnaments),\n      ([_presentationHash, ornaments]) => ornaments?.length || 0,\n    );\n    if (!mostCommonOrnamentSet) {\n      return;\n    }\n\n    const mostCommon = parseInt(mostCommonOrnamentSet[0], 10);\n    const set = filterMap(\n      defs.PresentationNode.get(mostCommon).children.collectibles,\n      (c) =>\n        defs.Collectible.get(c.collectibleHash)?.itemHash ??\n        manuallyFindItemForCollectible(defs, c.collectibleHash)?.hash,\n    );\n\n    if (set.length !== 5) {\n      return;\n    }\n\n    setModsByBucket((modsByBucket) =>\n      Object.fromEntries(\n        ArmorBucketHashes.map((bucketHash, i) => {\n          let ornamentHash = set[i];\n\n          // if we picked a parent node that doesn't point to ornaments,\n          // try to find an \"identical\" item that *is* an unlocked plug\n          if (!unlockedPlugs.has(ornamentHash)) {\n            const ornamentVersion = findOtherCopies(defs, ornamentHash).find((i) =>\n              unlockedPlugs.has(i.hash),\n            );\n            ornamentHash = ornamentVersion?.hash ?? ornamentHash;\n          }\n\n          if (unlockedPlugs.has(ornamentHash)) {\n            const modsWithoutShaders = (modsByBucket[bucketHash] ?? []).filter((h) => isShader(h));\n            const mods = [...modsWithoutShaders, ornamentHash];\n            return [bucketHash, mods];\n          }\n\n          return [bucketHash, modsByBucket[bucketHash] ?? []];\n        }),\n      ),\n    );\n  };\n\n  const handleClearType = (shaders: boolean) => {\n    setModsByBucket(\n      produce((modsByBucket) => {\n        for (const bucket in modsByBucket) {\n          const mods = modsByBucket[bucket];\n          const modsWithoutShaders = mods.filter((h) => (shaders ? !isShader(h) : isShader(h)));\n          if (modsWithoutShaders.length === 0) {\n            delete modsByBucket[bucket];\n          } else {\n            modsByBucket[bucket] = modsWithoutShaders;\n          }\n        }\n      }),\n    );\n  };\n\n  const handleRemovePlug = (bucketHash: number, plugHash: number) => {\n    setModsByBucket((modsByBucket) => ({\n      ...modsByBucket,\n      [bucketHash]: modsByBucket[bucketHash].filter((m) => m !== plugHash),\n    }));\n  };\n\n  const leftButtons = (\n    <>\n      <div>\n        <button type=\"button\" className=\"d2l-button\" onClick={handleUseEquipped}>\n          {t('FashionDrawer.UseEquipped')}\n        </button>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          className=\"d2l-button\"\n          onClick={handleSyncShader}\n          disabled={shaders.length === 0}\n          title={t('FashionDrawer.SyncShadersTitle')}\n        >\n          {isPhonePortrait ? t('FashionDrawer.SyncShaders') : t('FashionDrawer.Sync')}{' '}\n          <AppIcon icon={rightArrowIcon} />\n        </button>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          className=\"d2l-button\"\n          onClick={handleSyncOrnament}\n          disabled={ornaments.length === 0}\n          title={t('FashionDrawer.SyncOrnamentsTitle')}\n        >\n          {isPhonePortrait ? t('FashionDrawer.SyncOrnaments') : t('FashionDrawer.Sync')}{' '}\n          <AppIcon icon={rightArrowIcon} />\n        </button>\n      </div>\n    </>\n  );\n\n  const rightButtons = (\n    <>\n      <div>\n        <button\n          type=\"button\"\n          className=\"d2l-button\"\n          onClick={() => setModsByBucket({})}\n          disabled={isEmpty(modsByBucket)}\n        >\n          {t('FashionDrawer.Reset')}\n        </button>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          className=\"d2l-button\"\n          onClick={() => handleClearType(true)}\n          disabled={shaders.length === 0}\n          title={t('FashionDrawer.ClearShadersTitle')}\n        >\n          <AppIcon icon={clearIcon} /> {isPhonePortrait && t('FashionDrawer.ClearShaders')}\n        </button>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          className=\"d2l-button\"\n          onClick={() => handleClearType(false)}\n          disabled={ornaments.length === 0}\n          title={t('FashionDrawer.ClearOrnamentsTitle')}\n        >\n          <AppIcon icon={clearIcon} /> {isPhonePortrait && t('FashionDrawer.ClearOrnaments')}\n        </button>\n      </div>\n    </>\n  );\n\n  return (\n    <Sheet onClose={onClose} header={header} footer={footer} sheetClassName={styles.sheet}>\n      <div className={styles.items}>\n        {!isPhonePortrait && <div className={styles.verticalButtons}>{leftButtons}</div>}\n        {ArmorBucketHashes.map((bucketHash) => (\n          <FashionItem\n            key={bucketHash}\n            bucketHash={bucketHash}\n            item={armorItemsByBucketHash[bucketHash]}\n            exampleItem={exampleItemsByBucketHash[bucketHash]}\n            mods={modsByBucket[bucketHash]}\n            storeId={storeId}\n            onPickPlug={setPickPlug}\n            onRemovePlug={handleRemovePlug}\n          />\n        ))}\n        {!isPhonePortrait && (\n          <div className={clsx(styles.verticalButtons, styles.right)}>{rightButtons}</div>\n        )}\n      </div>\n      {isPhonePortrait && (\n        <div className={styles.buttons}>\n          {leftButtons}\n          {rightButtons}\n        </div>\n      )}\n      {pickPlug && (\n        <SocketDetails\n          item={pickPlug.item}\n          allowInsertPlug={false}\n          socket={pickPlug.socket}\n          onClose={() => setPickPlug(undefined)}\n          onPlugSelected={handlePlugSelected}\n        />\n      )}\n    </Sheet>\n  );\n}\n\nfunction FashionItem({\n  item,\n  exampleItem,\n  bucketHash,\n  mods = [],\n  storeId,\n  onPickPlug,\n  onRemovePlug,\n}: {\n  item?: ResolvedLoadoutItem;\n  exampleItem?: DimItem;\n  bucketHash: number;\n  mods?: number[];\n  storeId?: string;\n  onPickPlug: (params: PickPlugState) => void;\n  onRemovePlug: (bucketHash: number, modHash: number) => void;\n}) {\n  const defs = useD2Definitions()!;\n  const isShader = (m: number) =>\n    defs.InventoryItem.get(m)?.plug?.plugCategoryHash === PlugCategoryHashes.Shader;\n  const shader = mods.find(isShader);\n  const ornament = mods.find((m) => !isShader(m));\n\n  const shaderItem = shader ? defs.InventoryItem.get(shader) : undefined;\n  const ornamentItem = ornament ? defs.InventoryItem.get(ornament) : undefined;\n\n  if (!exampleItem) {\n    return null;\n  }\n\n  // Divide valid sockets (with something plugged) into a shader socket and\n  // an ornament socket -- all items have two cosmetic sockets\n  // (really old Solstice armor has a third one for the glow at the end, and\n  // the exotic Loreley Splendor helm has a dummy socket with nothing plugged)\n  const isShaderSocket = (s: DimSocket) =>\n    defs.SocketType.get(s.socketDefinition.socketTypeHash)?.plugWhitelist.some(\n      (pw) => pw.categoryHash === PlugCategoryHashes.Shader,\n    );\n  const cosmeticSockets = getSocketsByCategoryHash(\n    exampleItem.sockets,\n    SocketCategoryHashes.ArmorCosmetics,\n  ).filter((s) => s.plugged);\n  const shaderSocket = cosmeticSockets.find(isShaderSocket);\n  const ornamentSocket = cosmeticSockets.find((s) => !isShaderSocket(s));\n\n  const defaultShader = defs.InventoryItem.get(DEFAULT_SHADER);\n  const defaultOrnament = defs.InventoryItem.get(DEFAULT_ORNAMENTS[2]);\n\n  return (\n    <div className={styles.item}>\n      {item ? (\n        <ConnectedInventoryItem item={exampleItem} />\n      ) : (\n        <BucketPlaceholder bucketHash={bucketHash} />\n      )}\n      <FashionSocket\n        bucketHash={bucketHash}\n        socket={shaderSocket}\n        plug={shaderItem}\n        exampleItem={exampleItem}\n        defaultPlug={defaultShader}\n        storeId={storeId}\n        onPickPlug={onPickPlug}\n        onRemovePlug={onRemovePlug}\n      />\n      <FashionSocket\n        bucketHash={bucketHash}\n        socket={ornamentSocket}\n        plug={ornamentItem}\n        exampleItem={exampleItem}\n        storeId={storeId}\n        defaultPlug={defaultOrnament}\n        onPickPlug={onPickPlug}\n        onRemovePlug={onRemovePlug}\n      />\n    </div>\n  );\n}\n\nfunction FashionSocket({\n  bucketHash,\n  socket,\n  plug,\n  exampleItem,\n  storeId,\n  defaultPlug,\n  onPickPlug,\n  onRemovePlug,\n}: {\n  bucketHash: number;\n  socket: DimSocket | undefined;\n  plug: DestinyInventoryItemDefinition | undefined;\n  exampleItem: DimItem;\n  storeId?: string;\n  defaultPlug: DestinyInventoryItemDefinition;\n  onPickPlug: (params: PickPlugState) => void;\n  onRemovePlug: (bucketHash: number, modHash: number) => void;\n}) {\n  const unlockedPlugSetItems = useSelector(unlockedPlugSetItemsSelector(storeId));\n  const handleOrnamentClick = socket && (() => onPickPlug({ item: exampleItem, socket }));\n\n  const unlockedPlugsWithoutTheDefault = new Set(\n    Array.from(unlockedPlugSetItems).filter((plugHash) => plugHash !== defaultPlug.hash),\n  );\n\n  const canSlotOrnament =\n    socket?.plugSet?.plugs.some((plug) => unlockedPlugsWithoutTheDefault.has(plug.plugDef.hash)) ||\n    socket?.reusablePlugItems?.some(\n      (plug) => plug.enabled && unlockedPlugsWithoutTheDefault.has(plug.plugItemHash),\n    );\n\n  return (\n    <ClosableContainer onClose={plug ? () => onRemovePlug(bucketHash, plug.hash) : undefined}>\n      {plug && canSlotOrnament ? (\n        <PlugDef\n          onClick={handleOrnamentClick}\n          plug={plug as PluggableInventoryItemDefinition}\n          forClassType={undefined}\n        />\n      ) : (\n        <PressTip\n          tooltip={\n            <div>\n              {canSlotOrnament\n                ? t('FashionDrawer.NoPreference')\n                : plug?.plug?.plugCategoryHash === PlugCategoryHashes.Shader\n                  ? t('FashionDrawer.CannotFitShader')\n                  : t('FashionDrawer.CannotFitOrnament')}\n            </div>\n          }\n        >\n          <div\n            role=\"button\"\n            tabIndex={0}\n            className={clsx('item', styles.missingItem, { [styles.noOrnament]: !canSlotOrnament })}\n            onClick={canSlotOrnament ? handleOrnamentClick : undefined}\n          >\n            <DefItemIcon itemDef={defaultPlug} />\n          </div>\n        </PressTip>\n      )}\n    </ClosableContainer>\n  );\n}\n\nfunction findOtherCopies(\n  defs: D2ManifestDefinitions,\n  item: DestinyInventoryItemDefinition | DimItem | number,\n) {\n  const itemDef = defs.InventoryItem.get(typeof item === 'number' ? item : item.hash);\n  const results: DestinyInventoryItemDefinition[] = [];\n  const invItemTable = defs.InventoryItem.getAll();\n  for (const h in invItemTable) {\n    const i = invItemTable[h];\n    if (\n      i.displayProperties.name === itemDef.displayProperties.name &&\n      i.displayProperties.icon === itemDef.displayProperties.icon\n    ) {\n      results.push(i);\n    }\n  }\n  return results;\n}\n\nfunction manuallyFindItemForCollectible(\n  defs: D2ManifestDefinitions,\n  collectible: DestinyCollectibleDefinition | number,\n) {\n  const collectibleHash = typeof collectible === 'number' ? collectible : collectible.hash;\n  const invItemTable = defs.InventoryItem.getAll();\n  for (const h in invItemTable) {\n    const i = invItemTable[h];\n    if (i.collectibleHash === collectibleHash) {\n      return i;\n    }\n  }\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\EditInGameLoadout.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\EditInGameLoadout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\EditInGameLoadoutIdentifiers.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\EditInGameLoadoutIdentifiers.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\InGameLoadoutDetailsSheet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\InGameLoadoutDetailsSheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\InGameLoadoutIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\InGameLoadoutIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\InGameLoadoutIdentifiersSelectButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\InGameLoadoutIdentifiersSelectButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\InGameLoadoutStrip.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\InGameLoadoutStrip.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useStreamDeckSelection\" is called conditionally. React Hooks must be called in the exact same order in every component render.","line":89,"column":7,"nodeType":"Identifier","endLine":89,"endColumn":29,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\RadioButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\RadioButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\SelectInGameLoadoutIdentifiers.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\SelectInGameLoadoutIdentifiers.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\ingame-loadout-apply.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\ingame-loadout-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\ingame\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\known-values.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-edit\\LoadoutEdit.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-edit\\LoadoutEdit.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-edit\\LoadoutEditBucket.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-edit\\LoadoutEditBucket.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-edit\\LoadoutEditSection.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-edit\\LoadoutEditSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-edit\\LoadoutEditSubclass.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-edit\\LoadoutEditSubclass.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-edit\\useEquipDropTargets.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-item-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-menu\\LoadoutPopup.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-menu\\LoadoutPopup.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-menu\\LoadoutPopupRandomize.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-menu\\LoadoutPopupRandomize.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-menu\\MaxlightButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-menu\\MaxlightButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-share\\LoadoutImportSheet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-share\\LoadoutImportSheet.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setState' of 'useState' directly in 'useEffect'.","line":30,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":30,"endColumn":21},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setState' of 'useState' directly in 'useEffect'.","line":35,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":35,"endColumn":44},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setState' of 'useState' directly in 'useEffect'.","line":38,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":38,"endColumn":25}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import Sheet from 'app/d2l-ui/Sheet';\nimport UserGuideLink from 'app/d2l-ui/UserGuideLink';\nimport { t } from 'app/i18next-t';\nimport { editLoadout } from 'app/loadout-drawer/loadout-events';\nimport { AppIcon, refreshIcon } from 'app/shell/icons';\nimport { useIsPhonePortrait } from 'app/shell/selectors';\nimport { isiOSBrowser } from 'app/utils/browsers';\nimport { errorMessage } from 'app/utils/errors';\nimport { useEffect, useState } from 'react';\nimport styles from './LoadoutImportSheet.m.scss';\nimport { decodeShareUrl, getDecodedLoadout } from './loadout-import';\n\nconst placeHolder = `https://d2l.gg/bwipb2a/, https://app.destinyitemmanager.com/loadouts?loadout=...`;\n\nexport default function LoadoutImportSheet({\n  currentStoreId,\n  onClose,\n}: {\n  currentStoreId: string;\n  onClose: () => void;\n}) {\n  const [shareUrl, setShareUrl] = useState<string>('');\n  const [state, setState] = useState<'ok' | 'fetching' | string>('ok');\n  const isPhonePortrait = useIsPhonePortrait();\n  // On iOS at least, focusing the keyboard pushes the content off the screen\n  const nativeAutoFocus = !isPhonePortrait && !isiOSBrowser();\n\n  useEffect(() => {\n    if (!shareUrl) {\n      setState('ok');\n      return;\n    }\n    const decodedUrl = decodeShareUrl(shareUrl);\n    if (!decodedUrl) {\n      setState(t('Loadouts.Import.BadURL'));\n      return;\n    }\n    setState('fetching');\n    let canceled = false;\n    (async () => {\n      try {\n        const loadout = await getDecodedLoadout(decodedUrl);\n        if (!canceled) {\n          setState('ok');\n          editLoadout(loadout, currentStoreId, { fromExternal: true });\n          onClose();\n        }\n      } catch (e) {\n        if (!canceled) {\n          setState(`${t('Loadouts.Import.Error')} ${errorMessage(e)}`);\n        }\n      }\n    })();\n    return () => {\n      canceled = true;\n    };\n  }, [currentStoreId, onClose, shareUrl]);\n\n  return (\n    <Sheet\n      onClose={onClose}\n      header={\n        <>\n          <h1>{t('Loadouts.ImportLoadout')}</h1>\n          <UserGuideLink topic=\"Share-Loadouts\" />\n        </>\n      }\n      sheetClassName={styles.sheet}\n    >\n      <div className={styles.body}>\n        <span>{t('Loadouts.Import.PasteHere')}</span>\n        <div className={styles.fields}>\n          <input\n            value={shareUrl}\n            onChange={(e) => setShareUrl(e.target.value)}\n            placeholder={placeHolder}\n            autoFocus={nativeAutoFocus}\n          />\n          {state !== 'ok' &&\n            (state === 'fetching' ? (\n              <span>\n                <AppIcon icon={refreshIcon} spinning={true} />\n              </span>\n            ) : state.includes('404') ? (\n              t('Loadouts.Import.Error404')\n            ) : (\n              state\n            ))}\n        </div>\n      </div>\n    </Sheet>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-share\\LoadoutShareSheet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-share\\LoadoutShareSheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-share\\SharedLoadoutRedirect.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-share\\loadout-import.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-share\\loadout-import.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-type-converters.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\BucketPlaceholder.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\BucketPlaceholder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\EmptySubclass.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\FashionMods.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\FashionMods.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\LoadoutItemCategorySection.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\LoadoutItemCategorySection.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":173,"column":18,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":173,"endColumn":23},{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":201,"column":20,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":201,"endColumn":25}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { t } from 'app/i18next-t';\nimport ConnectedInventoryItem from 'app/inventory/ConnectedInventoryItem';\nimport DraggableInventoryItem from 'app/inventory/DraggableInventoryItem';\nimport ItemPopupTrigger from 'app/inventory/ItemPopupTrigger';\nimport { D2BucketCategory } from 'app/inventory/inventory-buckets';\nimport { PluggableInventoryItemDefinition } from 'app/inventory/item-types';\nimport { bucketsSelector } from 'app/inventory/selectors';\nimport { DimStore } from 'app/inventory/store-types';\nimport { useAnalyzeLoadout } from 'app/loadout-analyzer/hooks';\nimport { ArmorBucketHashes, ResolvedStatConstraint } from 'app/loadout-builder/types';\nimport {\n  clearBucketCategory,\n  setLoadoutParameters,\n} from 'app/loadout-drawer/loadout-drawer-reducer';\nimport { Loadout, ResolvedLoadoutItem } from 'app/loadout/loadout-types';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { useIsPhonePortrait } from 'app/shell/selectors';\nimport { LoadoutCharacterStats } from 'app/store-stats/CharacterStats';\nimport { isEmpty } from 'app/utils/collections';\nimport { compareBy } from 'app/utils/comparators';\nimport { emptyArray } from 'app/utils/empty';\nimport { LookupTable } from 'app/utils/util-types';\nimport clsx from 'clsx';\nimport { partition } from 'es-toolkit';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport '../../inventory-page/StoreBucket.scss';\nimport { BucketPlaceholder } from './BucketPlaceholder';\nimport { FashionMods } from './FashionMods';\nimport styles from './LoadoutItemCategorySection.m.scss';\nimport LoadoutParametersDisplay from './LoadoutParametersDisplay';\nimport { OptimizerButton, armorItemsMissing } from './OptimizerButton';\n\nconst categoryStyles: LookupTable<D2BucketCategory, string> = {\n  Weapons: styles.categoryWeapons,\n  Armor: styles.categoryArmor,\n  General: styles.categoryGeneral,\n};\n\nexport default function LoadoutItemCategorySection({\n  category,\n  subclass,\n  store,\n  items,\n  allMods,\n  modsByBucket,\n  loadout,\n  hideOptimizeArmor,\n}: {\n  category: D2BucketCategory;\n  subclass?: ResolvedLoadoutItem;\n  store: DimStore;\n  items?: ResolvedLoadoutItem[];\n  allMods: PluggableInventoryItemDefinition[];\n  modsByBucket: {\n    [bucketHash: number]: number[];\n  };\n  loadout: Loadout;\n  hideOptimizeArmor?: boolean;\n}) {\n  const defs = useD2Definitions()!;\n  const buckets = useSelector(bucketsSelector)!;\n  const analysis = useAnalyzeLoadout(loadout, store, /* active */ !hideOptimizeArmor);\n  const itemsByBucket = Map.groupBy(items ?? [], (li) => li.item.bucket.hash);\n  const isPhonePortrait = useIsPhonePortrait();\n  const bucketOrder =\n    category === 'Weapons' || category === 'Armor'\n      ? buckets.byCategory[category]\n      : Array.from(itemsByBucket.keys(), (bucketHash) => buckets.byHash[bucketHash]).sort(\n          compareBy((bucket) =>\n            buckets.byCategory[category].findIndex((b) => b.hash === bucket.hash),\n          ),\n        );\n  const equippedItems =\n    items?.filter((li) => li.loadoutItem.equip && !li.missing).map((li) => li.item) ?? [];\n\n  const isArmor = category === 'Armor';\n  const hasFashion = isArmor && !isEmpty(modsByBucket);\n\n  const [optimizeLoadout, constraints]: [Loadout, ResolvedStatConstraint[] | undefined] =\n    useMemo(() => {\n      if (\n        analysis?.result.armorResults?.tag === 'done' &&\n        analysis.result.armorResults.betterStatsAvailable\n      ) {\n        return [\n          clearBucketCategory(\n            defs,\n            'Armor',\n          )(setLoadoutParameters(analysis.result.armorResults.loadoutParameters)(loadout)),\n          analysis.result.armorResults.strictUpgradeStatConstraints,\n        ];\n      } else {\n        return [loadout, undefined];\n      }\n    }, [defs, analysis?.result.armorResults, loadout]);\n\n  if (isPhonePortrait && !items && !hasFashion) {\n    return null;\n  }\n\n  return (\n    <div key={category} className={clsx(styles.itemCategory, categoryStyles[category])}>\n      {items || hasFashion ? (\n        <div className={styles.itemsInCategory}>\n          {bucketOrder.map((bucket) => (\n            <ItemBucket\n              key={bucket.hash}\n              storeId={store.id}\n              bucketHash={bucket.hash}\n              items={itemsByBucket.get(bucket.hash) ?? emptyArray()}\n              modsForBucket={modsByBucket[bucket.hash] ?? emptyArray()}\n            />\n          ))}\n        </div>\n      ) : (\n        <>\n          <div className={clsx(styles.placeholder, `category-${category}`)}>\n            {t(`Bucket.${category}`, { metadata: { keys: 'buckets' } })}\n          </div>\n        </>\n      )}\n      {items && isArmor && (\n        <>\n          {equippedItems.length === 5 && (\n            <div className=\"stat-bars\">\n              <LoadoutCharacterStats\n                loadout={loadout}\n                subclass={subclass}\n                allMods={allMods}\n                items={items}\n              />\n            </div>\n          )}\n          {loadout.parameters && <LoadoutParametersDisplay params={loadout.parameters} />}\n          {!hideOptimizeArmor && (\n            <OptimizerButton\n              loadout={optimizeLoadout}\n              storeId={store.id}\n              missingArmor={armorItemsMissing(items)}\n              strictUpgradeStatConstraints={constraints}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction ItemBucket({\n  bucketHash,\n  storeId,\n  items,\n  modsForBucket,\n}: {\n  bucketHash: number;\n  storeId?: string;\n  items: ResolvedLoadoutItem[];\n  modsForBucket: number[];\n}) {\n  const [equipped, unequipped] = partition(items, (li) => li.loadoutItem.equip);\n\n  const showFashion = ArmorBucketHashes.includes(bucketHash);\n\n  // TODO: should these be draggable? so you can drag them into other loadouts?\n\n  return (\n    <div className={styles.itemBucket}>\n      {[equipped, unequipped].map((items, index) =>\n        items.length > 0 ? (\n          <div\n            className={clsx(styles.items, index === 0 ? styles.equipped : styles.unequipped)}\n            key={index}\n          >\n            {items.map(({ item, loadoutItem, missing }) => (\n              <DraggableInventoryItem item={item} key={item.id}>\n                <ItemPopupTrigger\n                  item={item}\n                  extraData={{ socketOverrides: loadoutItem.socketOverrides }}\n                >\n                  {(ref, onClick) => (\n                    <div\n                      className={clsx({\n                        [styles.missingItem]: missing,\n                      })}\n                    >\n                      <ConnectedInventoryItem item={item} ref={ref} onClick={onClick} />\n                    </div>\n                  )}\n                </ItemPopupTrigger>\n              </DraggableInventoryItem>\n            ))}\n            {index === 0 && showFashion && (\n              <FashionMods modsForBucket={modsForBucket} storeId={storeId} />\n            )}\n          </div>\n        ) : (\n          index === 0 && (\n            <div\n              className={clsx(styles.items, index === 0 ? styles.equipped : styles.unequipped)}\n              key={index}\n            >\n              <BucketPlaceholder bucketHash={bucketHash} />\n              {/* TODO: show empty placeholder for bucket type? */}\n              {showFashion && <FashionMods modsForBucket={modsForBucket} storeId={storeId} />}\n            </div>\n          )\n        ),\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\LoadoutMods.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\LoadoutMods.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\LoadoutParametersDisplay.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\LoadoutParametersDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\LoadoutSubclassSection.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\LoadoutSubclassSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\OptimizerButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\PlugDef.tsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/no-noninteractive-tabindex","severity":2,"message":"`tabIndex` should only be declared on interactive elements.","line":35,"column":7,"nodeType":"JSXAttribute","endLine":35,"endColumn":41,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\Sockets.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\Sockets.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":118,"column":16,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":118,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { PressTip } from 'app/d2l-ui/PressTip';\nimport { useDynamicStringReplacer } from 'app/d2l-ui/destiny-symbols/RichDestinyText';\nimport { t } from 'app/i18next-t';\nimport { DimItem, PluggableInventoryItemDefinition } from 'app/inventory/item-types';\nimport { isPluggableItem } from 'app/inventory/store/sockets';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { modTypeTagByPlugCategoryHash } from 'app/search/specialty-modslots';\nimport { AppIcon, shoppingCart } from 'app/shell/icons';\nimport { isEventArmorRerollSocket } from 'app/utils/socket-utils';\nimport { DestinyInventoryItemDefinition } from 'bungie-api-ts/destiny2';\nimport clsx from 'clsx';\nimport { PlugCategoryHashes } from 'data/d2/generated-enums';\nimport { pickPlugPositions } from '../mod-assignment-utils';\nimport PlugDef from './PlugDef';\nimport styles from './Sockets.m.scss';\n\nconst undesirablePlugs = [\n  PlugCategoryHashes.ArmorSkinsEmpty,\n  PlugCategoryHashes.Shader,\n  PlugCategoryHashes.V460PlugsArmorMasterworksStatResistance1,\n  PlugCategoryHashes.V460PlugsArmorMasterworksStatResistance2,\n  PlugCategoryHashes.V460PlugsArmorMasterworksStatResistance3,\n  PlugCategoryHashes.V460PlugsArmorMasterworksStatResistance4,\n  PlugCategoryHashes.EnhancementsArtificeExotic, // the cost socket you pay for by\"plug\"ging it in-game, to do an artifice upgrade\n];\n\n/**\n * Show sockets (mod slots) for a loadout armor item with the specified locked mods slotted into it.\n */\nfunction Sockets({\n  item,\n  lockedMods,\n  size,\n  onSocketClick,\n  automaticallyPickedMods,\n}: {\n  item: DimItem;\n  lockedMods?: PluggableInventoryItemDefinition[];\n  automaticallyPickedMods?: number[];\n  size?: 'small';\n  onSocketClick?: (\n    plugDef: PluggableInventoryItemDefinition,\n    /** An allow-list of plug category hashes that can be inserted into this socket */\n    // TODO: why not just pass the socketType hash or socket definition?\n    plugCategoryHashWhitelist: number[],\n  ) => void;\n}) {\n  const defs = useD2Definitions()!;\n  if (!item.sockets) {\n    return null;\n  }\n\n  // A list of mods to show. If we aren't showing a plug for a socket we show the empty plug.\n  const modsAndWhitelist: {\n    plugDef: PluggableInventoryItemDefinition;\n    whitelist: number[];\n    automaticallyPicked: boolean;\n  }[] = [];\n  const modsToUse = lockedMods ? [...lockedMods] : [];\n\n  const assignments = pickPlugPositions(defs, item, modsToUse);\n  const autoMods = automaticallyPickedMods?.slice();\n\n  for (const socket of item.sockets?.allSockets || []) {\n    const socketType = defs.SocketType.get(socket.socketDefinition.socketTypeHash);\n    let toSave: DestinyInventoryItemDefinition | undefined = assignments.find(\n      (a) => a.socketIndex === socket.socketIndex,\n    )?.mod;\n\n    const modIdx = (toSave && autoMods?.findIndex((m) => m === toSave!.hash)) ?? -1;\n    const automaticallyPicked = modIdx !== -1;\n    if (automaticallyPicked) {\n      autoMods!.splice(modIdx, 1);\n    }\n\n    if (!toSave) {\n      const plugHash =\n        socket.plugged &&\n        (socket.emptyPlugItemHash ||\n          (socket.plugged.plugDef.plug.plugCategoryHash === PlugCategoryHashes.Intrinsics &&\n            socket.plugged.plugDef.hash));\n      if (plugHash) {\n        toSave = defs.InventoryItem.get(plugHash);\n      }\n    }\n\n    if (\n      toSave &&\n      isPluggableItem(toSave) &&\n      !undesirablePlugs.includes(toSave.plug.plugCategoryHash) &&\n      !isEventArmorRerollSocket(socket) &&\n      // account for plugs that look exotic-ish but are nothings\n      // but always include specialty mod slots, Vow mods don't have\n      // an itemTypeDisplayName https://github.com/Bungie-net/api/issues/1620\n      (toSave.itemTypeDisplayName ||\n        modTypeTagByPlugCategoryHash[toSave.plug.plugCategoryHash as PlugCategoryHashes]) &&\n      // either it's some other kind of mod-slot, give it a pass, or\n      (socket.plugged?.plugDef.plug.plugCategoryHash !== PlugCategoryHashes.EnhancementsArtifice ||\n        // if it IS an artifice slot, then we render it\n        // if it's already paid for (visibleInGame)\n        socket.visibleInGame ||\n        // or if LO has placed a mod in it anyway, due to an upgrades assumption\n        toSave.hash !== socket.emptyPlugItemHash)\n    ) {\n      modsAndWhitelist.push({\n        plugDef: toSave,\n        whitelist: socketType.plugWhitelist.map((plug) => plug.categoryHash),\n        automaticallyPicked,\n      });\n    }\n  }\n\n  return (\n    <div className={clsx(styles.lockedItems, { [styles.small]: size === 'small' })}>\n      {modsAndWhitelist.map(({ plugDef, whitelist, automaticallyPicked }, index) => (\n        <PlugDef\n          className={clsx({ [styles.automaticallyPicked]: automaticallyPicked })}\n          key={index}\n          plug={plugDef}\n          onClick={onSocketClick ? () => onSocketClick(plugDef, whitelist) : undefined}\n          automaticallyPicked={automaticallyPicked}\n          forClassType={item.classType}\n        />\n      ))}\n      {item.vendor && <VendorItemPlug item={item} />}\n    </div>\n  );\n}\n\nfunction VendorItemPlug({ item }: { item: DimItem }) {\n  const defs = useD2Definitions()!;\n  const replacer = useDynamicStringReplacer(item.owner);\n  const vendorDef = defs.Vendor.get(item.vendor!.vendorHash);\n  return (\n    <PressTip\n      elementType=\"span\"\n      tooltip={() => {\n        const vendorName = replacer(vendorDef?.displayProperties?.name) || '--';\n        return (\n          <>\n            {t('Compare.IsVendorItem', { vendorName })} {t('LoadoutBuilder.ExcludeVendors')}\n          </>\n        );\n      }}\n    >\n      <div className={clsx('item', styles.vendorItem)}>\n        <AppIcon icon={shoppingCart} />\n      </div>\n    </PressTip>\n  );\n}\n\nexport default Sockets;\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\menu-hooks.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadout-ui\\menu-hooks.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setSelectedFilters' of 'useState' directly in 'useEffect'.","line":72,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":72,"endColumn":37}],"suppressedMessages":[{"ruleId":"@eslint-react/hooks-extra/prefer-use-state-lazy-initialization","severity":1,"message":"To prevent re-computation, consider using lazy initial state for useState calls that involve function calls. Ex: 'useState(() => getValue())'.","line":62,"column":84,"nodeType":"CallExpression","messageId":"preferUseStateLazyInitialization","endLine":62,"endColumn":96,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@eslint-react/no-missing-key","severity":2,"message":"Use fragment component instead of '<>' because it does not support `key`.","line":199,"column":5,"nodeType":"JSXFragment","messageId":"unexpectedFragmentSyntax","endLine":202,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { LoadoutSort } from '@destinyitemmanager/dim-api-types';\nimport { bungieBackgroundStyleAdvanced } from 'app/d2l-ui/BungieImage';\nimport FilterPills, { Option } from 'app/d2l-ui/FilterPills';\nimport ColorDestinySymbols from 'app/d2l-ui/destiny-symbols/ColorDestinySymbols';\nimport { DimLanguage } from 'app/i18n';\nimport { t, tl } from 'app/i18next-t';\nimport { getHashtagsFromString, HashTagTracker } from 'app/inventory/note-hashtags';\nimport { DimStore } from 'app/inventory/store-types';\nimport { findingDisplays } from 'app/loadout-analyzer/finding-display';\nimport { useSummaryLoadoutsAnalysis } from 'app/loadout-analyzer/hooks';\nimport { LoadoutAnalysisSummary, LoadoutFinding } from 'app/loadout-analyzer/types';\nimport { isArmorModsOnly, isFashionOnly } from 'app/loadout-drawer/loadout-utils';\nimport { Loadout } from 'app/loadout/loadout-types';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { DEFAULT_ORNAMENTS } from 'app/search/d2-known-values';\nimport { ItemFilter } from 'app/search/filter-types';\nimport { faCheckCircle, refreshIcon } from 'app/shell/icons';\nimport AppIcon from 'app/shell/icons/AppIcon';\nimport { isEmpty } from 'app/utils/collections';\nimport { compareBy } from 'app/utils/comparators';\nimport { emptyArray } from 'app/utils/empty';\nimport { localizedSorter } from 'app/utils/intl';\nimport clsx from 'clsx';\nimport modificationsIcon from 'destiny-icons/general/modifications.svg';\nimport { intersection } from 'es-toolkit/compat';\nimport { useEffect, useMemo, useState } from 'react';\nimport styles from './menu-hooks.m.scss';\n\nconst loadoutSpecializations = [tl('Loadouts.FashionOnly'), tl('Loadouts.ModsOnly')] as const;\ntype LoadoutSpecialization = (typeof loadoutSpecializations)[number];\ntype FilterPillType =\n  | {\n      tag: 'hashtag';\n      hashtag: string;\n    }\n  | {\n      tag: 'loadout-type';\n      type: LoadoutSpecialization;\n    }\n  | { tag: 'finding'; finding: LoadoutFinding };\n\n/**\n * Set up the filter pills for loadouts - allowing for filtering by hashtag and some other special properties.\n * This returns a component ready to be used in the React tree as well as the list of filtered loadouts.\n */\nexport function useLoadoutFilterPills(\n  savedLoadouts: Loadout[],\n  store: DimStore,\n  {\n    includeWarningPills,\n    className,\n    darkBackground,\n    extra,\n  }: {\n    includeWarningPills?: boolean;\n    className?: string;\n    darkBackground?: boolean;\n    extra?: React.ReactNode;\n  } = {},\n): [filteredLoadouts: Loadout[], filterPillsElement: React.ReactNode, hasSelectedFilters: boolean] {\n  // eslint-disable-next-line @eslint-react/hooks-extra/prefer-use-state-lazy-initialization\n  const [selectedFilters, setSelectedFilters] = useState<Option<FilterPillType>[]>(emptyArray());\n  const defs = useD2Definitions();\n  const analysisSummary = useSummaryLoadoutsAnalysis(\n    savedLoadouts,\n    store,\n    Boolean(includeWarningPills),\n  );\n\n  // Reset filters on character change\n  useEffect(() => {\n    setSelectedFilters(emptyArray());\n  }, [store.id]);\n\n  const loadoutsByHashtag = useMemo(() => groupLoadoutsByHashtag(savedLoadouts), [savedLoadouts]);\n\n  const filterOptions = Object.entries(loadoutsByHashtag)\n    .map(\n      ([hashtag, loadouts]): Option<FilterPillType> => ({\n        key: hashtag,\n        value: { tag: 'hashtag', hashtag },\n        content: (\n          <>\n            <ColorDestinySymbols text={hashtag} />\n            {` (${loadouts.length})`}\n          </>\n        ),\n      }),\n    )\n    .sort(compareBy((o) => o.key));\n\n  const loadoutsByType = useMemo(() => {\n    const loadoutsByType: Record<LoadoutSpecialization, Loadout[]> | undefined = defs && {\n      'Loadouts.FashionOnly': savedLoadouts.filter((l) => isFashionOnly(defs, l)),\n      'Loadouts.ModsOnly': savedLoadouts.filter((l) => isArmorModsOnly(defs, l)),\n    };\n    return loadoutsByType;\n  }, [defs, savedLoadouts]);\n  if (loadoutsByType) {\n    for (const k of loadoutSpecializations) {\n      if (loadoutsByType[k].length) {\n        filterOptions.push({\n          key: k,\n          value: { tag: 'loadout-type', type: k },\n          content: (\n            <>\n              {k === 'Loadouts.ModsOnly' ? (\n                <ModificationsIcon className=\"\" />\n              ) : (\n                <FashionIcon className=\"\" />\n              )}\n              {t(k)}\n              {` (${loadoutsByType[k].length})`}\n            </>\n          ),\n        });\n      }\n    }\n  }\n\n  if (analysisSummary) {\n    for (const [finding_, affectedLoadouts] of Object.entries(analysisSummary.loadoutsByFindings)) {\n      if (affectedLoadouts.size > 0) {\n        const finding = parseInt(finding_, 10) as LoadoutFinding;\n        const display = findingDisplays[finding];\n        if (!display.icon) {\n          continue;\n        }\n        filterOptions.push({\n          key: `finding-${finding_}`,\n          value: { tag: 'finding', finding },\n          content: (\n            <>\n              <AppIcon icon={display.icon} />\n              {t(display.name)}\n              {` (${affectedLoadouts.size})`}\n            </>\n          ),\n        });\n      }\n    }\n  }\n\n  const filteredLoadouts = useMemo(\n    () =>\n      selectedFilters.length > 0\n        ? intersection(\n            ...selectedFilters.map((f) => {\n              switch (f.value.tag) {\n                case 'hashtag': {\n                  return loadoutsByHashtag[f.value.hashtag] ?? [];\n                }\n                case 'loadout-type': {\n                  return loadoutsByType?.[f.value.type] ?? [];\n                }\n                case 'finding': {\n                  const loadouts = analysisSummary?.loadoutsByFindings[f.value.finding];\n                  return loadouts?.size\n                    ? [...savedLoadouts].filter((loadout) => loadouts?.has(loadout.id))\n                    : savedLoadouts;\n                }\n              }\n            }),\n          )\n        : savedLoadouts,\n    [\n      selectedFilters,\n      savedLoadouts,\n      loadoutsByHashtag,\n      analysisSummary?.loadoutsByFindings,\n      loadoutsByType,\n    ],\n  );\n\n  const pills =\n    filterOptions.length > 0 ? (\n      <FilterPills\n        options={filterOptions}\n        selectedOptions={selectedFilters}\n        onOptionsSelected={setSelectedFilters}\n        className={className}\n        darkBackground={darkBackground}\n        extra={isEmpty(loadoutsByHashtag) ? extra : undefined}\n      />\n    ) : null;\n\n  const analysisProgress = (\n    <AnalysisProgress\n      active={includeWarningPills}\n      numLoadouts={savedLoadouts.length}\n      summary={analysisSummary}\n      className={className}\n    />\n  );\n\n  return [\n    filteredLoadouts,\n    // eslint-disable-next-line @eslint-react/no-missing-key\n    <>\n      {pills}\n      {analysisProgress}\n    </>,\n    selectedFilters.length > 0,\n  ];\n}\n\nfunction groupLoadoutsByHashtag(loadouts: Loadout[]): { [hashtag: string]: Loadout[] } {\n  const hashtagTracker = new HashTagTracker();\n  const loadoutsByLowerHashtag: { [lowerHashtag: string]: Loadout[] } = {};\n\n  // Collect all hashtags and group loadouts by lowercase hashtag\n  for (const loadout of loadouts) {\n    const hashtags = getHashtagsFromString(loadout.name, loadout.notes);\n    for (const hashtag of hashtags) {\n      hashtagTracker.addHashtag(hashtag);\n      const lower = hashtag.toLowerCase();\n      (loadoutsByLowerHashtag[lower] ??= []).push(loadout);\n    }\n  }\n\n  // Get canonical forms and re-key with cleaned hashtags\n  const result: { [hashtag: string]: Loadout[] } = {};\n\n  for (const [lowerHashtag, loadouts] of Object.entries(loadoutsByLowerHashtag)) {\n    const canonicalHashtag = hashtagTracker.canonicalForm(lowerHashtag);\n    const cleanedHashtag = canonicalHashtag.replace('#', '').replace(/_/g, ' ');\n    result[cleanedHashtag] = loadouts;\n  }\n\n  return result;\n}\n\nfunction AnalysisProgress({\n  active,\n  numLoadouts,\n  summary,\n  className,\n}: {\n  active: boolean | undefined;\n  numLoadouts: number;\n  summary: LoadoutAnalysisSummary | undefined;\n  className?: string;\n}) {\n  if (!active) {\n    return null;\n  }\n\n  const numAnalyzed = summary?.analyzedLoadouts ?? 0;\n  const busy = numAnalyzed < numLoadouts || summary?.outdated;\n  return (\n    <div className={clsx(className, styles.analyzingText)}>\n      {busy ? (\n        <>\n          <AppIcon icon={refreshIcon} spinning />\n          {t('LoadoutAnalysis.Analyzing', { numAnalyzed, numLoadouts })}\n        </>\n      ) : (\n        <>\n          <AppIcon icon={faCheckCircle} />\n          {t('LoadoutAnalysis.Analyzed', { numLoadouts })}\n        </>\n      )}\n    </div>\n  );\n}\n\n/**\n * Apply the given query to loadouts, and sort them according to preference.\n */\nexport function searchAndSortLoadoutsByQuery(\n  loadouts: Loadout[],\n  loadoutFilterFactory: (query: string) => ItemFilter<Loadout>,\n  query: string,\n  language: DimLanguage,\n  loadoutSort: LoadoutSort,\n) {\n  let filteredLoadouts: Loadout[];\n  if (query.length) {\n    const loadoutFilter = loadoutFilterFactory(query);\n    filteredLoadouts = loadouts.filter(loadoutFilter);\n  } else {\n    filteredLoadouts = [...loadouts];\n  }\n\n  return filteredLoadouts.sort(\n    loadoutSort === LoadoutSort.ByEditTime\n      ? compareBy((l) => -(l.lastUpdatedAt ?? 0))\n      : localizedSorter(language, (l) => l.name),\n  );\n}\n\nexport function FashionIcon({ className }: { className: string }) {\n  const defs = useD2Definitions();\n  return (\n    defs && (\n      <div\n        className={clsx(className, styles.fashionIcon)}\n        style={bungieBackgroundStyleAdvanced(\n          defs.InventoryItem.get(DEFAULT_ORNAMENTS[2])?.displayProperties.icon,\n          undefined,\n          2,\n        )}\n      />\n    )\n  );\n}\nexport function ModificationsIcon({ className }: { className: string }) {\n  return <img className={clsx(className, styles.modificationIcon)} src={modificationsIcon} />;\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\loadouts-selector.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\mod-assignment-drawer\\ModAssignmentDrawer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\mod-assignment-drawer\\ModAssignmentDrawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\mod-assignment-drawer\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\mod-assignment-utils.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\mod-assignment-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\mod-permutations.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\mod-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\mutually-exclusive-mods.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\Footer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\Footer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\PlugDrawer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\PlugSection.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\PlugSection.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\PlugStackableIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\PlugStackableIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\SelectablePlug.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\SelectablePlug.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\plug-drawer\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\spreadsheets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\loadout\\stats.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\login\\Login.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\login\\Login.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\manifest\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\manifest\\d1-manifest-service.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\manifest\\manifest-service-json.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an `any` value.","line":291,"column":7,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":291,"endColumn":84,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\manifest\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\manifest\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\material-counts\\MaterialCounts.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\material-counts\\MaterialCounts.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\material-counts\\MaterialCountsWrappers.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\material-counts\\MaterialCountsWrappers.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\notifications\\Notification.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\notifications\\Notification.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setSuccess' of 'useState' directly in 'useEffect'.","line":42,"column":40,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":42,"endColumn":56},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setError' of 'useState' directly in 'useEffect'.","line":42,"column":59,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":42,"endColumn":86}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { t } from 'app/i18next-t';\nimport { CanceledError } from 'app/utils/cancel';\nimport { convertToError } from 'app/utils/errors';\nimport clsx from 'clsx';\nimport { motion, MotionProps, Transition } from 'motion/react';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styles from './Notification.m.scss';\nimport NotificationButton from './NotificationButton';\nimport { NotificationError, NotificationType, Notify } from './notifications';\n\nconst typeStyles: { [type in NotificationType]: string } = {\n  success: styles.success,\n  error: styles.error,\n  progress: styles.progress,\n  warning: styles.warning,\n  info: styles.info,\n};\n\nconst showErrorDuration = 5000;\n\ninterface Props extends MotionProps {\n  notification: Notify;\n  onClose: (notification: Notify) => void;\n}\n\nexport default function Notification({ notification, onClose, ...animation }: Props) {\n  const [hovering, setHovering] = useState(false);\n  const [success, setSuccess] = useState<boolean | undefined>();\n  const [error, setError] = useState<NotificationError | undefined>();\n\n  const timer = useRef(0);\n\n  const setupTimer = useCallback(() => {\n    if (timer.current) {\n      window.clearTimeout(timer.current);\n      timer.current = 0;\n    }\n    if (!error && !success && notification.promise) {\n      notification.promise\n        .then(() => setSuccess(true))\n        .catch((e) =>\n          e instanceof CanceledError ? setSuccess(true) : setError(convertToError(e)),\n        );\n    } else if (notification.duration || error) {\n      timer.current = window.setTimeout(\n        () => {\n          if (!hovering) {\n            onClose(notification);\n          }\n        },\n        error ? Math.max(notification.duration, showErrorDuration) : notification.duration,\n      );\n    } else {\n      window.setTimeout(() => onClose(notification), 0);\n    }\n  }, [error, success, notification, hovering, onClose]);\n\n  const clearTimer = () => {\n    if (timer.current) {\n      window.clearTimeout(timer.current);\n      timer.current = 0;\n    }\n  };\n\n  useEffect(() => {\n    setupTimer();\n    return clearTimer;\n  }, [setupTimer]);\n\n  const onClick = (event: React.MouseEvent) => {\n    if (notification.onClick?.(event) !== false) {\n      onClose(notification);\n    }\n  };\n\n  const hover = () => {\n    clearTimer();\n    setHovering(true);\n  };\n\n  const stopHover = () => {\n    setHovering(false);\n    setupTimer();\n  };\n\n  const progressTarget =\n    hovering || Boolean(!error && !success && notification.promise) ? '0%' : '100%';\n\n  const transition: Transition = hovering\n    ? {\n        type: 'tween',\n        ease: 'easeOut',\n        duration: 0.3,\n      }\n    : {\n        type: 'tween',\n        ease: 'linear',\n        duration: (error ? showErrorDuration : notification.duration) / 1000 - 0.3,\n      };\n\n  // A NotificationError can override a lot of properties\n  const title = error?.title || notification.title;\n  const body = error?.body || error?.message || notification.body;\n  const icon = error?.icon || notification.icon;\n  const trailer = error?.trailer || notification.trailer;\n\n  return (\n    <motion.div\n      className={styles.notification}\n      role=\"alert\"\n      onClick={onClick}\n      {...animation}\n      onPointerEnter={hover}\n      onPointerLeave={stopHover}\n      onPointerDown={hover}\n    >\n      <div\n        className={clsx(\n          styles.inner,\n          error ? styles.error : success ? styles.success : typeStyles[notification.type],\n        )}\n      >\n        <div className={styles.contents}>\n          {Boolean(icon) && <div className={styles.icon}>{icon}</div>}\n          <div className={styles.details}>\n            <div className={styles.title}>{title}</div>\n            {Boolean(body) && <div>{body}</div>}\n            {!error && notification.onCancel && (\n              <NotificationButton onClick={notification.onCancel}>\n                {success || error ? t('Notification.OK') : t('Notification.Cancel')}\n              </NotificationButton>\n            )}\n          </div>\n          {Boolean(trailer) && <div className={styles.trailer}>{trailer}</div>}\n        </div>\n        {(success || error || !notification.promise) &&\n          typeof notification.duration === 'number' && (\n            <motion.div\n              transition={transition}\n              initial={{ width: '0%' }}\n              animate={{ width: progressTarget }}\n              className={styles.timer}\n            />\n          )}\n      </div>\n    </motion.div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\notifications\\NotificationButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\notifications\\NotificationButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\notifications\\NotificationsContainer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\notifications\\NotificationsContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\notifications\\notifications.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\Columns.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\Columns.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\CustomStatColumns.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\DropDown.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\DropDown.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\EnabledColumnsSelector.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\ItemActions.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\ItemActions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\ItemTable.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\ItemTable.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setMaxItems' of 'useState' directly in 'useEffect'.","line":92,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":92,"endColumn":34}],"suppressedMessages":[{"ruleId":"jsx-a11y/no-noninteractive-element-interactions","severity":2,"message":"Non-interactive elements should not be assigned mouse or keyboard event listeners.","line":629,"column":9,"nodeType":"JSXOpeningElement","endLine":636,"endColumn":10,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { destinyVersionSelector } from 'app/accounts/selectors';\nimport { languageSelector, settingSelector } from 'app/d2l-api/selectors';\nimport UserGuideLink from 'app/d2l-ui/UserGuideLink';\nimport useBulkNote from 'app/d2l-ui/useBulkNote';\nimport useConfirm from 'app/d2l-ui/useConfirm';\nimport { t, tl } from 'app/i18next-t';\nimport { bulkLockItems, bulkTagItems } from 'app/inventory/bulk-actions';\nimport { DimItem, DimStat } from 'app/inventory/item-types';\nimport {\n  allItemsSelector,\n  createItemContextSelector,\n  getNotesSelector,\n  getTagSelector,\n  newItemsSelector,\n  storesSelector,\n} from 'app/inventory/selectors';\nimport { downloadCsvFiles, importTagsNotesFromCsv } from 'app/inventory/spreadsheets';\nimport { DimStore } from 'app/inventory/store-types';\nimport {\n  applySocketOverrides,\n  useSocketOverridesForItems,\n} from 'app/inventory/store/override-sockets';\nimport { applyLoadout } from 'app/loadout-drawer/loadout-apply';\nimport { convertToLoadoutItem, newLoadout } from 'app/loadout-drawer/loadout-utils';\nimport { loadoutsByItemSelector } from 'app/loadout/selectors';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { showNotification } from 'app/notifications/notifications';\nimport { searchFilterSelector } from 'app/search/items/item-search-filter';\nimport { setSettingAction } from 'app/settings/actions';\nimport { toggleSearchQueryComponent } from 'app/shell/actions';\nimport { AppIcon, faCaretDown, faCaretUp, spreadsheetIcon, uploadIcon } from 'app/shell/icons';\nimport { loadingTracker } from 'app/shell/loading-tracker';\nimport { useThunkDispatch } from 'app/store/thunk-dispatch';\nimport { Comparator, chainComparator, compareBy, reverseComparator } from 'app/utils/comparators';\nimport { emptyArray } from 'app/utils/empty';\nimport { useSetCSSVarToHeight, useShiftHeld } from 'app/utils/hooks';\nimport { LookupTable } from 'app/utils/util-types';\nimport { hasWishListSelector, wishListFunctionSelector } from 'app/wishlists/selectors';\nimport { DestinyClass } from 'bungie-api-ts/destiny2';\nimport clsx from 'clsx';\nimport { ItemCategoryHashes } from 'data/d2/generated-enums';\nimport React, { ReactNode, memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport Dropzone, { DropzoneOptions } from 'react-dropzone';\nimport { useSelector } from 'react-redux';\nimport { buildStatInfo, getColumnSelectionId, getColumns } from './Columns';\nimport EnabledColumnsSelector from './EnabledColumnsSelector';\nimport ItemActions, { TagCommandInfo } from './ItemActions';\n\nimport { compareSelectedItems } from 'app/compare/actions';\n\nimport { useTableColumnSorts } from 'app/d2l-ui/table-columns';\nimport { compact, filterMap } from 'app/utils/collections';\nimport { errorMessage } from 'app/utils/errors';\n\nimport { DimLanguage } from 'app/i18n';\nimport { localizedSorter } from 'app/utils/intl';\n\nimport styles from './ItemTable.m.scss';\nimport { ItemCategoryTreeNode, armorTopLevelCatHashes } from './ItemTypeSelector';\nimport { ColumnDefinition, ColumnSort, Row, SortDirection, TableContext } from './table-types';\n\nconst categoryToClass: LookupTable<ItemCategoryHashes, DestinyClass> = {\n  [ItemCategoryHashes.Hunter]: DestinyClass.Hunter,\n  [ItemCategoryHashes.Titan]: DestinyClass.Titan,\n  [ItemCategoryHashes.Warlock]: DestinyClass.Warlock,\n};\n\nconst downloadButtonSettings = [\n  { categoryId: ['weapons'], csvType: 'weapon' as const, label: tl('Bucket.Weapons') },\n  {\n    categoryId: ['hunter', 'titan', 'warlock'],\n    csvType: 'armor' as const,\n    label: tl('Bucket.Armor'),\n  },\n  { categoryId: ['ghosts'], csvType: 'ghost' as const, label: tl('Bucket.Ghost') },\n];\n\nexport const MemoRow = memo(TableRow);\n\nconst EXPAND_INCREMENT = 20;\n\nexport default function ItemTable({ categories }: { categories: ItemCategoryTreeNode[] }) {\n  const [columnSorts, toggleColumnSort] = useTableColumnSorts([\n    { columnId: 'name', sort: SortDirection.ASC },\n  ]);\n  const [selectedItemIds, setSelectedItemIds] = useState<string[]>([]);\n  // Track the last selection for shift-selecting\n  const lastSelectedId = useRef<string | null>(null);\n  const [socketOverrides, onPlugClicked] = useSocketOverridesForItems();\n  const [maxItems, setMaxItems] = useState(EXPAND_INCREMENT);\n  useEffect(() => {\n    setMaxItems(EXPAND_INCREMENT);\n  }, [categories]);\n  const expandItems = useCallback(() => setMaxItems((m) => m + EXPAND_INCREMENT), []);\n\n  const allItems = useSelector(allItemsSelector);\n  const searchFilter = useSelector(searchFilterSelector);\n  const originalItems = useMemo(() => {\n    const terminal = Boolean(categories.at(-1)?.terminal);\n    if (!terminal) {\n      return emptyArray<DimItem>();\n    }\n    const categoryHashes = categories.map((s) => s.itemCategoryHash).filter((h) => h !== 0);\n    // a top level class-specific category implies armor\n    if (armorTopLevelCatHashes.some((h) => categoryHashes.includes(h))) {\n      categoryHashes.push(ItemCategoryHashes.Armor);\n    }\n    const items = allItems.filter(\n      (i) =>\n        i.comparable &&\n        categoryHashes.every((h) => i.itemCategoryHashes.includes(h)) &&\n        searchFilter(i),\n    );\n    return items;\n  }, [allItems, categories, searchFilter]);\n\n  const firstCategory = categories[1];\n  const isWeapon = Boolean(firstCategory?.itemCategoryHash === ItemCategoryHashes.Weapon);\n  const isGhost = Boolean(firstCategory?.itemCategoryHash === ItemCategoryHashes.Ghost);\n  const isArmor = !isWeapon && !isGhost;\n  const itemType = isWeapon ? 'weapon' : isArmor ? 'armor' : 'ghost';\n\n  const stores = useSelector(storesSelector);\n  const getTag = useSelector(getTagSelector);\n  const getNotes = useSelector(getNotesSelector);\n  const wishList = useSelector(wishListFunctionSelector);\n  const hasWishList = useSelector(hasWishListSelector);\n  const enabledColumns = useSelector(settingSelector(columnSetting(itemType)));\n  const itemCreationContext = useSelector(createItemContextSelector);\n  const loadoutsByItem = useSelector(loadoutsByItemSelector);\n  const newItems = useSelector(newItemsSelector);\n  const destinyVersion = useSelector(destinyVersionSelector);\n  const dispatch = useThunkDispatch();\n\n  const { customStats } = itemCreationContext;\n\n  const classCategoryHash = categories\n    .map((n) => n.itemCategoryHash)\n    .find((hash) => hash in categoryToClass);\n  const classIfAny: DestinyClass = classCategoryHash\n    ? (categoryToClass[classCategoryHash] ?? DestinyClass.Unknown)\n    : DestinyClass.Unknown;\n\n  // Calculate the true height of the table header, for sticky-ness\n  const tableRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (tableRef.current) {\n      let height = 0;\n      for (const node of Array.from(tableRef.current.children)) {\n        if (node.classList.contains(styles.header)) {\n          height = Math.max(node.clientHeight, height);\n        } else if (height > 0) {\n          break;\n        }\n      }\n\n      document.querySelector('html')!.style.setProperty('--table-header-height', `${height + 1}px`);\n    }\n  });\n\n  // Are we at a item category that can show items?\n  const terminal = Boolean(categories.at(-1)?.terminal);\n\n  const defs = useD2Definitions();\n  const items = useMemo(\n    () =>\n      defs\n        ? originalItems.map((item) =>\n            applySocketOverrides(itemCreationContext, item, socketOverrides[item.id]),\n          )\n        : originalItems,\n    [itemCreationContext, defs, originalItems, socketOverrides],\n  );\n\n  // Build a list of all the stats relevant to this set of items\n  const stats = useMemo(\n    () => (terminal ? buildStatInfo(items) : emptyArray<DimStat>()),\n    [terminal, items],\n  );\n\n  const columns: ColumnDefinition[] = useMemo(\n    () =>\n      getColumns(\n        'organizer',\n        itemType,\n        stats,\n        getTag,\n        getNotes,\n        wishList,\n        hasWishList,\n        customStats,\n        loadoutsByItem,\n        newItems,\n        destinyVersion,\n        onPlugClicked,\n      ),\n    [\n      wishList,\n      hasWishList,\n      stats,\n      itemType,\n      getTag,\n      getNotes,\n      customStats,\n      loadoutsByItem,\n      newItems,\n      destinyVersion,\n      onPlugClicked,\n    ],\n  );\n\n  // This needs work for sure\n  const filteredColumns = useMemo(\n    () =>\n      compact(\n        enabledColumns.flatMap((id) =>\n          columns.filter(\n            (column) =>\n              id === getColumnSelectionId(column) &&\n              (column.limitToClass === undefined || column.limitToClass === classIfAny),\n          ),\n        ),\n      ),\n    [columns, enabledColumns, classIfAny],\n  );\n\n  // process items into Rows\n  const [unsortedRows, tableContext] = useMemo(\n    () => buildRows(items, filteredColumns),\n    [filteredColumns, items],\n  );\n  const language = useSelector(languageSelector);\n  const rows = useMemo(\n    () => sortRows(unsortedRows, columnSorts, filteredColumns, language),\n    [unsortedRows, filteredColumns, columnSorts, language],\n  );\n\n  const shiftHeld = useShiftHeld();\n\n  const onChangeEnabledColumn = useCallback(\n    ({ checked, id }: { checked: boolean; id: string }) => {\n      dispatch(\n        setSettingAction(\n          columnSetting(itemType),\n          Array.from(\n            new Set(\n              filterMap(columns, (c) => {\n                const cId = getColumnSelectionId(c);\n                if (cId === id) {\n                  return checked ? cId : undefined;\n                } else {\n                  return enabledColumns.includes(cId) ? cId : undefined;\n                }\n              }),\n            ),\n          ),\n        ),\n      );\n    },\n    [dispatch, columns, enabledColumns, itemType],\n  );\n\n  const selectedItems = items.filter((i) => selectedItemIds.includes(i.id));\n\n  const onLock = loadingTracker.trackPromise(async (lock: boolean) => {\n    dispatch(bulkLockItems(selectedItems, lock));\n  });\n\n  const [bulkNoteDialog, bulkNote] = useBulkNote();\n  const onNote = () => bulkNote(selectedItems);\n\n  /**\n   * Handles Click Events for Table Rows\n   * When shift-clicking a value, if there's a filter function defined, narrow/un-narrow the search\n   * When ctrl-clicking toggles selected value\n   */\n  const onRowClick = useCallback(\n    (\n      row: Row,\n      column: ColumnDefinition,\n    ): React.MouseEventHandler<HTMLTableCellElement> | undefined =>\n      column.filter\n        ? (e) => {\n            if (e.shiftKey) {\n              const node = e.target as HTMLElement;\n              const filter = column.filter!(\n                node.dataset.filterValue ?? row.values[column.id],\n                row.item,\n              );\n              if (filter !== undefined) {\n                dispatch(toggleSearchQueryComponent(filter));\n              }\n            }\n\n            if (e.ctrlKey) {\n              setSelectedItemIds(\n                selectedItemIds.findIndex((selectedItemId) => selectedItemId === row.item.id) === -1\n                  ? [...selectedItemIds, row.item.id]\n                  : selectedItemIds.filter((id) => id !== row.item.id),\n              );\n            }\n          }\n        : undefined,\n    [dispatch, selectedItemIds],\n  );\n\n  const onMoveSelectedItems = useCallback(\n    (store: DimStore) => {\n      if (selectedItems.length) {\n        const loadout = newLoadout(\n          t('Organizer.BulkMoveLoadoutName'),\n          selectedItems.map((i) => convertToLoadoutItem(i, false)),\n        );\n\n        dispatch(applyLoadout(store, loadout, { allowUndo: true }));\n      }\n    },\n    [dispatch, selectedItems],\n  );\n\n  const onTagSelectedItems = useCallback(\n    (tagInfo: TagCommandInfo) => {\n      if (tagInfo.type && selectedItemIds.length) {\n        const selectedItems = items.filter((i) => selectedItemIds.includes(i.id));\n        dispatch(bulkTagItems(selectedItems, tagInfo.type, true));\n      }\n    },\n    [dispatch, items, selectedItemIds],\n  );\n\n  const onCompareSelectedItems = useCallback(() => {\n    if (selectedItemIds.length) {\n      const selectedItems = items.filter((i) => selectedItemIds.includes(i.id));\n      dispatch(compareSelectedItems(selectedItems));\n    }\n  }, [dispatch, items, selectedItemIds]);\n\n  const gridSpec = `min-content ${filteredColumns\n    .map((c) => c.gridWidth ?? 'min-content')\n    .join(' ')}`;\n\n  /**\n   * Select all items, or if any are selected, clear the selection.\n   */\n  const selectAllItems: React.ChangeEventHandler<HTMLInputElement> = () => {\n    if (selectedItems.length === 0) {\n      setSelectedItemIds(rows.map((r) => r.item.id));\n    } else {\n      setSelectedItemIds([]);\n    }\n  };\n\n  /**\n   * Select and unselect items. Supports shift-held range selection.\n   */\n  const selectItem = (e: React.ChangeEvent<HTMLInputElement>, item: DimItem) => {\n    const checked = e.target.checked;\n    let changingIds = [item.id];\n    if (shiftHeld && lastSelectedId.current) {\n      let startIndex = rows.findIndex((r) => r.item.id === lastSelectedId.current);\n      let endIndex = rows.findIndex((r) => r.item === item);\n      if (startIndex > endIndex) {\n        const tmp = startIndex;\n        startIndex = endIndex;\n        endIndex = tmp;\n      }\n      changingIds = rows.slice(startIndex, endIndex + 1).map((r) => r.item.id);\n    }\n\n    if (checked) {\n      setSelectedItemIds((selected) => [...new Set([...selected, ...changingIds])]);\n    } else {\n      setSelectedItemIds((selected) => selected.filter((i) => !changingIds.includes(i)));\n    }\n\n    lastSelectedId.current = item.id;\n  };\n\n  let downloadAction: ReactNode | null = null;\n  const downloadButtonSetting = downloadButtonSettings.find((setting) =>\n    setting.categoryId.includes(categories[1]?.id),\n  );\n  if (downloadButtonSetting) {\n    const downloadHandler = (e: React.MouseEvent) => {\n      e.preventDefault();\n      dispatch(downloadCsvFiles(downloadButtonSetting.csvType));\n      return false;\n    };\n\n    downloadAction = (\n      <button\n        type=\"button\"\n        className={clsx(styles.importButton, 'd2l-button')}\n        onClick={downloadHandler}\n      >\n        <AppIcon icon={spreadsheetIcon} /> <span>{t(downloadButtonSetting.label)}.csv</span>\n      </button>\n    );\n  }\n\n  const [confirmDialog, confirm] = useConfirm();\n  const importCsv: DropzoneOptions['onDrop'] = async (acceptedFiles) => {\n    if (acceptedFiles.length < 1) {\n      showNotification({ type: 'error', title: t('Csv.ImportWrongFileType') });\n      return;\n    }\n\n    if (!(await confirm(t('Csv.ImportConfirm')))) {\n      return;\n    }\n    try {\n      const result = await dispatch(importTagsNotesFromCsv(acceptedFiles));\n      showNotification({ type: 'success', title: t('Csv.ImportSuccess', { count: result }) });\n    } catch (e) {\n      showNotification({ type: 'error', title: t('Csv.ImportFailed', { error: errorMessage(e) }) });\n    }\n  };\n\n  const toolbarRef = useRef(null);\n  useSetCSSVarToHeight(toolbarRef, '--item-table-toolbar-height');\n\n  return (\n    <>\n      <div\n        className={clsx(styles.table, shiftHeld && styles.shiftHeld)}\n        style={{ gridTemplateColumns: gridSpec }}\n        role=\"table\"\n        ref={tableRef}\n      >\n        {confirmDialog}\n        {bulkNoteDialog}\n        <div className={styles.toolbar} ref={toolbarRef}>\n          <ItemActions\n            itemsAreSelected={Boolean(selectedItems.length)}\n            onLock={onLock}\n            onNote={onNote}\n            stores={stores}\n            onTagSelectedItems={onTagSelectedItems}\n            onMoveSelectedItems={onMoveSelectedItems}\n            onCompareSelectedItems={onCompareSelectedItems}\n          />\n          <UserGuideLink topic=\"Organizer\" />\n          <Dropzone onDrop={importCsv} accept={{ 'text/csv': ['.csv'] }} useFsAccessApi={false}>\n            {({ getRootProps, getInputProps }) => (\n              <div {...getRootProps()} className={styles.importButton}>\n                <input {...getInputProps()} />\n                <div className=\"d2l-button\">\n                  <AppIcon icon={uploadIcon} /> {t('Settings.CsvImport')}\n                </div>\n              </div>\n            )}\n          </Dropzone>\n          {downloadAction}\n          <EnabledColumnsSelector\n            columns={columns}\n            enabledColumns={enabledColumns}\n            onChangeEnabledColumn={onChangeEnabledColumn}\n            forClass={classIfAny}\n          />\n        </div>\n        <div className={styles.headerRow} role=\"row\">\n          <div\n            className={clsx(styles.selection, styles.header)}\n            role=\"columnheader\"\n            aria-sort=\"none\"\n          >\n            <div>\n              <input\n                name=\"selectAll\"\n                title={t('Organizer.SelectAll')}\n                type=\"checkbox\"\n                checked={selectedItems.length === rows.length}\n                ref={(el) => {\n                  el &&\n                    (el.indeterminate =\n                      selectedItems.length !== rows.length && selectedItems.length > 0);\n                }}\n                onChange={selectAllItems}\n              />\n            </div>\n          </div>\n          {filteredColumns.map((column) => {\n            const columnSort = column.noSort\n              ? undefined\n              : columnSorts.find((c) => c.columnId === column.id);\n            return (\n              <div\n                key={column.id}\n                className={clsx(column.headerClassName, styles.header)}\n                role=\"columnheader\"\n                aria-sort={\n                  columnSort === undefined\n                    ? 'none'\n                    : columnSort.sort === SortDirection.DESC\n                      ? 'descending'\n                      : 'ascending'\n                }\n              >\n                <div\n                  onClick={\n                    column.noSort\n                      ? undefined\n                      : toggleColumnSort(column.id, shiftHeld, column.defaultSort)\n                  }\n                >\n                  {column.header}\n                  {columnSort && (\n                    <AppIcon\n                      className={styles.sorter}\n                      icon={columnSort.sort === SortDirection.DESC ? faCaretDown : faCaretUp}\n                    />\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        {rows.length === 0 && <div className={styles.noItems}>{t('Organizer.NoItems')}</div>}\n        {rows.slice(0, maxItems).map((row) => (\n          <div key={row.item.id} className={styles.row} role=\"row\">\n            <div className={styles.selection} role=\"cell\">\n              <input\n                type=\"checkbox\"\n                title={t('Organizer.SelectItem', { name: row.item.name })}\n                checked={selectedItemIds.includes(row.item.id)}\n                onChange={(e) => selectItem(e, row.item)}\n              />\n            </div>\n            <MemoRow\n              row={row}\n              filteredColumns={filteredColumns}\n              onRowClick={onRowClick}\n              tableCtx={tableContext}\n            />\n          </div>\n        ))}\n      </div>\n      {rows.length > maxItems && <ItemListExpander numItems={maxItems} onExpand={expandItems} />}\n    </>\n  );\n}\n\n/**\n * Build a list of rows with materialized values.\n */\nexport function buildRows(items: DimItem[], filteredColumns: ColumnDefinition[]) {\n  const unsortedRows: Row[] = items.map((item) => ({\n    item,\n    values: filteredColumns.reduce<Row['values']>((memo, col) => {\n      memo[col.id] = col.value(item);\n      return memo;\n    }, {}),\n  }));\n\n  // Build a map of min/max values for each column\n  // TODO: Use these to color stats in the ItemTable view\n  const ctx: TableContext = { minMaxValues: {} };\n  for (const column of filteredColumns) {\n    if (column.cell) {\n      for (const row of unsortedRows) {\n        const value = row.values[column.id];\n        if (typeof value === 'number') {\n          const minMax = (ctx.minMaxValues[column.id] ??= { min: value, max: value });\n          minMax.min = Math.min(minMax.min, value);\n          minMax.max = Math.max(minMax.max, value);\n        }\n      }\n    }\n  }\n\n  return [unsortedRows, ctx] as const;\n}\n\n/**\n * Sort the rows based on the selected columns.\n */\nexport function sortRows(\n  unsortedRows: Row[],\n  columnSorts: ColumnSort[],\n  filteredColumns: ColumnDefinition[],\n  language: DimLanguage,\n  defaultComparator?: Comparator<Row>,\n) {\n  if (!columnSorts.length && defaultComparator) {\n    return unsortedRows.toSorted(defaultComparator);\n  }\n\n  const comparator = chainComparator<Row>(\n    ...columnSorts.map((sorter) => {\n      const column = filteredColumns.find((c) => c.id === sorter.columnId);\n      if (column) {\n        const sort = column.sort;\n        const compare: Comparator<Row> = sort\n          ? (row1, row2) => sort(row1.values[column.id], row2.values[column.id])\n          : unsortedRows.some((row) => typeof row.values[column.id] === 'string')\n            ? localizedSorter(language, (row) => (row.values[column.id] ?? '') as string)\n            : compareBy((row) => row.values[column.id] ?? 0);\n        // Always sort undefined values to the end\n        return chainComparator(\n          compareBy((row) => row.values[column.id] === undefined),\n          sorter.sort === SortDirection.ASC ? compare : reverseComparator(compare),\n        );\n      }\n      return compareBy(() => 0);\n    }),\n  );\n\n  return unsortedRows.toSorted(comparator);\n}\n\nfunction TableRow({\n  row,\n  filteredColumns,\n  onRowClick,\n  tableCtx,\n}: {\n  row: Row;\n  filteredColumns: ColumnDefinition[];\n  tableCtx: TableContext;\n  onRowClick: (\n    row: Row,\n    column: ColumnDefinition,\n  ) => ((event: React.MouseEvent<HTMLTableCellElement>) => void) | undefined;\n}) {\n  return (\n    <>\n      {filteredColumns.map((column) => (\n        // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n        <div\n          key={column.id}\n          onClick={onRowClick(row, column)}\n          className={clsx(column.className, {\n            [styles.hasFilter]: column.filter !== undefined,\n          })}\n          role=\"cell\"\n        >\n          {column.cell\n            ? column.cell(row.values[column.id], row.item, tableCtx.minMaxValues[column.id])\n            : row.values[column.id]}\n        </div>\n      ))}\n    </>\n  );\n}\n\nfunction columnSetting(itemType: 'weapon' | 'armor' | 'ghost') {\n  switch (itemType) {\n    case 'weapon':\n      return 'organizerColumnsWeapons';\n    case 'armor':\n      return 'organizerColumnsArmor';\n    case 'ghost':\n      return 'organizerColumnsGhost';\n  }\n}\n\nfunction ItemListExpander({ onExpand, numItems }: { onExpand: () => void; numItems: number }) {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const elem = ref.current;\n    if (!elem) {\n      return;\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        for (const entry of entries) {\n          if (entry.isIntersecting) {\n            onExpand();\n          }\n        }\n      },\n      {\n        root: null,\n        rootMargin: '16px',\n        threshold: 0,\n      },\n    );\n\n    observer.observe(elem);\n\n    return () => observer.unobserve(elem);\n  }, [\n    onExpand,\n    // This is a hack to fix the case where:\n    // 1. The expander is on screen when the component renders.\n    // 2. After adding more items, it's still on screen. Since the observer only\n    //    runs if the item is initially onscreen, or enters the screen, there\n    //    are no changes. So we'll just reconstruct the observer every time to\n    //    allow it to re-fire if it's still on the screen.\n    numItems,\n  ]);\n\n  return <div ref={ref} />;\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\ItemTypeSelector.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\ItemTypeSelector.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":360,"column":23,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":360,"endColumn":28}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { DestinyVersion } from '@destinyitemmanager/dim-api-types';\nimport BucketIcon from 'app/d2l-ui/svgs/BucketIcon';\nimport { useDefinitions } from 'app/manifest/selectors';\nimport { filteredItemsSelector } from 'app/search/items/item-search-filter';\nimport { count } from 'app/utils/collections';\nimport clsx from 'clsx';\nimport { ItemCategoryHashes } from 'data/d2/generated-enums';\nimport { useSelector } from 'react-redux';\nimport styles from './ItemTypeSelector.m.scss';\n\n/**\n * Each branch of the drilldown options is represented by a SelectionTreeNode\n * which tells which item category to filter with, as well as what sub-categories\n * can still be drilled down into.\n */\nexport interface ItemCategoryTreeNode {\n  id: string;\n  itemCategoryHash: ItemCategoryHashes | 0;\n  subCategories?: ItemCategoryTreeNode[];\n  /** A terminal node can have items displayed for it. It may still have other drilldowns available. */\n  terminal?: boolean;\n}\n\n// Each class has the same armor\nconst armorCategories = [\n  {\n    id: 'helmet',\n    itemCategoryHash: ItemCategoryHashes.Helmets,\n    terminal: true,\n  },\n  {\n    id: 'arms',\n    itemCategoryHash: ItemCategoryHashes.Arms,\n    terminal: true,\n  },\n  {\n    id: 'chest',\n    itemCategoryHash: ItemCategoryHashes.Chest,\n    terminal: true,\n  },\n  {\n    id: 'legs',\n    itemCategoryHash: ItemCategoryHashes.Legs,\n    terminal: true,\n  },\n  {\n    id: 'classItem',\n    itemCategoryHash: ItemCategoryHashes.ClassItems,\n    terminal: true,\n  },\n];\n\n// Each weapon type may be in several subcategories\nconst kinetic: ItemCategoryTreeNode = {\n  id: 'kinetic',\n  itemCategoryHash: ItemCategoryHashes.KineticWeapon,\n  terminal: true,\n};\nconst energy: ItemCategoryTreeNode = {\n  id: 'energy',\n  itemCategoryHash: ItemCategoryHashes.EnergyWeapon,\n  terminal: true,\n};\nconst power: ItemCategoryTreeNode = {\n  id: 'power',\n  itemCategoryHash: ItemCategoryHashes.PowerWeapon,\n  terminal: true,\n};\n\n/**\n * Generate a tree of all the drilldown options for item filtering. This tree is\n * used to generate the list of selected subcategories.\n */\nconst d2SelectionTree: ItemCategoryTreeNode = {\n  id: 'all',\n  itemCategoryHash: 0,\n  subCategories: [\n    {\n      id: 'weapons',\n      itemCategoryHash: ItemCategoryHashes.Weapon,\n      terminal: true,\n\n      subCategories: [\n        {\n          id: 'autorifle',\n          itemCategoryHash: ItemCategoryHashes.AutoRifle,\n          subCategories: [kinetic, energy],\n          terminal: true,\n        },\n        {\n          id: 'handcannon',\n          itemCategoryHash: ItemCategoryHashes.HandCannon,\n          subCategories: [kinetic, energy],\n          terminal: true,\n        },\n        {\n          id: 'pulserifle',\n          itemCategoryHash: ItemCategoryHashes.PulseRifle,\n          subCategories: [kinetic, energy],\n          terminal: true,\n        },\n        {\n          id: 'scoutrifle',\n          itemCategoryHash: ItemCategoryHashes.ScoutRifle,\n          subCategories: [kinetic, energy],\n          terminal: true,\n        },\n        {\n          id: 'sidearm',\n          itemCategoryHash: ItemCategoryHashes.Sidearm,\n          subCategories: [kinetic, energy],\n          terminal: true,\n        },\n        {\n          id: 'bow',\n          itemCategoryHash: ItemCategoryHashes.Bows,\n          subCategories: [kinetic, energy, power],\n          terminal: true,\n        },\n        {\n          id: 'submachine',\n          itemCategoryHash: ItemCategoryHashes.SubmachineGuns,\n          subCategories: [kinetic, energy],\n          terminal: true,\n        },\n        {\n          id: 'fusionrifle',\n          itemCategoryHash: ItemCategoryHashes.FusionRifle,\n          subCategories: [kinetic, energy, power],\n          terminal: true,\n        },\n        {\n          id: 'sniperrifle',\n          itemCategoryHash: ItemCategoryHashes.SniperRifle,\n          subCategories: [kinetic, energy, power],\n          terminal: true,\n        },\n        {\n          id: 'shotgun',\n          itemCategoryHash: ItemCategoryHashes.Shotgun,\n          subCategories: [kinetic, energy, power],\n          terminal: true,\n        },\n        {\n          id: 'specialgrenadelauncher',\n          itemCategoryHash: -ItemCategoryHashes.GrenadeLaunchers,\n          subCategories: [kinetic, energy],\n          terminal: true,\n        },\n        {\n          id: 'tracerifle',\n          itemCategoryHash: ItemCategoryHashes.TraceRifles,\n          subCategories: [kinetic, energy],\n          terminal: true,\n        },\n        {\n          id: 'glaive',\n          itemCategoryHash: ItemCategoryHashes.Glaives,\n          subCategories: [kinetic, energy, power],\n          terminal: true,\n        },\n        {\n          id: 'machinegun',\n          itemCategoryHash: ItemCategoryHashes.MachineGun,\n          terminal: true,\n        },\n        {\n          id: 'sword',\n          itemCategoryHash: ItemCategoryHashes.Sword,\n          terminal: true,\n        },\n        {\n          id: 'heavygrenadelauncher',\n          itemCategoryHash: ItemCategoryHashes.GrenadeLaunchers,\n          subCategories: [power],\n          terminal: true,\n        },\n        {\n          id: 'rocketlauncher',\n          itemCategoryHash: ItemCategoryHashes.RocketLauncher,\n          terminal: true,\n        },\n        {\n          id: 'linearfusionrifle',\n          itemCategoryHash: ItemCategoryHashes.LinearFusionRifles,\n          subCategories: [kinetic, energy, power],\n          terminal: true,\n        },\n      ],\n    },\n    {\n      id: 'hunter',\n      itemCategoryHash: ItemCategoryHashes.Hunter,\n      subCategories: armorCategories,\n      terminal: true,\n    },\n    {\n      id: 'titan',\n      itemCategoryHash: ItemCategoryHashes.Titan,\n      subCategories: armorCategories,\n      terminal: true,\n    },\n    {\n      id: 'warlock',\n      itemCategoryHash: ItemCategoryHashes.Warlock,\n      subCategories: armorCategories,\n      terminal: true,\n    },\n    {\n      id: 'ghosts',\n      itemCategoryHash: ItemCategoryHashes.Ghost,\n      terminal: true,\n    },\n  ],\n};\n\n// Each class has the same armor\nconst d1ArmorCategories = [\n  ...armorCategories,\n  {\n    id: 'artifacts',\n    itemCategoryHash: 38,\n    terminal: true,\n  },\n];\n\n/**\n * Generate a tree of all the drilldown options for item filtering. This tree is\n * used to generate the list of selected subcategories.\n */\nconst d1SelectionTree: ItemCategoryTreeNode = {\n  id: 'all',\n  itemCategoryHash: 0,\n  subCategories: [\n    {\n      id: 'weapons',\n      itemCategoryHash: ItemCategoryHashes.Weapon,\n\n      subCategories: [\n        {\n          id: 'autorifle',\n          itemCategoryHash: ItemCategoryHashes.AutoRifle,\n          terminal: true,\n        },\n        {\n          id: 'handcannon',\n          itemCategoryHash: ItemCategoryHashes.HandCannon,\n          terminal: true,\n        },\n        {\n          id: 'pulserifle',\n          itemCategoryHash: ItemCategoryHashes.PulseRifle,\n          terminal: true,\n        },\n        {\n          id: 'scoutrifle',\n          itemCategoryHash: ItemCategoryHashes.ScoutRifle,\n          terminal: true,\n        },\n        {\n          id: 'fusionrifle',\n          itemCategoryHash: ItemCategoryHashes.FusionRifle,\n          terminal: true,\n        },\n        {\n          id: 'sniperrifle',\n          itemCategoryHash: ItemCategoryHashes.SniperRifle,\n          terminal: true,\n        },\n        {\n          id: 'shotgun',\n          itemCategoryHash: ItemCategoryHashes.Shotgun,\n          terminal: true,\n        },\n        {\n          id: 'machinegun',\n          itemCategoryHash: ItemCategoryHashes.MachineGun,\n          terminal: true,\n        },\n        {\n          id: 'rocketlauncher',\n          itemCategoryHash: ItemCategoryHashes.RocketLauncher,\n          terminal: true,\n        },\n        {\n          id: 'sidearm',\n          itemCategoryHash: ItemCategoryHashes.Sidearm,\n          terminal: true,\n        },\n        {\n          id: 'sword',\n          itemCategoryHash: ItemCategoryHashes.Sword,\n          terminal: true,\n        },\n      ],\n    },\n    {\n      id: 'hunter',\n      itemCategoryHash: ItemCategoryHashes.Hunter,\n      subCategories: d1ArmorCategories,\n    },\n    {\n      id: 'titan',\n      itemCategoryHash: ItemCategoryHashes.Titan,\n      subCategories: d1ArmorCategories,\n    },\n    {\n      id: 'warlock',\n      itemCategoryHash: ItemCategoryHashes.Warlock,\n      subCategories: d1ArmorCategories,\n    },\n    {\n      id: 'ghosts',\n      itemCategoryHash: ItemCategoryHashes.Ghost,\n\n      terminal: true,\n    },\n  ],\n};\n\nexport function getSelectionTree(destinyVersion: DestinyVersion) {\n  return destinyVersion === 2 ? d2SelectionTree : d1SelectionTree;\n}\n\nexport const armorTopLevelCatHashes: ItemCategoryHashes[] = [\n  ItemCategoryHashes.Hunter,\n  ItemCategoryHashes.Titan,\n  ItemCategoryHashes.Warlock,\n];\n\n/**\n * This component offers a means for narrowing down your selection to a single item type\n * (hunter helmets, hand cannons, etc.) for the Organizer table.\n */\nexport default function ItemTypeSelector({\n  selectionTree,\n  selection,\n  onSelection,\n}: {\n  selectionTree: ItemCategoryTreeNode;\n  selection: ItemCategoryTreeNode[];\n  onSelection: (selection: ItemCategoryTreeNode[]) => void;\n}) {\n  const defs = useDefinitions()!;\n  const filteredItems = useSelector(filteredItemsSelector);\n  selection = selection.length ? selection : [selectionTree];\n\n  const handleSelection = (depth: number, subCategory: ItemCategoryTreeNode) =>\n    onSelection([...selection.slice(0, depth + 1), subCategory]);\n\n  return (\n    <div className={styles.selector}>\n      {selection.map((currentSelection, depth) => {\n        const upstreamCategories: number[] = [];\n        for (let i = 1; i < depth + 1; i++) {\n          selection[i].itemCategoryHash && upstreamCategories.push(selection[i].itemCategoryHash);\n        }\n        return (\n          currentSelection.subCategories && (\n            <div key={depth} className={styles.level}>\n              {currentSelection.subCategories?.map((subCategory) => {\n                const categoryHashList = [...upstreamCategories, subCategory.itemCategoryHash];\n\n                // a top level class-specific category implies armor\n                if (armorTopLevelCatHashes.some((h) => categoryHashList.includes(h))) {\n                  categoryHashList.push(ItemCategoryHashes.Armor);\n                }\n\n                const itemCategory = defs.ItemCategory.get(Math.abs(subCategory.itemCategoryHash));\n                return (\n                  <label\n                    key={subCategory.itemCategoryHash}\n                    className={clsx(styles.button, {\n                      [styles.checked]: selection[depth + 1] === subCategory,\n                    })}\n                  >\n                    <input\n                      type=\"radio\"\n                      name={subCategory.id}\n                      value={subCategory.id}\n                      checked={selection[depth + 1] === subCategory}\n                      readOnly={true}\n                      onClick={(_e) => handleSelection(depth, subCategory)}\n                    />\n                    {subCategory.itemCategoryHash !== 0 && (\n                      <BucketIcon itemCategoryHash={subCategory.itemCategoryHash} />\n                    )}\n                    {'displayProperties' in itemCategory\n                      ? itemCategory.displayProperties.name\n                      : itemCategory.title}{' '}\n                    <span className={styles.buttonItemCount}>\n                      (\n                      {count(\n                        filteredItems,\n                        (i) =>\n                          i.comparable &&\n                          categoryHashList.every((h) => i.itemCategoryHashes.includes(h)),\n                      )}\n                      )\n                    </span>\n                  </label>\n                );\n              })}\n            </div>\n          )\n        );\n      })}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\Organizer.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\Organizer.tsx","messages":[],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'dispatch', 'location', 'navigate', and 'params'. Either include them or remove the dependency array.","line":91,"column":6,"nodeType":"ArrayExpression","endLine":91,"endColumn":19,"suggestions":[{"desc":"Update the dependencies array to be: [dispatch, location, navigate, params, searchQuery]","fix":{"range":[3281,3294],"text":"[dispatch, location, navigate, params, searchQuery]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\organizer\\table-types.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/method-signature-style","severity":2,"message":"Shorthand method signature is forbidden. Use a function property instead.","line":46,"column":3,"nodeType":"TSMethodSignature","messageId":"errorMethod","endLine":46,"endColumn":27,"fix":{"range":[1788,1812],"text":"value: (item: DimItem) => V;"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/method-signature-style","severity":2,"message":"Shorthand method signature is forbidden. Use a function property instead.","line":48,"column":3,"nodeType":"TSMethodSignature","messageId":"errorMethod","endLine":48,"endColumn":93,"fix":{"range":[1915,2005],"text":"cell?: (value: V, item: DimItem, context?: { max?: number; min?: number }) => React.ReactNode;"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/method-signature-style","severity":2,"message":"Shorthand method signature is forbidden. Use a function property instead.","line":50,"column":3,"nodeType":"TSMethodSignature","messageId":"errorMethod","endLine":50,"endColumn":56,"fix":{"range":[2089,2142],"text":"filter?: (value: V, item: DimItem) => string | undefined;"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/method-signature-style","severity":2,"message":"Shorthand method signature is forbidden. Use a function property instead.","line":52,"column":3,"nodeType":"TSMethodSignature","messageId":"errorMethod","endLine":52,"endColumn":64,"fix":{"range":[2209,2270],"text":"sort?: (this: void, firstValue: V, secondValue: V) => 0 | 1 | -1;"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/method-signature-style","severity":2,"message":"Shorthand method signature is forbidden. Use a function property instead.","line":78,"column":9,"nodeType":"TSMethodSignature","messageId":"errorMethod","endLine":78,"endColumn":100,"fix":{"range":[3231,3322],"text":"bivarianceHack: (value: V, item: DimItem, spreadsheetContext: SpreadsheetContext) => CSVColumn;"},"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\ActivityModifier.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\ActivityModifier.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\BountyGuide.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\BountyGuide.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Event.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Event.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\FactionIcon.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\FactionIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Milestones.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Milestones.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Objective.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Objective.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Pathfinder.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Pathfinder.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\PowerCaps.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Progress.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Progress.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Pursuit.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\PursuitGrid.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\PursuitGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\PursuitItem.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\PursuitItem.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Pursuits.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Raid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\RaidDisplay.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\RaidDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Raids.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Ranks.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\ReputationRank.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\ReputationRank.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":67,"column":39,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":67,"endColumn":40}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useDynamicStringReplacer } from 'app/d2l-ui/destiny-symbols/RichDestinyText';\nimport { t, tl } from 'app/i18next-t';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { unadvertisedResettableVendors } from 'app/search/d2-known-values';\nimport { sumBy } from 'app/utils/collections';\nimport { DestinyProgression } from 'bungie-api-ts/destiny2';\nimport clsx from 'clsx';\nimport BungieImage, { bungieNetPath } from '../d2l-ui/BungieImage';\nimport { ObjectiveCheckbox, ObjectiveRow } from './Objective';\nimport styles from './ReputationRank.m.scss';\n\n/**\n * displays a single reputation rank for the account\n */\nexport function ReputationRank({\n  progress,\n  streak,\n  isProgressRanks,\n}: {\n  progress: DestinyProgression;\n  streak?: DestinyProgression;\n  isProgressRanks?: boolean;\n}) {\n  const defs = useD2Definitions()!;\n  const replacer = useDynamicStringReplacer();\n  const progressionDef = defs.Progression.get(progress.progressionHash);\n\n  const step = progressionDef.steps[Math.min(progress.level, progressionDef.steps.length - 1)];\n\n  const canReset =\n    typeof progress.currentResetCount === 'number' ||\n    unadvertisedResettableVendors.includes(progress.progressionHash);\n  const resetLabel = canReset ? tl('Progress.PercentPrestige') : tl('Progress.PercentMax');\n\n  const rankTotal = sumBy(progressionDef.steps, (cur) => cur.progressTotal);\n  const rankPercent = Math.floor((progress.currentProgress / rankTotal) * 100);\n\n  const streakCheckboxes =\n    streak && Array<boolean>(5).fill(true).fill(false, streak.currentProgress);\n\n  // language-agnostic css class name to identify which rank type we are in\n  const factionClass = `faction-${progress.progressionHash}`;\n\n  return (\n    <div\n      className={clsx(factionClass, styles.activityRank, { [styles.gridLayout]: isProgressRanks })}\n      title={replacer(progressionDef.displayProperties.description)}\n    >\n      <ReputationRankIcon progress={progress} />\n      <div className={styles.factionInfo}>\n        <div className={styles.factionLevel}>\n          {t('Progress.Rank', {\n            name: progressionDef.displayProperties.name,\n            rank: progress.level + 1,\n          })}\n        </div>\n        <div className={styles.factionName}>{step.stepName}</div>\n        <div className={styles.factionLevel}>\n          {progressionDef.rankIcon && (\n            <BungieImage className={styles.rankIcon} src={progressionDef.rankIcon} />\n          )}\n          {progress.currentProgress} ({progress.progressToNextLevel} / {progress.nextLevelAt})\n        </div>\n        {streakCheckboxes && (\n          <ObjectiveRow className={styles.winStreak}>\n            {streakCheckboxes.map((c, i) => (\n              <ObjectiveCheckbox key={i} completed={c} />\n            ))}\n          </ObjectiveRow>\n        )}\n        <div className={clsx(styles.factionLevel, rankPercent === 100 && styles.max)}>\n          {t(resetLabel, {\n            pct: rankPercent,\n          })}\n        </div>\n        {Boolean(progress.currentResetCount) && (\n          <div className={styles.factionLevel}>\n            {t('Progress.Resets', { count: progress.currentResetCount })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ReputationRankIcon({ progress }: { progress: DestinyProgression }) {\n  const defs = useD2Definitions()!;\n\n  const progressionDef = defs.Progression.get(progress.progressionHash);\n\n  const step = progressionDef.steps[Math.min(progress.level, progressionDef.steps.length - 1)];\n\n  const canReset = progressionDef.steps.length === progress.levelCap;\n  const rankTotal = sumBy(progressionDef.steps, (step) => step.progressTotal);\n\n  const circumference = 2 * 22 * Math.PI;\n  const circumference2 = 2 * 25 * Math.PI;\n\n  const strokeColor = progressionDef.color\n    ? `rgb(${progressionDef.color.red}, ${progressionDef.color.green},${progressionDef.color.blue})`\n    : 'white';\n\n  return (\n    <div className={styles.crucibleRankIcon}>\n      <svg viewBox=\"0 0 54 54\">\n        <circle r=\"27\" cx=\"27\" cy=\"27\" fill=\"#555\" />\n        <circle r=\"21\" cx=\"27\" cy=\"27\" fill=\"#222\" />\n        {progress.progressToNextLevel > 0 && (\n          <circle\n            r=\"22.5\"\n            cx=\"-27\"\n            cy=\"27\"\n            transform=\"rotate(-90)\"\n            className={styles.crucibleRankProgress}\n            strokeWidth=\"3\"\n            strokeDasharray={`${\n              (circumference * progress.progressToNextLevel) / progress.nextLevelAt\n            } ${circumference}`}\n            stroke={strokeColor}\n          />\n        )}\n        {canReset && progress.currentProgress > 0 && (\n          <circle\n            r=\"25.5\"\n            cx=\"-27\"\n            cy=\"27\"\n            transform=\"rotate(-90)\"\n            className={styles.crucibleRankTotalProgress}\n            strokeWidth=\"3\"\n            strokeDasharray={`${\n              (circumference2 * progress.currentProgress) / rankTotal\n            } ${circumference2}`}\n          />\n        )}\n        <image xlinkHref={bungieNetPath(step.icon)} width=\"40\" height=\"40\" x=\"7\" y=\"7\" />\n      </svg>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Reward.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\Reward.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\SeasonalChallenges.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\SeasonalRank.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\SeasonalRank.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\TrackedTriumphs.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\TrackedTriumphs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\WellRestedPerkIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\engrams.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\milestone-items.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\powercaps.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\progress\\xp.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Collectible.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\CollectiblesGrid.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\CollectiblesGrid.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Craftable.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Metric.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Metric.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\MetricBanner.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\MetricBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Metrics.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Metrics.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\PresentationNode.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\PresentationNode.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\PresentationNodeLeaf.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\PresentationNodeRoot.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\PresentationNodeRoot.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\PresentationNodeSearchResults.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\PresentationNodeSearchResults.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Record.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Record.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Records.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\Records.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\catalysts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\collectible-matching.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\extra-collectibles.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\plugset-helpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\presentation-nodes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\universal-ornaments\\UniversalOrnaments.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\universal-ornaments\\UniversalOrnaments.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\records\\universal-ornaments\\universal-ornaments.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\register-service-worker.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\register-service-worker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\PerkRankIndicator.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\PerkRankIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\ReviewSummaryDisplay.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\ReviewSummaryDisplay.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\TopTraitCombos.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\TopTraitCombos.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\TraitComboIndicator.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\TraitComboIndicator.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\rollAppraiserService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\roll-appraiser\\useRollAppraiserData.ts","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setRankingData' of 'useState' directly in 'useEffect'.","line":41,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":41,"endColumn":27},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setRankingData' of 'useState' directly in 'useEffect'.","line":117,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":117,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { DimItem } from 'app/inventory/item-types';\nimport { RollAppraiserUtils, WeaponRankingData } from 'app/utils/rollAppraiserUtils';\nimport { getSocketsByIndexes, getWeaponSockets } from 'app/utils/socket-utils';\nimport { useEffect, useState } from 'react';\nimport { getRollAppraiserUtils, getRollAppraiserUtilsSync } from './rollAppraiserService';\n\n/**\n * Hook to get roll appraiser utils\n */\nexport function useRollAppraiserUtils() {\n  const [utils, setUtils] = useState<RollAppraiserUtils | null>(() => getRollAppraiserUtilsSync());\n  const [loading, setLoading] = useState(!utils);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    if (!utils) {\n      getRollAppraiserUtils()\n        .then((loadedUtils) => {\n          setUtils(loadedUtils);\n          setLoading(false);\n        })\n        .catch((err: any) => {\n          setError(err instanceof Error ? err : new Error(String(err)));\n          setLoading(false);\n        });\n    }\n  }, [utils]);\n\n  return { utils, loading, error };\n}\n\n/**\n * Hook to get weapon ranking data for a specific item\n */\nexport function useWeaponRankingData(item: DimItem | null): WeaponRankingData | null {\n  const { utils } = useRollAppraiserUtils();\n  const [rankingData, setRankingData] = useState<WeaponRankingData | null>(null);\n\n  useEffect(() => {\n    if (!utils || !item || item.destinyVersion !== 2 || !item.bucket.inWeapons) {\n      setRankingData(null);\n      return;\n    }\n\n    // Get perk hashes from the weapon's sockets\n    const perkHashes: number[] = [];\n    const traitPerkHashes: number[] = [];\n    let masterworkHash: number | undefined = undefined;\n\n    if (item.sockets) {\n      // Use getWeaponSockets to properly identify weapon perks\n      const weaponSockets = getWeaponSockets(item, { excludeEmptySockets: false });\n\n      if (weaponSockets?.perks) {\n        // Get all perk sockets from the perks category\n        const perkSockets = getSocketsByIndexes(item.sockets, weaponSockets.perks.socketIndexes);\n\n        // Filter to only plugged perks\n        const pluggedPerks = perkSockets.filter((s) => s.plugged && s.isPerk);\n\n        for (let index = 0; index < pluggedPerks.length; index++) {\n          const socket = pluggedPerks[index];\n          if (socket.plugged) {\n            perkHashes.push(socket.plugged.plugDef.hash);\n            // Columns 3 and 4 (indexes 2 and 3) are typically trait perks\n            if (index === 2 || index === 3) {\n              traitPerkHashes.push(socket.plugged.plugDef.hash);\n            }\n          }\n        }\n      }\n\n      // Check for masterwork\n      for (const socket of item.sockets.allSockets) {\n        if (\n          socket.plugged &&\n          socket.plugged.plugDef.plug?.plugCategoryIdentifier === 'intrinsics.stat'\n        ) {\n          masterworkHash = socket.plugged.plugDef.hash;\n        }\n      }\n    }\n\n    const weaponData = utils.getWeaponData(\n      item.hash.toString(),\n      perkHashes.map(String),\n      masterworkHash?.toString(),\n    );\n\n    // Override trait combo ranking if we have specific trait perks identified\n    if (traitPerkHashes.length === 2 && weaponData) {\n      const comboRank = utils.getTraitComboRank(\n        item.hash.toString(),\n        traitPerkHashes[0].toString(),\n        traitPerkHashes[1].toString(),\n      );\n      // Only log in debug mode\n      if (!comboRank && $D2L_FLAVOR === 'dev') {\n        console.log('No combo rank found for weapon:', item.name, {\n          itemHash: item.hash,\n          perk4: traitPerkHashes[0],\n          perk5: traitPerkHashes[1],\n          allPerks: perkHashes,\n          hasTraitData: Boolean(utils.hasDataForWeapon(item.hash.toString())),\n        });\n      } else if (comboRank && $D2L_FLAVOR === 'dev') {\n        console.log('Found combo rank for weapon:', item.name, {\n          rank: comboRank.rank,\n          perk4: comboRank.perk4Hash,\n          perk5: comboRank.perk5Hash,\n          count: comboRank.count,\n        });\n      }\n      weaponData.traitComboRanking = comboRank;\n    }\n\n    setRankingData(weaponData);\n  }, [utils, item]);\n\n  return rankingData;\n}\n\n/**\n * Hook to check if a weapon has any ranking data\n */\nexport function useHasRankingData(item: DimItem | null): boolean {\n  const { utils } = useRollAppraiserUtils();\n\n  if (!utils || !item || item.destinyVersion !== 2 || !item.bucket.inWeapons) {\n    return false;\n  }\n\n  return utils.hasDataForWeapon(item.hash.toString());\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\routes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\safari-touch-fix.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\FilterHelp.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\FilterHelp.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":129,"column":21,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":129,"endColumn":22},{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":136,"column":27,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":136,"endColumn":28}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { SearchType } from '@destinyitemmanager/dim-api-types';\nimport StaticPage from 'app/d2l-ui/StaticPage';\nimport { t } from 'app/i18next-t';\nimport { toggleSearchQueryComponent } from 'app/shell/actions';\nimport { RootState } from 'app/store/types';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './FilterHelp.m.scss';\nimport { SearchInput } from './SearchInput';\nimport {\n  ItemFilterDefinition,\n  ItemSearchConfig,\n  SuggestionsContext,\n} from './items/item-filter-types';\nimport { searchConfigSelector, suggestionsContextSelector } from './items/item-search-filter';\nimport {\n  LoadoutFilterDefinition,\n  LoadoutSearchConfig,\n  LoadoutSuggestionsContext,\n} from './loadouts/loadout-filter-types';\nimport {\n  loadoutSearchConfigSelector,\n  loadoutSuggestionsContextSelector,\n} from './loadouts/loadout-search-filter';\nimport { generateGroupedSuggestionsForFilter } from './suggestions-generation';\n\nfunction keywordsString(keywords: string | string[]) {\n  if (Array.isArray(keywords)) {\n    return keywords.join(', ');\n  }\n  return keywords;\n}\n\nexport default function FilterHelp({ searchType = SearchType.Item }: { searchType?: SearchType }) {\n  const searchConfig = useSelector<RootState, ItemSearchConfig | LoadoutSearchConfig>(\n    searchType === SearchType.Loadout ? loadoutSearchConfigSelector : searchConfigSelector,\n  ).filtersMap;\n  const suggestionContext = useSelector(\n    searchType === SearchType.Loadout\n      ? loadoutSuggestionsContextSelector\n      : suggestionsContextSelector,\n  );\n  const [search, setSearch] = useState('');\n\n  const searchLower = search.toLowerCase();\n  const filters = search\n    ? searchConfig.allFilters.filter((filter) => {\n        const keywordsArr = Array.isArray(filter.keywords) ? filter.keywords : [filter.keywords];\n        if (keywordsArr.some((k) => k.includes(searchLower))) {\n          return true;\n        }\n\n        const localDesc: string = Array.isArray(filter.description)\n          ? t(...filter.description)\n          : t(filter.description);\n\n        return localDesc.toLowerCase().includes(searchLower);\n      })\n    : searchConfig.allFilters.filter((s) => !s.deprecated);\n\n  return (\n    <StaticPage className={styles.filterView}>\n      <div>\n        <p>\n          {t('Filter.Combine', {\n            example: '(is:weapon and is:legendary) or (is:armor and stat:total:<55)',\n          })}{' '}\n          {t('Filter.Negate', { notexample: '-is:tagged', notexample2: 'not is:tagged' })}{' '}\n          <a href=\"/search-history\">{t('SearchHistory.Link')}</a>\n        </p>\n        <div className={styles.search}>\n          <SearchInput\n            query={search}\n            onQueryChanged={setSearch}\n            placeholder={t('Filter.SearchPrompt')}\n            autoFocus\n          />\n        </div>\n        <table>\n          <thead>\n            <tr>\n              <th>{t('Filter.Filter')}</th>\n              <th>{t('Filter.Description')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filters.map((filter) => (\n              <FilterExplanation\n                key={keywordsString(filter.keywords)}\n                filter={filter}\n                suggestionContext={suggestionContext}\n              />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </StaticPage>\n  );\n}\n\nfunction FilterExplanation({\n  filter,\n  suggestionContext,\n}: {\n  filter: LoadoutFilterDefinition | ItemFilterDefinition;\n  suggestionContext: LoadoutSuggestionsContext | SuggestionsContext;\n}) {\n  const dispatch = useDispatch();\n  let suggestions = Array.from(\n    new Set([...generateGroupedSuggestionsForFilter(filter, suggestionContext, true)]),\n  );\n  if (filter.format === 'freeform' || filter.format?.includes('freeform')) {\n    suggestions = suggestions.slice(0, 5);\n  }\n\n  const localDesc: string = Array.isArray(filter.description)\n    ? t(...filter.description)\n    : t(filter.description);\n\n  const applySuggestion = (e: React.MouseEvent<HTMLAnchorElement>, k: string) => {\n    e.preventDefault();\n    dispatch(toggleSearchQueryComponent(k));\n  };\n\n  return (\n    <tr>\n      <td>\n        {suggestions.map((k, i) => (\n          <div key={i} className={styles.entry}>\n            <a href=\".\" onClick={(e) => applySuggestion(e, k.keyword)}>\n              {k.ops ? `${k.keyword}` : k.keyword}\n            </a>\n            {k.ops?.map((op, j) => {\n              const x = `${k.keyword}${op}`;\n              return (\n                <div key={j}>\n                  <span className={styles.separator}>| </span>\n                  <a href=\".\" onClick={(e) => applySuggestion(e, x)}>\n                    {op}\n                  </a>\n                </div>\n              );\n            })}\n          </div>\n        ))}\n      </td>\n      <td>{localDesc}</td>\n    </tr>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\HighlightedText.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\MainSearchBarActions.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\MainSearchBarActions.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\MainSearchBarMenu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\SearchBar.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\SearchBar.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setMenuMaxHeight' of 'useState' directly in 'useEffect'.","line":384,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":384,"endColumn":86}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","line":253,"column":32,"nodeType":"Identifier","endLine":253,"endColumn":43,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has missing dependencies: 'searchQuery' and 'setInputValue'. Either include them or remove the dependency array.","line":374,"column":6,"nodeType":"ArrayExpression","endLine":374,"endColumn":26,"suggestions":[{"desc":"Update the dependencies array to be: [searchQuery, searchQueryVersion, setInputValue]","fix":{"range":[12562,12582],"text":"[searchQuery, searchQueryVersion, setInputValue]"}}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .preventDownshiftDefault on an `any` value.","line":432,"column":30,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":432,"endColumn":53,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { SearchType } from '@destinyitemmanager/dim-api-types';\nimport ArmorySheet from 'app/armory/ArmorySheet';\nimport { saveSearch, searchDeleted, searchUsed } from 'app/d2l-api/basic-actions';\nimport { languageSelector, recentSearchesSelector } from 'app/d2l-api/selectors';\nimport BungieImage from 'app/d2l-ui/BungieImage';\nimport KeyHelp from 'app/d2l-ui/KeyHelp';\nimport { Loading } from 'app/d2l-ui/Loading';\nimport Sheet from 'app/d2l-ui/Sheet';\nimport UserGuideLink from 'app/d2l-ui/UserGuideLink';\nimport { useFixOverscrollBehavior } from 'app/d2l-ui/useFixOverscrollBehavior';\nimport { t } from 'app/i18next-t';\nimport { d2ManifestSelector } from 'app/manifest/selectors';\nimport { toggleSearchResults } from 'app/shell/actions';\nimport { useIsPhonePortrait } from 'app/shell/selectors';\nimport { useThunkDispatch } from 'app/store/thunk-dispatch';\nimport { isiOSBrowser } from 'app/utils/browsers';\nimport { Portal } from 'app/utils/temp-container';\nimport clsx from 'clsx';\nimport { UseComboboxState, UseComboboxStateChangeOptions, useCombobox } from 'downshift';\nimport { debounce } from 'es-toolkit';\nimport { AnimatePresence, LayoutGroup, Variants, motion } from 'motion/react';\nimport React, {\n  Suspense,\n  lazy,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport {\n  AppIcon,\n  closeIcon,\n  disabledIcon,\n  expandDownIcon,\n  expandUpIcon,\n  faClock,\n  helpIcon,\n  searchIcon,\n  starIcon,\n  starOutlineIcon,\n  unTrackedIcon,\n} from '../shell/icons';\nimport HighlightedText from './HighlightedText';\nimport styles from './SearchBar.m.scss';\nimport { buildArmoryIndex } from './armory-search';\nimport createAutocompleter, { SearchItem, SearchItemType } from './autocomplete';\nimport { searchConfigSelector, validateQuerySelector } from './items/item-search-filter';\nimport {\n  loadoutSearchConfigSelector,\n  validateLoadoutQuerySelector,\n} from './loadouts/loadout-search-filter';\nimport { canonicalizeQuery, parseQuery } from './query-parser';\nimport './search-filter.scss';\n\nexport const searchButtonAnimateVariants: Variants = {\n  hidden: { scale: 0 },\n  shown: { scale: 1 },\n};\n\nconst searchItemIcons: { [key in SearchItemType]: string } = {\n  [SearchItemType.Recent]: faClock,\n  [SearchItemType.Saved]: starIcon,\n  [SearchItemType.Suggested]: unTrackedIcon, // TODO: choose a real icon\n  [SearchItemType.Autocomplete]: searchIcon, // TODO: choose a real icon\n  [SearchItemType.Help]: helpIcon,\n  [SearchItemType.ArmoryEntry]: helpIcon,\n};\n\nconst armoryIndexSelector = createSelector(d2ManifestSelector, languageSelector, buildArmoryIndex);\n\nconst autoCompleterSelector = createSelector(\n  searchConfigSelector,\n  armoryIndexSelector,\n  createAutocompleter,\n);\n\nconst loadoutAutoCompleterSelector = createSelector(\n  loadoutSearchConfigSelector,\n  () => undefined,\n  createAutocompleter,\n);\n\nconst LazyFilterHelp = lazy(() => import(/* webpackChunkName: \"filter-help\" */ './FilterHelp'));\n\nconst RowContents = memo(({ item }: { item: SearchItem }) => {\n  function highlight(text: string, section: string) {\n    return item.highlightRange?.section === section ? (\n      <HighlightedText\n        text={text}\n        startIndex={item.highlightRange.range[0]}\n        endIndex={item.highlightRange.range[1]}\n        className={styles.textHighlight}\n      />\n    ) : (\n      text\n    );\n  }\n\n  switch (item.type) {\n    case SearchItemType.Help:\n      return <></>;\n    case SearchItemType.ArmoryEntry:\n      return (\n        <>\n          {item.armoryItem.name}\n          <span className={styles.openInArmoryLabel}>{` - ${t('Armory.OpenInArmory')}`}</span>\n          <span className={styles.namedQueryBody}>\n            {`${item.armoryItem.seasonName} (${t('Armory.Season', {\n              season: item.armoryItem.season,\n              year: item.armoryItem.year ?? '?',\n            })})`}\n          </span>\n        </>\n      );\n    default:\n      return (\n        <>\n          {item.query.header && highlight(item.query.header, 'header')}\n          <span\n            className={clsx({\n              [styles.namedQueryBody]: item.query.header !== undefined,\n            })}\n          >\n            {highlight(item.query.body, 'body')}\n          </span>\n        </>\n      );\n  }\n});\n\nconst Row = memo(\n  ({\n    highlighted,\n    item,\n    isPhonePortrait,\n    isTabAutocompleteItem,\n    onClick,\n  }: {\n    highlighted: boolean;\n    item: SearchItem;\n    isPhonePortrait: boolean;\n    isTabAutocompleteItem: boolean;\n    onClick: (e: React.MouseEvent, item: SearchItem) => void;\n  }) => (\n    <>\n      {item.type === SearchItemType.ArmoryEntry ? (\n        <BungieImage className={styles.armoryItemIcon} src={item.armoryItem.icon} />\n      ) : (\n        <AppIcon className={styles.menuItemIcon} icon={searchItemIcons[item.type]} />\n      )}\n      <p className={styles.menuItemQuery}>\n        <RowContents item={item} />\n      </p>\n      {!isPhonePortrait && isTabAutocompleteItem && (\n        <KeyHelp className={styles.keyHelp} combo=\"tab\" />\n      )}\n      {!isPhonePortrait && highlighted && <KeyHelp className={styles.keyHelp} combo=\"enter\" />}\n      {(item.type === SearchItemType.Recent || item.type === SearchItemType.Saved) && (\n        <button\n          type=\"button\"\n          className={styles.deleteIcon}\n          onClick={(e) => onClick(e, item)}\n          title={t('Header.DeleteSearch')}\n        >\n          <AppIcon icon={closeIcon} />\n        </button>\n      )}\n    </>\n  ),\n);\n\n// TODO: break filter autocomplete into its own object/helpers... with tests\n\n/** An interface for interacting with the search filter through a ref */\nexport interface SearchFilterRef {\n  /** Switch focus to the filter field */\n  focusFilterInput: () => void;\n  /** Clear the filter field */\n  clearFilter: () => void;\n}\n\nconst resultItemHeight = 32;\n\n/**\n * A reusable, autocompleting item search input. This is an uncontrolled input that\n * announces its query has changed only after some delay. This is the new version of the component\n * that offers a browser-style autocompleting search bar with history.\n *\n * TODO: Should this be the main search bar only, or should it also work for item picker, etc?\n */\nfunction SearchBar({\n  searchQueryVersion,\n  searchQuery,\n  mainSearchBar,\n  placeholder,\n  children,\n  onQueryChanged,\n  instant,\n  onClear,\n  className,\n  menu,\n  searchType = SearchType.Item,\n  ref,\n}: {\n  /** Placeholder text when nothing has been typed */\n  placeholder: string;\n  /** Is this the main search bar in the header? It behaves somewhat differently. */\n  mainSearchBar?: boolean;\n  /** A fake property that can be used to force the \"live\" query to be replaced with the one from props */\n  searchQueryVersion?: number;\n  /** The search query to fill in the input. This is used only initially, or when searchQueryVersion changes */\n  searchQuery?: string;\n  /** Children are used as optional extra action buttons only when there is a query. */\n  children?: React.ReactNode;\n  /** An optional menu of actions that can be executed on the search. Always shown. */\n  menu?: React.ReactNode;\n  /** Whether this search bar applies to loadouts rather than items. */\n  searchType?: SearchType;\n  instant?: boolean;\n  className?: string;\n  /** Fired whenever the query changes (already debounced) */\n  onQueryChanged: (query: string) => void;\n  /** Fired whenever the query has been cleared */\n  onClear?: () => void;\n  ref?: React.Ref<SearchFilterRef>;\n}) {\n  const dispatch = useThunkDispatch();\n  const isPhonePortrait = useIsPhonePortrait();\n  const recentSearches = useSelector(recentSearchesSelector(searchType));\n  const autocompleter = useSelector(\n    searchType === SearchType.Loadout ? loadoutAutoCompleterSelector : autoCompleterSelector,\n  );\n  const validateQuery = useSelector(\n    searchType === SearchType.Loadout ? validateLoadoutQuerySelector : validateQuerySelector,\n  );\n\n  // On iOS at least, focusing the keyboard pushes the content off the screen\n  const autoFocus = !mainSearchBar && !isPhonePortrait && !isiOSBrowser();\n\n  const [liveQueryLive, setLiveQuery] = useState(searchQuery ?? '');\n  const [filterHelpOpen, setFilterHelpOpen] = useState(false);\n  const [armoryItemHash, setArmoryItemHash] = useState<number | undefined>(undefined);\n  const [menuMaxHeight, setMenuMaxHeight] = useState<undefined | number>();\n  const inputElement = useRef<HTMLInputElement>(null);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debouncedUpdateQuery = useCallback(\n    instant\n      ? onQueryChanged\n      : debounce((query: string) => {\n          onQueryChanged(query);\n        }, 500),\n    [onQueryChanged],\n  );\n\n  const liveQuery = useDeferredValue(liveQueryLive);\n\n  const { valid, saveable } = validateQuery(liveQuery);\n\n  const lastBlurQuery = useRef<string>(undefined);\n  const onBlur = () => {\n    if (valid && liveQuery && liveQuery !== lastBlurQuery.current) {\n      // save this to the recent searches only on blur\n      // we use the ref to only fire if the query changed since the last blur\n      dispatch(searchUsed({ query: liveQuery, type: searchType }));\n      lastBlurQuery.current = liveQuery;\n    }\n  };\n\n  // Is the current search saved?\n  const canonical = liveQuery ? canonicalizeQuery(parseQuery(liveQuery)) : '';\n  const saved = canonical ? recentSearches.find((s) => s.query === canonical)?.saved : false;\n\n  const toggleSaved = () => {\n    // TODO: keep track of the last search, if you search for something more narrow immediately after then replace?\n    dispatch(saveSearch({ query: liveQuery, saved: !saved, type: searchType }));\n  };\n\n  // Try to fill up the screen with search results\n  const maxResults = isPhonePortrait\n    ? 7 // TODO: do this dynamically on mobile too, but the timing of when the virtual keyboard shows up is a nightmare\n    : menuMaxHeight\n      ? Math.floor((0.7 * menuMaxHeight) / resultItemHeight)\n      : 10;\n\n  const caretPosition = inputElement.current?.selectionStart || liveQuery.length;\n  const items = useMemo(\n    () =>\n      autocompleter(\n        liveQuery,\n        caretPosition,\n        recentSearches,\n        /* includeArmory */ Boolean(mainSearchBar),\n        maxResults,\n      ),\n    [autocompleter, caretPosition, liveQuery, mainSearchBar, recentSearches, maxResults],\n  );\n\n  // useCombobox from Downshift manages the state of the dropdown\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getMenuProps,\n    getInputProps,\n    getLabelProps,\n    highlightedIndex,\n    getItemProps,\n    setInputValue,\n    reset: clearFilter,\n  } = useCombobox<SearchItem>({\n    items,\n    stateReducer,\n    initialInputValue: liveQuery,\n    initialIsOpen: isPhonePortrait && mainSearchBar,\n    defaultHighlightedIndex: liveQuery ? 0 : -1,\n    itemToString: (i) => i?.query.fullText || '',\n    onInputValueChange: ({ inputValue, type }) => {\n      setLiveQuery(inputValue || '');\n      debouncedUpdateQuery(inputValue || '');\n      if (type === useCombobox.stateChangeTypes.FunctionReset) {\n        onClear?.();\n      }\n    },\n  });\n\n  // special click handling for filter helper\n  function stateReducer(\n    state: UseComboboxState<SearchItem>,\n    actionAndChanges: UseComboboxStateChangeOptions<SearchItem>,\n  ) {\n    const { type, changes } = actionAndChanges;\n    switch (type) {\n      case useCombobox.stateChangeTypes.ItemClick:\n      case useCombobox.stateChangeTypes.InputKeyDownEnter:\n        if (!changes.selectedItem) {\n          return changes;\n        }\n\n        switch (changes.selectedItem.type) {\n          case SearchItemType.Help:\n            setFilterHelpOpen(false);\n            break;\n          case SearchItemType.ArmoryEntry:\n            setArmoryItemHash(changes.selectedItem.armoryItem.hash);\n            break;\n          default:\n            // exit early if non FilterHelper item was selected\n            return changes;\n        }\n        // helper click, open FilterHelper and modify state\n        return {\n          ...changes,\n          selectedItem: state.selectedItem, // keep the last selected item (i.e. the edit field stays unchanged)\n        };\n\n      default:\n        return changes; // no handling for other types\n    }\n  }\n\n  // Reset live query when search version changes\n  useEffect(() => {\n    if (searchQuery !== undefined && (searchQueryVersion || 0) > 0) {\n      setInputValue(searchQuery);\n    }\n    // This should only happen when the query version changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchQueryVersion]);\n\n  // Determine a maximum height for the results menu\n  useEffect(() => {\n    if (inputElement.current && window.visualViewport) {\n      const { y, height } = inputElement.current.getBoundingClientRect();\n      const { height: viewportHeight } = window.visualViewport;\n      // pixels remaining in viewport minus offset minus 10px for padding\n      const pxAvailable = viewportHeight - y - height - 10;\n      // constrain to size that would allow only whole items to be seen\n      setMenuMaxHeight(Math.floor(pxAvailable / resultItemHeight) * resultItemHeight);\n    }\n  }, [isOpen]);\n\n  const deleteSearch = useCallback(\n    (e: React.MouseEvent, item: SearchItem) => {\n      e.stopPropagation();\n      dispatch(searchDeleted({ query: item.query.fullText, type: searchType }));\n    },\n    [dispatch, searchType],\n  );\n\n  // Add some methods for refs to use\n  useImperativeHandle(\n    ref,\n    () => ({\n      focusFilterInput: () => {\n        inputElement.current?.focus();\n      },\n      clearFilter,\n    }),\n    [clearFilter],\n  );\n\n  // Implement tab completion on the tab key. If the highlighted item is an autocomplete suggestion,\n  // accept it. Otherwise, we scan from the beginning to find the first autocomplete suggestion and\n  // accept that. If there's nothing to accept, the tab key does its normal thing, which is to switch\n  // focus. The tabAutocompleteItem is computed as part of render so we can offer keyboard help.\n  const tabAutocompleteItem =\n    highlightedIndex > 0 && items[highlightedIndex]?.type === SearchItemType.Autocomplete\n      ? items[highlightedIndex]\n      : items.find((s) => s.type === SearchItemType.Autocomplete && s.query.fullText !== liveQuery);\n  const onKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Tab' && !e.altKey && !e.ctrlKey && tabAutocompleteItem && isOpen) {\n      e.preventDefault();\n      if (inputElement.current) {\n        // Use execCommand to make the insertion as if the user typed it, so it can be undone with Ctrl-Z\n        inputElement.current.setSelectionRange(0, inputElement.current.value.length);\n        document.execCommand('insertText', false, tabAutocompleteItem.query.fullText);\n        if (tabAutocompleteItem.highlightRange) {\n          const cursorPos = tabAutocompleteItem.highlightRange.range[1];\n          inputElement.current.setSelectionRange(cursorPos, cursorPos);\n        }\n      }\n    } else if (e.key === 'Home' || e.key === 'End') {\n      // Disable the use of Home/End to select items in the menu\n      // https://github.com/downshift-js/downshift/issues/1162\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      (e.nativeEvent as any).preventDownshiftDefault = true;\n    } else if (\n      (e.key === 'Delete' || e.key === 'Backspace') &&\n      e.shiftKey &&\n      highlightedIndex >= 0 &&\n      items[highlightedIndex]?.query &&\n      items[highlightedIndex]?.type === SearchItemType.Recent\n    ) {\n      e.preventDefault();\n      dispatch(searchDeleted({ query: items[highlightedIndex].query.fullText, type: searchType }));\n    } else if (e.key === 'Enter' && !isOpen && liveQuery) {\n      // Show search results on \"Enter\" with a closed menu\n      dispatch(toggleSearchResults());\n    }\n  };\n\n  const menuRef = useRef<HTMLUListElement>(null);\n  useFixOverscrollBehavior(menuRef);\n\n  const autocompleteMenu = useMemo(\n    () => (\n      <ul\n        {...getMenuProps({ ref: menuRef })}\n        className={styles.menu}\n        style={{\n          maxHeight: menuMaxHeight,\n        }}\n      >\n        {isOpen &&\n          items.map((item, index) => (\n            <li\n              className={clsx(styles.menuItem, {\n                [styles.highlightedItem]: highlightedIndex === index,\n              })}\n              key={`${item.type}${item.query.fullText}${\n                item.type === SearchItemType.ArmoryEntry && item.armoryItem.hash\n              }`}\n              {...getItemProps({ item, index })}\n            >\n              <Row\n                highlighted={highlightedIndex === index}\n                item={item}\n                isPhonePortrait={isPhonePortrait}\n                isTabAutocompleteItem={item === tabAutocompleteItem}\n                onClick={deleteSearch}\n              />\n            </li>\n          ))}\n      </ul>\n    ),\n    [\n      deleteSearch,\n      getItemProps,\n      getMenuProps,\n      highlightedIndex,\n      isOpen,\n      isPhonePortrait,\n      items,\n      tabAutocompleteItem,\n      menuMaxHeight,\n    ],\n  );\n\n  return (\n    <>\n      <div\n        className={clsx(className, 'search-filter', styles.searchBar, { [styles.open]: isOpen })}\n        role=\"search\"\n      >\n        <AppIcon {...getLabelProps({ icon: searchIcon, className: 'search-bar-icon' })} />\n        <input\n          {...getInputProps({\n            onBlur,\n            onKeyDown,\n            ref: inputElement,\n            className: clsx({ [styles.invalid]: !valid }),\n            autoComplete: 'off',\n            autoCorrect: 'off',\n            autoCapitalize: 'off',\n            spellCheck: false,\n            autoFocus,\n            placeholder,\n            type: 'text',\n            name: 'filter',\n            'aria-label': placeholder,\n          })}\n          enterKeyHint=\"search\"\n        />\n        <LayoutGroup>\n          <AnimatePresence>\n            {children}\n\n            {liveQuery.length > 0 && valid && (saveable || saved) && !isPhonePortrait && (\n              <motion.button\n                variants={searchButtonAnimateVariants}\n                exit=\"hidden\"\n                initial=\"hidden\"\n                animate=\"shown\"\n                key=\"save\"\n                type=\"button\"\n                className={clsx(styles.filterBarButton, styles.saveSearchButton)}\n                onClick={toggleSaved}\n                title={t('Header.SaveSearch')}\n              >\n                <AppIcon icon={saved ? starIcon : starOutlineIcon} />\n              </motion.button>\n            )}\n\n            {(liveQuery.length > 0 || (isPhonePortrait && mainSearchBar)) && (\n              <motion.button\n                variants={searchButtonAnimateVariants}\n                exit=\"hidden\"\n                initial=\"hidden\"\n                animate=\"shown\"\n                key=\"clear\"\n                type=\"button\"\n                className={styles.filterBarButton}\n                onClick={clearFilter}\n                title={t('Header.Clear')}\n              >\n                <AppIcon icon={disabledIcon} />\n              </motion.button>\n            )}\n\n            {menu}\n\n            <motion.button\n              layout\n              key=\"menu\"\n              {...getToggleButtonProps({\n                type: 'button',\n                className: clsx(styles.filterBarButton, styles.openButton),\n                'aria-label': 'toggle menu',\n              })}\n            >\n              <AppIcon icon={isOpen ? expandUpIcon : expandDownIcon} />\n            </motion.button>\n          </AnimatePresence>\n        </LayoutGroup>\n\n        {filterHelpOpen && (\n          <Suspense\n            fallback={\n              <Portal>\n                <Loading message={t('Loading.FilterHelp')} />\n              </Portal>\n            }\n          >\n            {/* Because FilterHelp suspends, the entire sheet will suspend while it is loaded.\n             * This stops us having issues with incorrect frozen initial heights as it will\n             * get locked to the fallback height if we don't do this. */}\n            <Sheet\n              onClose={() => setFilterHelpOpen(false)}\n              header={\n                <>\n                  <h1>{t('Header.Filters')}</h1>\n                  <UserGuideLink topic=\"Item-Search\" />\n                </>\n              }\n              freezeInitialHeight\n              sheetClassName={styles.filterHelp}\n            >\n              <LazyFilterHelp searchType={searchType} />\n            </Sheet>\n          </Suspense>\n        )}\n\n        {autocompleteMenu}\n      </div>\n      {armoryItemHash !== undefined && (\n        <ArmorySheet itemHash={armoryItemHash} onClose={() => setArmoryItemHash(undefined)} />\n      )}\n    </>\n  );\n}\n\nexport default memo(SearchBar);\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\SearchFilter.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\SearchHistory.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\SearchHistory.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\SearchInput.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\SearchResults.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\SearchResults.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\armory-search.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\autocomplete.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\autocomplete.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\context-aware-search.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\d1-known-values.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\d2-known-values.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\filter-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\item-filter-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\item-search-filter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\advanced.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\d1-filters.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\d2-sources.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\data\\d2\\artifact-breaker-weapon-types.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\dupes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\freeform.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\item-infos.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\known-values.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\loadouts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\perk-optimization.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\perk-stat-mappings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\perks-set.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\range-numeric.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\range-overload.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\roll-appraiser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\simple.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\sockets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\stats-set.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\stats-set.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\stats.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\stores.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\items\\search-filters\\wishlist.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\loadouts\\loadout-filter-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\loadouts\\loadout-search-filter.test.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/restrict-template-expressions","severity":2,"message":"Invalid type \"string | string[]\" of template literal expression.","line":29,"column":35,"nodeType":"MemberExpression","messageId":"invalidType","endLine":29,"endColumn":50,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/restrict-template-expressions","severity":2,"message":"Invalid type \"string | string[]\" of template literal expression.","line":37,"column":35,"nodeType":"MemberExpression","messageId":"invalidType","endLine":37,"endColumn":50,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/restrict-template-expressions","severity":2,"message":"Invalid type \"FilterFormat[]\" of template literal expression.","line":37,"column":82,"nodeType":"Identifier","messageId":"invalidType","endLine":37,"endColumn":89,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\loadouts\\loadout-search-filter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\loadouts\\search-filters\\freeform.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\loadouts\\search-filters\\range-overload.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\loadouts\\search-filters\\simple.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\plug-search.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\power-levels.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\query-parser.test.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .startIndex on an `any` value.","line":178,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":178,"endColumn":33,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .length on an `any` value.","line":180,"column":23,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":180,"endColumn":29,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\query-parser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\search-config.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\search-config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\search-filter-values.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\search-filter-values.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\search-filter.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\search-filter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\specialty-modslots.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\suggestions-generation.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\search\\text-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\CharacterOrderEditor.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\CharacterOrderEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\Checkbox.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\CustomStatsSettings.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\CustomStatsSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\LanguageSetting.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\SearchSettings.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setLocalValue' of 'useState' directly in 'useEffect'.","line":46,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":46,"endColumn":27},{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":151,"column":24,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":151,"endColumn":29},{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":430,"column":36,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":430,"endColumn":41},{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":636,"column":36,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":636,"endColumn":41}],"suppressedMessages":[{"ruleId":"css-modules/no-unused-class","severity":2,"message":"Unused classes found in SettingsPage.m.scss: settings, newItem, itemSize, radioOptions, autoTagTable","line":19,"column":8,"nodeType":"ImportDefaultSpecifier","endLine":19,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { languageSelector } from 'app/d2l-api/selectors';\nimport { t } from 'app/i18next-t';\nimport { allItemsSelector } from 'app/inventory/selectors';\nimport { d2ManifestSelector } from 'app/manifest/selectors';\nimport { buildArmoryIndex } from 'app/search/armory-search';\nimport createAutocompleter from 'app/search/autocomplete';\nimport { filterFactorySelector, searchConfigSelector } from 'app/search/items/item-search-filter';\nimport searchBarStyles from 'app/search/SearchBar.m.scss';\nimport { setSearchQuery, toggleSearchResults } from 'app/shell/actions';\nimport { useThunkDispatch } from 'app/store/thunk-dispatch';\nimport { useCombobox } from 'downshift';\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport Checkbox from './Checkbox';\nimport { useSetSetting } from './hooks';\nimport { Settings } from './initial-settings';\n// eslint-disable-next-line css-modules/no-unused-class\nimport styles from './SettingsPage.m.scss';\n\n// Interface for search term objects\ninterface SearchTerm {\n  term: string;\n  logic: 'AND' | 'OR';\n  group?: number;\n}\n\n// Autocomplete component moved outside to prevent re-creation\nconst AutocompleteSearchInput = React.memo(\n  ({\n    value,\n    onChange,\n    placeholder,\n    autocompleter,\n  }: {\n    value: string;\n    onChange: (value: string) => void;\n    placeholder: string;\n    autocompleter: ReturnType<typeof createAutocompleter>;\n  }) => {\n    const inputRef = React.useRef<HTMLInputElement>(null);\n    const [localValue, setLocalValue] = useState(value);\n\n    // Sync local value with prop value\n    useEffect(() => {\n      setLocalValue(value);\n    }, [value]);\n\n    const suggestions = useMemo(() => {\n      if (!localValue.trim()) {\n        return [];\n      }\n      try {\n        const result = autocompleter(\n          localValue, // query\n          localValue.length, // caretIndex (cursor at end)\n          [], // recentSearches (empty for now)\n          false, // includeArmory\n        ).slice(0, 5); // Limit to 5 suggestions\n        return result;\n      } catch (error) {\n        console.warn('Autocomplete error:', error);\n        return [];\n      }\n    }, [localValue, autocompleter]);\n\n    const handleInputChange = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.target.value;\n        const cursorPos = e.target.selectionStart || 0;\n        setLocalValue(newValue);\n        onChange(newValue);\n\n        // Restore cursor position after React re-render\n        setTimeout(() => {\n          if (inputRef.current) {\n            inputRef.current.setSelectionRange(cursorPos, cursorPos);\n          }\n        }, 0);\n      },\n      [onChange],\n    );\n\n    const { isOpen, getMenuProps, getInputProps, getItemProps, highlightedIndex } = useCombobox({\n      inputValue: localValue,\n      items: suggestions,\n      onInputValueChange: ({ inputValue, type }) => {\n        // Handle combobox internal state changes but don't update our input\n        if (type !== useCombobox.stateChangeTypes.InputChange) {\n          setLocalValue(inputValue || '');\n        }\n      },\n      onSelectedItemChange: ({ selectedItem }) => {\n        if (selectedItem && inputRef.current) {\n          const input = inputRef.current;\n          const suggestionText =\n            (selectedItem.query as { body?: string; fullText: string }).body ||\n            (selectedItem.query as { fullText: string }).fullText;\n\n          // Replace the entire input with the suggestion\n          setLocalValue(suggestionText);\n          onChange(suggestionText);\n\n          // Set cursor position to the end\n          setTimeout(() => {\n            if (input) {\n              input.focus();\n              input.setSelectionRange(suggestionText.length, suggestionText.length);\n            }\n          }, 0);\n        }\n      },\n      itemToString: (item) =>\n        (item?.query as { body?: string; fullText?: string })?.body ||\n        (item?.query as { fullText?: string })?.fullText ||\n        '',\n      stateReducer: (state, actionAndChanges) => {\n        const { type, changes } = actionAndChanges;\n        switch (type) {\n          case useCombobox.stateChangeTypes.InputKeyDownEnter:\n          case useCombobox.stateChangeTypes.ItemClick:\n            return {\n              ...changes,\n              isOpen: false,\n              inputValue: localValue, // Keep current input value, don't replace it\n            };\n          default:\n            return changes;\n        }\n      },\n    });\n\n    return (\n      <div style={{ position: 'relative' }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n          <input\n            {...getInputProps({\n              ref: inputRef,\n              type: 'text',\n              placeholder,\n              onChange: handleInputChange,\n            })}\n            style={{ flex: 1 }}\n          />\n        </div>\n        <div {...getMenuProps()}>\n          {isOpen && suggestions.length > 0 && (\n            <div className={searchBarStyles.menu} style={{ zIndex: 9999 }}>\n              {suggestions.map((item, index) => (\n                <div\n                  key={index}\n                  {...getItemProps({ item, index })}\n                  className={searchBarStyles.menuItem}\n                  style={{\n                    backgroundColor:\n                      highlightedIndex === index ? 'var(--theme-accent-primary)' : 'transparent',\n                  }}\n                >\n                  <div className={searchBarStyles.menuItemIcon}>🔍</div>\n                  <div>\n                    {(item.query as { body?: string; fullText: string }).body ||\n                      (item.query as { fullText: string }).fullText}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n\nAutocompleteSearchInput.displayName = 'AutocompleteSearchInput';\n\nexport default function SearchSettings({ settings }: { settings: Settings }) {\n  const setSetting = useSetSetting();\n  const dispatch = useThunkDispatch();\n  const navigate = useNavigate();\n  // No separate state needed - we'll add rows directly to the table\n\n  // Search configuration and autocomplete\n  const searchConfig = useSelector(searchConfigSelector);\n  const filterFactory = useSelector(filterFactorySelector);\n  const allItems = useSelector(allItemsSelector);\n  const language = useSelector(languageSelector);\n  const d2Manifest = useSelector(d2ManifestSelector);\n\n  const armoryIndex = useMemo(() => buildArmoryIndex(d2Manifest, language), [d2Manifest, language]);\n\n  const autocompleter = useMemo(\n    () => createAutocompleter(searchConfig, armoryIndex),\n    [searchConfig, armoryIndex],\n  );\n\n  // Get weapon/armor counts for search terms\n  const getWeaponCount = useCallback(\n    (searchTerm: string) => {\n      if (!searchTerm.trim()) {\n        return 0;\n      }\n      try {\n        const searchFilter = filterFactory(searchTerm);\n        return allItems.filter((item) => item.bucket?.sort === 'Weapons' && searchFilter(item))\n          .length;\n      } catch {\n        return 0;\n      }\n    },\n    [filterFactory, allItems],\n  );\n\n  const getArmorCount = useCallback(\n    (searchTerm: string) => {\n      if (!searchTerm.trim()) {\n        return 0;\n      }\n      try {\n        const searchFilter = filterFactory(searchTerm);\n        return allItems.filter((item) => item.bucket.inArmor && searchFilter(item)).length;\n      } catch {\n        return 0;\n      }\n    },\n    [filterFactory, allItems],\n  );\n\n  // No edit state needed - everything is inline editable\n\n  const weaponSettings = (settings.searchFilterSettings?.keepWeapon || {}) as NonNullable<\n    Settings['searchFilterSettings']\n  >['keepWeapon'];\n  const armorSettings = (settings.searchFilterSettings?.keepArmor || {}) as NonNullable<\n    Settings['searchFilterSettings']\n  >['keepArmor'];\n\n  const handleWeaponSettingChange = useCallback(\n    (key: keyof NonNullable<Settings['searchFilterSettings']>['keepWeapon'], value: unknown) => {\n      setSetting('searchFilterSettings', {\n        ...settings.searchFilterSettings,\n        keepWeapon: {\n          ...settings.searchFilterSettings?.keepWeapon,\n          [key]: value,\n        },\n      });\n    },\n    [setSetting, settings.searchFilterSettings],\n  );\n\n  const handleArmorSettingChange = useCallback(\n    (key: keyof NonNullable<Settings['searchFilterSettings']>['keepArmor'], value: unknown) => {\n      setSetting('searchFilterSettings', {\n        ...settings.searchFilterSettings,\n        keepArmor: {\n          ...settings.searchFilterSettings?.keepArmor,\n          [key]: value,\n        },\n      });\n    },\n    [setSetting, settings.searchFilterSettings],\n  );\n\n  const removeWeaponSearchTerm = useCallback(\n    (index: number) => {\n      const currentTerms = (weaponSettings.additionalSearchTerms as SearchTerm[]) || [];\n      handleWeaponSettingChange(\n        'additionalSearchTerms',\n        currentTerms.filter((_, i) => i !== index),\n      );\n    },\n    [weaponSettings.additionalSearchTerms, handleWeaponSettingChange],\n  );\n\n  const updateWeaponSearchTerm = useCallback(\n    (index: number, field: 'term' | 'logic' | 'group', value: string | number) => {\n      const currentTerms = (weaponSettings.additionalSearchTerms as SearchTerm[]) || [];\n      const updatedTerms = currentTerms.map((termObj, i) =>\n        i === index ? { ...termObj, [field]: value } : termObj,\n      );\n      handleWeaponSettingChange('additionalSearchTerms', updatedTerms);\n    },\n    [weaponSettings.additionalSearchTerms, handleWeaponSettingChange],\n  );\n\n  const addNewWeaponTerm = useCallback(() => {\n    const currentTerms = (weaponSettings.additionalSearchTerms as SearchTerm[]) || [];\n    const newTerm: SearchTerm = { term: '', logic: 'AND' as const, group: 0 };\n    handleWeaponSettingChange('additionalSearchTerms', [...currentTerms, newTerm]);\n  }, [weaponSettings.additionalSearchTerms, handleWeaponSettingChange]);\n\n  const updateArmorSearchTerm = useCallback(\n    (index: number, field: 'term' | 'logic' | 'group', value: string | number) => {\n      const currentTerms = (armorSettings.additionalSearchTerms as SearchTerm[]) || [];\n      const updatedTerms = currentTerms.map((termObj, i) =>\n        i === index ? { ...termObj, [field]: value } : termObj,\n      );\n      handleArmorSettingChange('additionalSearchTerms', updatedTerms);\n    },\n    [armorSettings.additionalSearchTerms, handleArmorSettingChange],\n  );\n\n  const removeArmorSearchTerm = useCallback(\n    (index: number) => {\n      const currentTerms = (armorSettings.additionalSearchTerms as SearchTerm[]) || [];\n      handleArmorSettingChange(\n        'additionalSearchTerms',\n        currentTerms.filter((_, i) => i !== index),\n      );\n    },\n    [armorSettings.additionalSearchTerms, handleArmorSettingChange],\n  );\n\n  const addNewArmorTerm = useCallback(() => {\n    const currentTerms = (armorSettings.additionalSearchTerms as SearchTerm[]) || [];\n    const newTerm: SearchTerm = { term: '', logic: 'AND' as const, group: 0 };\n    handleArmorSettingChange('additionalSearchTerms', [...currentTerms, newTerm]);\n  }, [armorSettings.additionalSearchTerms, handleArmorSettingChange]);\n\n  const showSearchResults = useCallback(\n    (searchTerm: string, itemType: 'weapon' | 'armor') => {\n      if (searchTerm.trim()) {\n        // Combine the search term with the appropriate item type filter using explicit 'and'\n        const typeFilter = itemType === 'weapon' ? 'is:weapon' : 'is:armor';\n        const combinedQuery = `${typeFilter} and ${searchTerm}`;\n\n        // Set the search query in the main search bar\n        dispatch(setSearchQuery(combinedQuery));\n        // Open the search results\n        dispatch(toggleSearchResults(true));\n      }\n    },\n    [dispatch],\n  );\n\n  const navigateToSearchHistory = useCallback(() => {\n    navigate('/search-history');\n  }, [navigate]);\n\n  return (\n    <section id=\"search-settings\">\n      <h2>{t('Settings.SearchSettings')}</h2>\n\n      <div className={styles.setting}>\n        <button\n          type=\"button\"\n          className=\"d2l-button\"\n          onClick={navigateToSearchHistory}\n          style={{\n            marginBottom: '1rem',\n            padding: '8px 16px',\n            fontSize: '14px',\n          }}\n        >\n          🔍 View Search History\n        </button>\n        <div className={styles.fineprint}>\n          View and manage your saved searches and search history.\n        </div>\n      </div>\n\n      <div className={styles.section as string}>\n        <h3>{t('Settings.KeepWeaponSettings')}</h3>\n\n        <div className={styles.setting}>\n          <Checkbox\n            label={t('Settings.EnableKeepWeapon')}\n            name=\"enableKeepWeapon\"\n            value={(weaponSettings as { enabled?: boolean }).enabled ?? true}\n            onChange={(checked) => handleWeaponSettingChange('enabled', checked)}\n          />\n        </div>\n\n        {weaponSettings.enabled && (\n          <>\n            <div className={styles.setting}>\n              <label>{t('Settings.AdditionalSearchTerms')}</label>\n              <div className={styles.fineprint}>{t('Settings.AdditionalSearchDesc')}</div>\n\n              <div>\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: '8px',\n                  }}\n                >\n                  <strong>{t('Settings.CurrentSearchTerms')}:</strong>\n                  <button\n                    type=\"button\"\n                    onClick={addNewWeaponTerm}\n                    style={{\n                      background: '#4CAF50',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '50%',\n                      width: '24px',\n                      height: '24px',\n                      fontSize: '16px',\n                      cursor: 'pointer',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                    title=\"Add new search term\"\n                  >\n                    +\n                  </button>\n                </div>\n                <div style={{ overflowX: 'auto' }}>\n                  <table style={{ width: '100%', fontSize: '14px', borderCollapse: 'collapse' }}>\n                    <thead>\n                      <tr style={{ borderBottom: '1px solid #444' }}>\n                        <th style={{ textAlign: 'left', padding: '8px 4px' }}>Term</th>\n                        <th style={{ textAlign: 'center', padding: '8px 4px', minWidth: '60px' }}>\n                          Group\n                        </th>\n                        <th style={{ textAlign: 'center', padding: '8px 4px', minWidth: '70px' }}>\n                          Logic\n                        </th>\n                        <th style={{ textAlign: 'center', padding: '8px 4px', minWidth: '60px' }}>\n                          Results\n                        </th>\n                        <th style={{ textAlign: 'center', padding: '8px 4px', minWidth: '30px' }} />\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {((weaponSettings.additionalSearchTerms as SearchTerm[]) || []).map(\n                        (termObj, index) => (\n                          <tr key={index} style={{ borderBottom: '1px solid #333' }}>\n                            <td style={{ padding: '8px 4px' }}>\n                              <AutocompleteSearchInput\n                                value={termObj.term}\n                                onChange={(value) => updateWeaponSearchTerm(index, 'term', value)}\n                                placeholder=\"Enter search term\"\n                                autocompleter={autocompleter}\n                              />\n                            </td>\n                            <td style={{ padding: '8px 4px', textAlign: 'center' }}>\n                              <input\n                                type=\"number\"\n                                min=\"1\"\n                                max=\"4\"\n                                value={(termObj.group ?? 0) + 1}\n                                onChange={(e) =>\n                                  updateWeaponSearchTerm(\n                                    index,\n                                    'group',\n                                    parseInt(e.target.value, 10) - 1,\n                                  )\n                                }\n                                style={{\n                                  width: '40px',\n                                  textAlign: 'center',\n                                  backgroundColor: '#333',\n                                  color: '#fff',\n                                  border: '1px solid #555',\n                                  borderRadius: '4px',\n                                  padding: '2px',\n                                }}\n                              />\n                            </td>\n                            <td style={{ padding: '8px 4px', textAlign: 'center' }}>\n                              <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n                                <label\n                                  style={{\n                                    fontSize: '11px',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: '4px',\n                                  }}\n                                >\n                                  <input\n                                    type=\"radio\"\n                                    name={`weaponLogic${index}`}\n                                    value=\"AND\"\n                                    checked={termObj.logic === 'AND'}\n                                    onChange={() => updateWeaponSearchTerm(index, 'logic', 'AND')}\n                                    style={{ margin: 0 }}\n                                  />\n                                  AND\n                                </label>\n                                <label\n                                  style={{\n                                    fontSize: '11px',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: '4px',\n                                  }}\n                                >\n                                  <input\n                                    type=\"radio\"\n                                    name={`weaponLogic${index}`}\n                                    value=\"OR\"\n                                    checked={termObj.logic === 'OR'}\n                                    onChange={() => updateWeaponSearchTerm(index, 'logic', 'OR')}\n                                    style={{ margin: 0 }}\n                                  />\n                                  OR\n                                </label>\n                              </div>\n                            </td>\n                            <td style={{ padding: '8px 4px', textAlign: 'center' }}>\n                              {termObj.term && (\n                                <button\n                                  type=\"button\"\n                                  style={{\n                                    background: 'none',\n                                    border: 'none',\n                                    color: '#4CAF50',\n                                    cursor: 'pointer',\n                                    fontSize: '12px',\n                                    textDecoration: 'underline',\n                                  }}\n                                  onClick={() => showSearchResults(termObj.term, 'weapon')}\n                                  title=\"Click to see matching weapons\"\n                                >\n                                  {getWeaponCount(termObj.term)}\n                                </button>\n                              )}\n                            </td>\n                            <td style={{ padding: '8px 4px', textAlign: 'center' }}>\n                              <button\n                                type=\"button\"\n                                onClick={() => removeWeaponSearchTerm(index)}\n                                style={{\n                                  background: '#f44336',\n                                  border: 'none',\n                                  color: 'white',\n                                  borderRadius: '50%',\n                                  width: '20px',\n                                  height: '20px',\n                                  fontSize: '12px',\n                                  cursor: 'pointer',\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                }}\n                                title=\"Remove search term\"\n                              >\n                                −\n                              </button>\n                            </td>\n                          </tr>\n                        ),\n                      )}\n                      {((weaponSettings.additionalSearchTerms as SearchTerm[]) || []).length ===\n                        0 && (\n                        <tr>\n                          <td\n                            colSpan={5}\n                            style={{ padding: '16px', textAlign: 'center', color: '#888' }}\n                          >\n                            No search terms added. Click the + button to add one.\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n\n      <div className={styles.section as string}>\n        <h3>{t('Settings.KeepArmorSettings')}</h3>\n\n        <div className={styles.setting}>\n          <Checkbox\n            label={t('Settings.EnableKeepArmor')}\n            name=\"enableKeepArmor\"\n            value={(armorSettings as { enabled?: boolean }).enabled ?? true}\n            onChange={(checked) => handleArmorSettingChange('enabled', checked)}\n          />\n        </div>\n\n        {armorSettings.enabled && (\n          <>\n            <div className={styles.setting}>\n              <label>{t('Settings.AdditionalSearchTerms')}</label>\n              <div className={styles.fineprint}>{t('Settings.AdditionalSearchDesc')}</div>\n\n              <div>\n                <div\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    marginBottom: '8px',\n                  }}\n                >\n                  <strong>{t('Settings.CurrentSearchTerms')}:</strong>\n                  <button\n                    type=\"button\"\n                    onClick={addNewArmorTerm}\n                    style={{\n                      background: '#4CAF50',\n                      border: 'none',\n                      color: 'white',\n                      borderRadius: '50%',\n                      width: '24px',\n                      height: '24px',\n                      fontSize: '16px',\n                      cursor: 'pointer',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                    title=\"Add new search term\"\n                  >\n                    +\n                  </button>\n                </div>\n                <div style={{ overflowX: 'auto' }}>\n                  <table style={{ width: '100%', fontSize: '14px', borderCollapse: 'collapse' }}>\n                    <thead>\n                      <tr style={{ borderBottom: '1px solid #444' }}>\n                        <th style={{ textAlign: 'left', padding: '8px 4px' }}>Term</th>\n                        <th style={{ textAlign: 'center', padding: '8px 4px', minWidth: '60px' }}>\n                          Group\n                        </th>\n                        <th style={{ textAlign: 'center', padding: '8px 4px', minWidth: '70px' }}>\n                          Logic\n                        </th>\n                        <th style={{ textAlign: 'center', padding: '8px 4px', minWidth: '60px' }}>\n                          Results\n                        </th>\n                        <th style={{ textAlign: 'center', padding: '8px 4px', minWidth: '30px' }} />\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {((armorSettings.additionalSearchTerms as SearchTerm[]) || []).map(\n                        (termObj, index) => (\n                          <tr key={index} style={{ borderBottom: '1px solid #333' }}>\n                            <td style={{ padding: '8px 4px' }}>\n                              <AutocompleteSearchInput\n                                value={termObj.term}\n                                onChange={(value) => updateArmorSearchTerm(index, 'term', value)}\n                                placeholder=\"Enter search term\"\n                                autocompleter={autocompleter}\n                              />\n                            </td>\n                            <td style={{ padding: '8px 4px', textAlign: 'center' }}>\n                              <input\n                                type=\"number\"\n                                min=\"1\"\n                                max=\"4\"\n                                value={(termObj.group ?? 0) + 1}\n                                onChange={(e) =>\n                                  updateArmorSearchTerm(\n                                    index,\n                                    'group',\n                                    parseInt(e.target.value, 10) - 1,\n                                  )\n                                }\n                                style={{\n                                  width: '40px',\n                                  textAlign: 'center',\n                                  backgroundColor: '#333',\n                                  color: '#fff',\n                                  border: '1px solid #555',\n                                  borderRadius: '4px',\n                                  padding: '2px',\n                                }}\n                              />\n                            </td>\n                            <td style={{ padding: '8px 4px', textAlign: 'center' }}>\n                              <div style={{ display: 'flex', flexDirection: 'column', gap: '4px' }}>\n                                <label\n                                  style={{\n                                    fontSize: '11px',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: '4px',\n                                  }}\n                                >\n                                  <input\n                                    type=\"radio\"\n                                    name={`armorLogic${index}`}\n                                    value=\"AND\"\n                                    checked={termObj.logic === 'AND'}\n                                    onChange={() => updateArmorSearchTerm(index, 'logic', 'AND')}\n                                    style={{ margin: 0 }}\n                                  />\n                                  AND\n                                </label>\n                                <label\n                                  style={{\n                                    fontSize: '11px',\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    gap: '4px',\n                                  }}\n                                >\n                                  <input\n                                    type=\"radio\"\n                                    name={`armorLogic${index}`}\n                                    value=\"OR\"\n                                    checked={termObj.logic === 'OR'}\n                                    onChange={() => updateArmorSearchTerm(index, 'logic', 'OR')}\n                                    style={{ margin: 0 }}\n                                  />\n                                  OR\n                                </label>\n                              </div>\n                            </td>\n                            <td style={{ padding: '8px 4px', textAlign: 'center' }}>\n                              {termObj.term && (\n                                <button\n                                  type=\"button\"\n                                  style={{\n                                    background: 'none',\n                                    border: 'none',\n                                    color: '#4CAF50',\n                                    cursor: 'pointer',\n                                    fontSize: '12px',\n                                    textDecoration: 'underline',\n                                  }}\n                                  onClick={() => showSearchResults(termObj.term, 'armor')}\n                                  title=\"Click to see matching armor\"\n                                >\n                                  {getArmorCount(termObj.term)}\n                                </button>\n                              )}\n                            </td>\n                            <td style={{ padding: '8px 4px', textAlign: 'center' }}>\n                              <button\n                                type=\"button\"\n                                onClick={() => removeArmorSearchTerm(index)}\n                                style={{\n                                  background: '#f44336',\n                                  border: 'none',\n                                  color: 'white',\n                                  borderRadius: '50%',\n                                  width: '20px',\n                                  height: '20px',\n                                  fontSize: '12px',\n                                  cursor: 'pointer',\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  justifyContent: 'center',\n                                }}\n                                title=\"Remove search term\"\n                              >\n                                −\n                              </button>\n                            </td>\n                          </tr>\n                        ),\n                      )}\n                      {((armorSettings.additionalSearchTerms as SearchTerm[]) || []).length ===\n                        0 && (\n                        <tr>\n                          <td\n                            colSpan={5}\n                            style={{ padding: '16px', textAlign: 'center', color: '#888' }}\n                          >\n                            No search terms added. Click the + button to add one.\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </section>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\Select.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\Select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\SettingsPage.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\SettingsPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\SortOrderEditor.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\SortOrderEditor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\Spreadsheets.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\Spreadsheets.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\Troubleshooting.tsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":2,"message":"Unexpected alert.","line":45,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":45,"endColumn":25,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":2,"message":"Unexpected alert.","line":48,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":48,"endColumn":29,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\WishListSettings.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\WishListSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\character-sort.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\hooks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\initial-settings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\item-sort.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\search-filter-selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\settings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\vault-grouping.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\settings\\vault-grouping.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\About.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\About.tsx","messages":[{"ruleId":"@eslint-react/dom/no-dangerously-set-innerhtml","severity":1,"message":"Using 'dangerouslySetInnerHTML' may have security implications.","line":105,"column":15,"nodeType":"JSXAttribute","messageId":"noDangerouslySetInnerhtml","endLine":107,"endColumn":17},{"ruleId":"@eslint-react/dom/no-dangerously-set-innerhtml","severity":1,"message":"Using 'dangerouslySetInnerHTML' may have security implications.","line":129,"column":15,"nodeType":"JSXAttribute","messageId":"noDangerouslySetInnerhtml","endLine":131,"endColumn":17},{"ruleId":"@eslint-react/dom/no-dangerously-set-innerhtml","severity":1,"message":"Using 'dangerouslySetInnerHTML' may have security implications.","line":152,"column":13,"nodeType":"JSXAttribute","messageId":"noDangerouslySetInnerhtml","endLine":154,"endColumn":15},{"ruleId":"@eslint-react/dom/no-dangerously-set-innerhtml","severity":1,"message":"Using 'dangerouslySetInnerHTML' may have security implications.","line":162,"column":13,"nodeType":"JSXAttribute","messageId":"noDangerouslySetInnerhtml","endLine":164,"endColumn":15},{"ruleId":"@eslint-react/dom/no-dangerously-set-innerhtml","severity":1,"message":"Using 'dangerouslySetInnerHTML' may have security implications.","line":180,"column":13,"nodeType":"JSXAttribute","messageId":"noDangerouslySetInnerhtml","endLine":182,"endColumn":15},{"ruleId":"@eslint-react/dom/no-dangerously-set-innerhtml","severity":1,"message":"Using 'dangerouslySetInnerHTML' may have security implications.","line":204,"column":15,"nodeType":"JSXAttribute","messageId":"noDangerouslySetInnerhtml","endLine":206,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { getToken } from 'app/bungie-api/oauth-tokens';\nimport StaticPage from 'app/d2l-ui/StaticPage';\nimport { t } from 'app/i18next-t';\nimport { isAppStoreVersion } from 'app/utils/browsers';\nimport { usePageTitle } from 'app/utils/hooks';\nimport { systemInfo } from 'app/utils/system-info';\nimport logo from 'images/d2llogo.svg';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router';\nimport ExternalLink from '../d2l-ui/ExternalLink';\nimport styles from './About.m.scss';\nimport { AppIcon, faDiscord, faGithub, faTshirt, heartIcon, helpIcon } from './icons';\nimport { discordLink, userGuideLink } from './links';\n\nconst githubLinkDirect = 'https://github.com/DestinyItemManager/D2L/';\nconst crowdinLinkDirect =\n  'https://crowdin.com/project/destiny-item-manager/invite?d=65a5l46565176393s2a3p403a3u22323e46383232393h4k4r443o4h3d4c333t2a3j4f453f4f3o4u643g393b343n4';\nconst bungieLinkDirect = 'https://www.bungie.net';\nconst openCollectiveLinkDirect = 'https://opencollective.com/d2l';\nconst storeLinkDirect = 'https://www.designbyhumans.com/shop/DestinyItemManager/';\n\nconst githubLink = `<a href='${githubLinkDirect}' target='_blank' rel='noopener noreferrer'>GitHub</a>`;\nconst crowdinLink = `<a href='${crowdinLinkDirect}' target='_blank' rel='noopener noreferrer'>Crowdin</a>`;\nconst bungieLink = `<a href='${bungieLinkDirect}' target='_blank' rel='noopener noreferrer'>Bungie.net</a>`;\nconst openCollectiveLink = `<a href='${openCollectiveLinkDirect}' target='_blank' rel='noopener noreferrer'>OpenCollective</a>`;\nconst storeLink = `<a href='${storeLinkDirect}' target='_blank' rel='noopener noreferrer'>DesignByHumans</a>`;\n\nexport default function About() {\n  usePageTitle(t('Header.About'));\n  // The App Store version can't show donation links I guess?\n  const iOSApp = isAppStoreVersion();\n\n  useEffect(() => {\n    if (iOSApp) {\n      return;\n    }\n    const script = document.createElement('script');\n\n    script.src =\n      'https://opencollective.com/d2l/banner.js?style={\"a\":{\"display\":\"none\"}, \"h2\":{\"color\":\"white\"}}';\n    script.async = true;\n\n    document.getElementById('opencollective')!.appendChild(script);\n\n    return () => {\n      delete window.OC;\n    };\n  }, [iOSApp]);\n\n  const token = getToken();\n  return (\n    <StaticPage className={styles.about}>\n      <div className={styles.header}>\n        <img src={logo} className={styles.logo} alt=\"D2L Logo\" height=\"48\" width=\"48\" />\n        <h1>\n          <span>{t('Views.About.Header')}</span>\n        </h1>\n        <Link to=\"/whats-new\">\n          <span>\n            {t('Views.About.Version', {\n              version: $D2L_VERSION,\n              flavor: $D2L_FLAVOR,\n              date: new Date($D2L_BUILD_DATE).toLocaleString(),\n            })}\n          </span>\n        </Link>\n        <br />\n        <span>{systemInfo}</span> <Link to=\"/debug\">Debug</Link>\n      </div>\n      <p>{t('Views.About.HowItsMade')}</p>\n      {$D2L_FLAVOR === 'release' && <p>{t(`Views.About.Schedule.release`)}</p>}\n      {$D2L_FLAVOR === 'beta' && <p>{t(`Views.About.Schedule.beta`)}</p>}\n      {$D2L_FLAVOR === 'pr' && (\n        <p>\n          <a href={`https://github.com/DestinyItemManager/D2L/pull${$PUBLIC_PATH}`}>\n            Pull Request #{$PUBLIC_PATH.replaceAll('/', '')}\n          </a>\n        </p>\n      )}\n      <ul>\n        <li>{t('Views.About.BungieCopyright')}</li>\n        <li>\n          <Link to=\"/privacy\">D2L Privacy Policy</Link>\n        </li>\n        {token && (\n          <li>\n            <ExternalLink\n              href={`https://www.bungie.net/en/Profile/ApplicationHistory/254/${token.bungieMembershipId}`}\n            >\n              {t('Views.About.APIHistory')}\n            </ExternalLink>\n          </li>\n        )}\n      </ul>\n      <div className={styles.social}>\n        {!iOSApp && (\n          <div>\n            <h2>\n              <ExternalLink href={openCollectiveLinkDirect}>\n                <AppIcon icon={heartIcon} />\n                {t('Views.Support.Support')}\n              </ExternalLink>\n            </h2>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: t('Views.Support.OpenCollective', { link: openCollectiveLink }),\n              }}\n            />\n          </div>\n        )}\n        <div>\n          <h2>\n            <ExternalLink href={userGuideLink}>\n              <AppIcon icon={helpIcon} />\n              {t('Views.About.Wiki')}\n            </ExternalLink>\n          </h2>\n          {t('Views.About.WikiHelp')} <br />\n        </div>\n        {!iOSApp && (\n          <div>\n            <h2>\n              <ExternalLink href={storeLinkDirect}>\n                <AppIcon icon={faTshirt} />\n                {t('Header.Shop')}\n              </ExternalLink>\n            </h2>\n            <div\n              dangerouslySetInnerHTML={{\n                __html: t('Views.Support.Store', { link: storeLink }),\n              }}\n            />\n          </div>\n        )}\n        <div>\n          <h2>\n            <ExternalLink href={discordLink}>\n              <AppIcon icon={faDiscord} />\n              {t('Views.About.Discord')}\n            </ExternalLink>\n          </h2>\n          {t('Views.About.DiscordHelp')}\n        </div>\n        <div>\n          <h2>\n            <ExternalLink href={githubLinkDirect}>\n              <AppIcon icon={faGithub} />\n              {t('Views.About.GitHub')}\n            </ExternalLink>\n          </h2>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: t('Views.About.GitHubHelp', { link: githubLink }),\n            }}\n          />\n        </div>\n        <div>\n          <h2>\n            <ExternalLink href={crowdinLinkDirect}>{t('Views.About.Translation')}</ExternalLink>\n          </h2>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: t('Views.About.TranslationText', { link: crowdinLink }),\n            }}\n          />\n        </div>\n      </div>\n\n      <h2>{t('Views.About.FAQ')}</h2>\n      <dl>\n        <dt>{t('Views.About.FAQMobile')}</dt>\n        <dd>{t('Views.About.FAQMobileAnswer')}</dd>\n        <dt>{t('Views.About.FAQLogout')}</dt>\n        <dd>{t('Views.About.FAQLogoutAnswer')}</dd>\n        <dt>{t('Views.About.FAQKeyboard')}</dt>\n        <dd>{t('Views.About.FAQKeyboardAnswer')}</dd>\n        <dt>{t('Views.About.FAQLostItem')}</dt>\n        <dd>\n          <div\n            dangerouslySetInnerHTML={{\n              __html: t('Views.About.FAQLostItemAnswer', { link: bungieLink }),\n            }}\n          />\n          {token && (\n            <p>\n              <ExternalLink\n                href={`https://www.bungie.net/en/Profile/ApplicationHistory/254/${token.bungieMembershipId}`}\n              >\n                {t('Views.About.APIHistory')}\n              </ExternalLink>\n            </p>\n          )}\n        </dd>\n        <dt>{t('Views.About.FAQAccess')}</dt>\n        <dd>{t('Views.About.FAQAccessAnswer')}</dd>\n      </dl>\n\n      {!iOSApp && (\n        <>\n          <h1>{t('Views.Support.Support')}</h1>\n          <p>{t('Views.Support.FreeToDownload')}</p>\n          <p>\n            <span\n              dangerouslySetInnerHTML={{\n                __html: t('Views.Support.OpenCollective', { link: openCollectiveLink }),\n              }}\n            />{' '}\n          </p>\n          {t('Views.Support.BackersDetail')}\n        </>\n      )}\n      <div id=\"opencollective\" />\n    </StaticPage>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\AppInstallBanner.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\AppInstallBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\DefaultAccount.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\Destiny.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\Destiny.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\ErrorPanel.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\ErrorPanel.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\GATracker.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\Header.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\Header.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setDropdownOpen' of 'useState' directly in 'useEffect'.","line":110,"column":5,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":110,"endColumn":27}],"suppressedMessages":[{"ruleId":"react-hooks/rules-of-hooks","severity":2,"message":"React Hook \"useSelector\" is called conditionally. React Hooks must be called in the exact same order in every component render.","line":221,"column":7,"nodeType":"Identifier","endLine":221,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { currentAccountSelector } from 'app/accounts/selectors';\nimport { PressTipRoot } from 'app/d2l-ui/PressTip';\nimport Sheet from 'app/d2l-ui/Sheet';\nimport { showCheatSheet$ } from 'app/hotkeys/HotkeysCheatSheet';\nimport { Hotkey } from 'app/hotkeys/hotkeys';\nimport { useHotkeys } from 'app/hotkeys/useHotkey';\nimport { t } from 'app/i18next-t';\nimport { accountRoute } from 'app/routes';\nimport { SearchFilterRef } from 'app/search/SearchBar';\nimport DimApiWarningBanner from 'app/storage/DimApiWarningBanner';\nimport { useThunkDispatch } from 'app/store/thunk-dispatch';\nimport StreamDeckButton from 'app/stream-deck/StreamDeckButton/StreamDeckButton';\nimport { streamDeckEnabledSelector } from 'app/stream-deck/selectors';\nimport { isiOSBrowser } from 'app/utils/browsers';\nimport { compact } from 'app/utils/collections';\nimport { useSetCSSVarToHeight } from 'app/utils/hooks';\nimport { infoLog } from 'app/utils/log';\nimport clsx from 'clsx';\nimport { AnimatePresence, Transition, Variants, motion } from 'motion/react';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router';\nimport { useSubscription } from 'use-subscription';\nimport ClickOutside from '../d2l-ui/ClickOutside';\nimport SearchFilter from '../search/SearchFilter';\nimport styles from './Header.m.scss';\nimport MenuBadge from './MenuBadge';\nimport PostmasterWarningBanner from './PostmasterWarningBanner';\nimport RefreshButton from './RefreshButton';\nimport { setSearchQuery } from './actions';\nimport { installPrompt$ } from './app-install';\nimport { AppIcon, searchIcon } from './icons';\nimport { useIsPhonePortrait } from './selectors';\n\nconst menuAnimateVariants: Variants = {\n  open: { x: 0 },\n  collapsed: { x: -250 },\n};\nconst menuAnimateTransition: Transition<number> = { type: 'spring', duration: 0.3, bounce: 0 };\n\n// TODO: finally time to hack apart the header styles!\n\nexport default function Header() {\n  const dispatch = useThunkDispatch();\n  const isPhonePortrait = useIsPhonePortrait();\n  const account = useSelector(currentAccountSelector);\n\n  // Hamburger menu\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const dropdownToggler = useRef<HTMLButtonElement>(null);\n  const toggleDropdown = useCallback((e: React.MouseEvent | KeyboardEvent) => {\n    e.preventDefault();\n    setDropdownOpen((dropdownOpen) => !dropdownOpen);\n  }, []);\n\n  const hideDropdown = useCallback(() => {\n    setDropdownOpen(false);\n  }, []);\n\n  // Mobile search bar\n  const [showSearch, setShowSearch] = useState(false);\n  const toggleSearch = () => setShowSearch((showSearch) => !showSearch);\n  const hideSearch = useCallback(() => {\n    if (showSearch) {\n      setShowSearch(false);\n    }\n  }, [showSearch]);\n\n  // Install D2L as a PWA\n  const [promptIosPwa, setPromptIosPwa] = useState(false);\n  const installPromptEvent = useSubscription(installPrompt$);\n\n  const showInstallPrompt = () => {\n    setPromptIosPwa(true);\n    setDropdownOpen(false);\n  };\n\n  const installDim = () => {\n    if (installPromptEvent) {\n      installPromptEvent.prompt();\n      installPromptEvent.userChoice.then((choiceResult) => {\n        if (choiceResult.outcome === 'accepted') {\n          infoLog('install', 'User installed D2 Locker to desktop/home screen');\n        } else {\n          infoLog('install', 'User dismissed the install prompt');\n        }\n        installPrompt$.next(undefined);\n      });\n    } else {\n      showInstallPrompt();\n    }\n  };\n\n  // Is this running as an installed app?\n  const isStandalone =\n    window.navigator.standalone === true || window.matchMedia('(display-mode: standalone)').matches;\n\n  const iosPwaAvailable = isiOSBrowser() && !isStandalone;\n\n  const installable = installPromptEvent || iosPwaAvailable;\n\n  // the choice to relaunch in a no-tabs, less-UI window\n\n  // Search filter\n  const searchFilter = useRef<SearchFilterRef>(null);\n\n  // Clear filter and close dropdown on path change\n  const { pathname } = useLocation();\n  useEffect(() => {\n    setDropdownOpen(false);\n    dispatch(setSearchQuery(''));\n  }, [dispatch, pathname]);\n\n  // Focus search when shown\n  useEffect(() => {\n    if (searchFilter.current && showSearch) {\n      searchFilter.current.focusFilterInput();\n    }\n  }, [showSearch]);\n\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const navLinkClassName = ({ isActive }: { isActive: boolean }) =>\n    clsx(styles.menuItem, { [styles.active]: isActive });\n\n  // Generic links about D2L\n\n  let links: {\n    to: string;\n    text: string;\n    badge?: React.ReactNode;\n  }[] = [];\n  if (account) {\n    const path = accountRoute(account);\n    links = compact([\n      {\n        to: `${path}/inventory`,\n        text: t('Header.Inventory'),\n      },\n      {\n        to: `${path}/vendors`,\n        text: t('Vendors.Vendors'),\n      },\n      {\n        to: `${path}/loadouts`,\n        text: t('Loadouts.Loadouts'),\n      },\n      account.destinyVersion === 2 && {\n        to: `${path}/armory-search`,\n        text: 'Weapon Database',\n      },\n    ]);\n  }\n\n  const linkNodes = links.map((link) => (\n    <NavLink className={navLinkClassName} key={link.to} to={link.to}>\n      {link.badge}\n      {link.text}\n    </NavLink>\n  ));\n\n  // Links about the current Destiny version\n  const destinyLinks = linkNodes;\n\n  const hotkeys = useMemo(() => {\n    const hotkeys: Hotkey[] = [\n      {\n        combo: 'm',\n        description: t('Hotkey.Menu'),\n        callback: toggleDropdown,\n      },\n      {\n        combo: 'f',\n        description: t('Hotkey.StartSearch'),\n        callback: (event) => {\n          if (searchFilter.current) {\n            searchFilter.current.focusFilterInput();\n            if (isPhonePortrait) {\n              setShowSearch(true);\n            }\n          }\n          event.preventDefault();\n          event.stopPropagation();\n        },\n      },\n      {\n        combo: 'shift+f',\n        description: t('Hotkey.StartSearchClear'),\n        callback: (event) => {\n          if (searchFilter.current) {\n            searchFilter.current.clearFilter();\n            searchFilter.current.focusFilterInput();\n            if (isPhonePortrait) {\n              setShowSearch(true);\n            }\n          }\n          event.preventDefault();\n          event.stopPropagation();\n        },\n      },\n    ];\n    return hotkeys;\n  }, [isPhonePortrait, toggleDropdown]);\n  useHotkeys(hotkeys);\n\n  const showKeyboardHelp = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    showCheatSheet$.next(true);\n    setDropdownOpen(false);\n  };\n\n  // Calculate the true height of the header, for use in other things\n  const headerRef = useRef<HTMLDivElement>(null);\n  useSetCSSVarToHeight(headerRef, '--header-height');\n\n  const headerLinksRef = useRef<HTMLDivElement>(null);\n\n  const streamDeckEnabled = $featureFlags.elgatoStreamDeck\n    ? // eslint-disable-next-line react-hooks/rules-of-hooks\n      useSelector(streamDeckEnabledSelector)\n    : false;\n\n  return (\n    <PressTipRoot value={headerRef}>\n      <header className={styles.container} ref={headerRef}>\n        <div className={styles.header}>\n          <button\n            type=\"button\"\n            className={clsx(styles.menuItem, styles.menu)}\n            ref={dropdownToggler}\n            onClick={toggleDropdown}\n            aria-haspopup=\"menu\"\n            aria-label={t('Header.Menu')}\n            aria-expanded={dropdownOpen}\n          >\n            <img src=\"/android-chrome-192x192-6-2018.png\" width=\"24\" height=\"24\" alt=\"Menu\" />\n            <MenuBadge />\n          </button>\n          {account && (\n            <span style={{ marginLeft: '8px', fontSize: '14px', fontWeight: 'bold' }}>\n              Yo {account.displayName}!\n            </span>\n          )}\n          <AnimatePresence>\n            {dropdownOpen && (\n              <motion.div\n                key=\"dropdown\"\n                className={styles.dropdown}\n                role=\"menu\"\n                initial=\"collapsed\"\n                animate=\"open\"\n                exit=\"collapsed\"\n                variants={menuAnimateVariants}\n                transition={menuAnimateTransition}\n              >\n                <ClickOutside\n                  ref={dropdownRef}\n                  extraRef={dropdownToggler}\n                  onClickOutside={hideDropdown}\n                >\n                  {destinyLinks}\n                  <hr />\n                  <NavLink className={navLinkClassName} to=\"/settings\">\n                    {t('Settings.Settings')}\n                  </NavLink>\n                  {installable && (\n                    <a className={styles.menuItem} onClick={installDim}>\n                      Install D2Locker as an App\n                    </a>\n                  )}\n                  {!isPhonePortrait && (\n                    <a className={styles.menuItem} onClick={showKeyboardHelp}>\n                      {t('Header.KeyboardShortcuts')}\n                    </a>\n                  )}\n                </ClickOutside>\n              </motion.div>\n            )}\n          </AnimatePresence>\n          <div className={styles.headerLinks} ref={headerLinksRef}>\n            {destinyLinks}\n          </div>\n          <div className={styles.headerRight}>\n            {account && !isPhonePortrait && (\n              <span className={styles.searchLink}>\n                <SearchFilter onClear={hideSearch} ref={searchFilter} />\n              </span>\n            )}\n            {streamDeckEnabled && <StreamDeckButton />}\n            <RefreshButton className={styles.menuItem} />\n            <button\n              type=\"button\"\n              className={clsx(styles.menuItem, styles.searchButton)}\n              onClick={toggleSearch}\n            >\n              <AppIcon icon={searchIcon} />\n            </button>\n          </div>\n        </div>\n        {account && isPhonePortrait && showSearch && (\n          <span className=\"mobile-search-link\">\n            <SearchFilter onClear={hideSearch} ref={searchFilter} />\n          </span>\n        )}\n        <PostmasterWarningBanner />\n        {$featureFlags.warnNoSync && <DimApiWarningBanner />}\n        {promptIosPwa && (\n          <Sheet header={<h1>{t('Header.InstallD2L')}</h1>} onClose={() => setPromptIosPwa(false)}>\n            <p className={styles.pwaPrompt}>{t('Header.IosPwaPrompt')}</p>\n          </Sheet>\n        )}\n      </header>\n    </PressTipRoot>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\HeaderWarningBanner.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\HeaderWarningBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\LocationSwitcher.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\MenuBadge.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\MenuBadge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\PostmasterWarningBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\Privacy.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\Privacy.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\RefreshButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\RefreshButton.tsx","messages":[{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setSpin' of 'useState' directly in 'useEffect'.","line":39,"column":7,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":39,"endColumn":26},{"ruleId":"@eslint-react/hooks-extra/no-direct-set-state-in-use-effect","severity":1,"message":"Do not call the 'set' function 'setSpin' of 'useState' directly in 'useEffect'.","line":49,"column":9,"nodeType":"CallExpression","messageId":"noDirectSetStateInUseEffect","endLine":49,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { destinyVersionSelector } from 'app/accounts/selectors';\nimport { PressTip, useTooltipCustomization } from 'app/d2l-ui/PressTip';\nimport { useHotkey } from 'app/hotkeys/useHotkey';\nimport { t } from 'app/i18next-t';\nimport { isDragging$ } from 'app/inventory/drag-events';\nimport {\n  autoRefreshEnabledSelector,\n  profileErrorSelector,\n  profileMintedSelector,\n} from 'app/inventory/selectors';\nimport { useEventBusListener } from 'app/utils/hooks';\nimport { i15dDurationFromMsWithSeconds } from 'app/utils/time';\nimport clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSubscription } from 'use-subscription';\nimport ErrorPanel from './ErrorPanel';\nimport styles from './RefreshButton.m.scss';\nimport { AppIcon, refreshIcon } from './icons';\nimport { loadingTracker } from './loading-tracker';\nimport { refresh } from './refresh-events';\n\nconst MIN_SPIN = 1000; // 1 second\n\nexport default function RefreshButton({ className }: { className?: string }) {\n  const [disabled, setDisabled] = useState(false);\n  const autoRefresh = useSelector(autoRefreshEnabledSelector);\n\n  const handleChanges = useCallback(\n    () => setDisabled(!navigator.onLine || document.hidden || isDragging$.getCurrentValue()),\n    [],\n  );\n  const active = useSubscription(loadingTracker.active$);\n\n  // Always show the spinner for at least MIN_SPIN milliseconds\n  const [spin, setSpin] = useState(active ? Date.now() : 0);\n  useEffect(() => {\n    if (active && spin === 0) {\n      setSpin(Date.now());\n    } else if (!active && spin !== 0) {\n      const elapsed = Date.now() - spin;\n      const remainingTime = Math.max(0, MIN_SPIN - elapsed);\n      if (remainingTime > 0) {\n        const timer = window.setTimeout(() => {\n          setSpin(0);\n        }, remainingTime);\n        return () => window.clearTimeout(timer);\n      } else {\n        setSpin(0);\n      }\n    }\n  }, [active, spin]);\n\n  useEventBusListener(isDragging$, handleChanges);\n\n  useEffect(() => {\n    document.addEventListener('visibilitychange', handleChanges);\n    document.addEventListener('online', handleChanges);\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleChanges);\n      document.removeEventListener('online', handleChanges);\n    };\n  }, [handleChanges]);\n\n  useHotkey('r', t('Hotkey.RefreshInventory'), refresh);\n\n  return (\n    <PressTip tooltip={<RefreshButtonTooltip autoRefresh={autoRefresh} />}>\n      <button\n        type=\"button\"\n        className={clsx(styles.refreshButton, className, { disabled })}\n        onClick={refresh}\n        title={t('Header.Refresh') + (autoRefresh ? `\\n${t('Header.AutoRefresh')}` : '')}\n        aria-keyshortcuts=\"R\"\n      >\n        <AppIcon icon={refreshIcon} spinning={spin !== 0} />\n        {autoRefresh && <div className={styles.userIsPlaying} />}\n      </button>\n    </PressTip>\n  );\n}\n\nfunction useProfileAge() {\n  const profileMintedDate = useSelector(profileMintedSelector);\n  const [_tickState, setTickState] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => setTickState((t) => t + 1), 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return profileAge(profileMintedDate);\n}\n\nfunction profileAge(profileMintedDate: Date) {\n  return profileMintedDate.getTime() === 0 ? undefined : Date.now() - profileMintedDate.getTime();\n}\n\nfunction RefreshButtonTooltip({ autoRefresh }: { autoRefresh: boolean }) {\n  const profileAge = useProfileAge();\n  const profileError = useSelector(profileErrorSelector);\n  const isManifestError = profileError?.name === 'ManifestError';\n  const destinyVersion = useSelector(destinyVersionSelector);\n\n  useTooltipCustomization({\n    className: profileError ? styles.errorTooltip : null,\n  });\n\n  return (\n    <>\n      {profileError ? (\n        <div className={styles.errorDetails}>\n          <ErrorPanel\n            title={\n              isManifestError\n                ? t('Accounts.ErrorLoadManifest')\n                : t('Accounts.ErrorLoadInventory', { version: destinyVersion })\n            }\n            error={profileError}\n            frameless\n          />\n        </div>\n      ) : (\n        <>\n          <b>{t('Header.Refresh') + (autoRefresh ? `\\n${t('Header.AutoRefresh')}` : '')}</b>\n          {profileAge !== undefined && (\n            <div>{t('Header.ProfileAge', { age: i15dDurationFromMsWithSeconds(profileAge) })}</div>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\ScrollToTop.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\SneakyUpdates.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\actions.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-inferrable-types","severity":2,"message":"Type boolean trivially inferred from a boolean literal, remove type annotation.","line":15,"column":19,"nodeType":"AssignmentPattern","messageId":"noInferrableType","endLine":15,"endColumn":48,"fix":{"range":[617,626],"text":""},"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\alerts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\app-install.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\formatters.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\AppIcon.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\Library.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\Engram.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\Enhanced.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\Epic.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\Hunter.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\HunterProportional.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\Power.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\PowerAlt.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\Shaped.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\Titan.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\TitanProportional.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\Warlock.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\WarlockProportional.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\custom\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\icons\\index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\item-comparators.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\links.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\loading-tracker.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\refresh-events.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\shell\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\storage\\DimApiSettings.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\storage\\DimApiSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\storage\\DimApiWarningBanner.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\storage\\ImportExport.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\storage\\LocalStorageInfo.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\storage\\LocalStorageInfo.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\storage\\export-data.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\storage\\human-bytes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\storage\\idb-keyval.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\AccountCurrencies.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\AccountCurrencies.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\CharacterStats.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\CharacterStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\ClarityCharacterStat.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\ClarityCharacterStat.tsx","messages":[{"ruleId":"@eslint-react/no-unstable-default-props","severity":1,"message":"A/an 'array expression' as default prop. This could lead to potential infinite render loop in React. Use a variable instead of 'array expression'.","line":221,"column":15,"nodeType":"ArrayExpression","messageId":"noUnstableDefaultProps","endLine":221,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ClarityCharacterStats } from 'app/clarity/descriptions/character-stats';\nimport { clarityCharacterStatsSelector } from 'app/clarity/selectors';\nimport BungieImage from 'app/d2l-ui/BungieImage';\nimport { Tooltip } from 'app/d2l-ui/PressTip';\nimport { t } from 'app/i18next-t';\nimport { useD2Definitions } from 'app/manifest/selectors';\nimport { timerDurationFromMsWithDecimal } from 'app/utils/time';\nimport { DestinyInventoryItemDefinition } from 'bungie-api-ts/destiny2';\nimport clsx from 'clsx';\nimport { StatHashes } from 'data/d2/generated-enums';\nimport { JSX } from 'react';\nimport { useSelector } from 'react-redux';\nimport styles from './ClarityCharacterStat.m.scss';\n\nconst statHashToClarityName: { [key: number]: keyof ClarityCharacterStats } = {\n  [StatHashes.Weapons]: 'Mobility',\n  [StatHashes.Health]: 'Resilience',\n  [StatHashes.Class]: 'Recovery',\n  [StatHashes.Super]: 'Intellect',\n  [StatHashes.Grenade]: 'Discipline',\n  [StatHashes.Melee]: 'Strength',\n};\n\n/**\n * Use Clarity's database of cooldown info to show extended, accurate cooldown info for equipped subclass mods and exotics.\n */\nexport default function ClarityCharacterStat({\n  statHash,\n  tier,\n  equippedHashes,\n}: {\n  statHash: number;\n  tier: number;\n  /**\n   * Hashes of equipped/selected items and subclass plugs for this character or loadout. Can be limited to\n   * exotic armor + subclass plugs - make sure to include default-selected subclass plugs. This is used to\n   * determine which cooldowns to show and also to calculate any overrides from aspects or exotics.\n   */\n  equippedHashes: Set<number>;\n}) {\n  const defs = useD2Definitions()!;\n  const clarityCharacterStats = useSelector(clarityCharacterStatsSelector);\n  const clarityStatData = clarityCharacterStats?.[statHashToClarityName[statHash]];\n\n  if (!clarityStatData) {\n    return null;\n  }\n\n  const abilityCooldowns: {\n    cooldowns: number[];\n    item: DestinyInventoryItemDefinition;\n    overrides: DestinyInventoryItemDefinition[];\n  }[] = [];\n\n  const applicableOverrides = clarityStatData.Overrides.filter((o) => equippedHashes.has(o.Hash));\n  const abilitiesList =\n    'SuperAbilities' in clarityStatData\n      ? clarityStatData.SuperAbilities\n      : clarityStatData.Abilities;\n  for (const a of abilitiesList) {\n    if (!equippedHashes.has(a.Hash)) {\n      continue;\n    }\n    let cooldowns = a.Cooldowns;\n    const item = defs.InventoryItem.get(a.Hash);\n\n    const overrides = [];\n\n    // Apply cooldown overrides based on equipped items.\n    for (const o of applicableOverrides) {\n      const abilityIndex = (() => {\n        const abilityIndex = o.Requirements.indexOf(a.Hash);\n        if (abilityIndex !== -1) {\n          return abilityIndex;\n        }\n        const subclassIdx = o.Requirements.findIndex((r) => r < 0 && equippedHashes.has(-r));\n        if (subclassIdx !== -1) {\n          return subclassIdx;\n        }\n        if (o.Requirements.length === 1 && o.Requirements[0] === 0) {\n          return 0;\n        }\n        return -1;\n      })();\n      if (abilityIndex !== -1) {\n        if (o.CooldownOverride?.some((v) => v > 0)) {\n          cooldowns = o.CooldownOverride;\n        }\n        const scalar = o.Scalar?.[abilityIndex];\n        if (scalar) {\n          cooldowns = cooldowns.map((v) => scalar * v);\n        }\n        overrides.push(defs.InventoryItem.get(o.Hash));\n      }\n    }\n\n    cooldowns = cooldowns.map((c) => Math.round(c));\n    abilityCooldowns.push({ cooldowns, item, overrides });\n  }\n\n  // Cooldowns that are not about some specific ability\n  const intrinsicCooldowns: JSX.Element[] = [];\n  if ('TotalRegenTime' in clarityStatData) {\n    intrinsicCooldowns.push(\n      <StatTableRow\n        key=\"TimeToFullHP\"\n        name={t('Stats.TimeToFullHP')}\n        cooldowns={clarityStatData.TotalRegenTime.Array}\n        tier={tier}\n        unit=\"s\"\n      />,\n    );\n  } else if ('WalkSpeed' in clarityStatData) {\n    intrinsicCooldowns.push(\n      <StatTableRow\n        key=\"WalkingSpeed\"\n        name={t('Stats.WalkingSpeed')}\n        cooldowns={clarityStatData.WalkSpeed.Array}\n        tier={tier}\n        unit={t('Stats.MetersPerSecond')}\n      />,\n      <StatTableRow\n        key=\"StrafingSpeed\"\n        name={t('Stats.StrafingSpeed')}\n        cooldowns={clarityStatData.StrafeSpeed.Array}\n        tier={tier}\n        unit={t('Stats.MetersPerSecond')}\n      />,\n      <StatTableRow\n        key=\"CrouchingSpeed\"\n        name={t('Stats.CrouchingSpeed')}\n        cooldowns={clarityStatData.CrouchSpeed.Array}\n        tier={tier}\n        unit={t('Stats.MetersPerSecond')}\n      />,\n    );\n  } else if ('ShieldHP' in clarityStatData) {\n    intrinsicCooldowns.push(\n      <StatTableRow\n        key=\"ShieldHP\"\n        // t('Stats.TotalHP')\n        // keep this around maybe?\n        name={t('Stats.ShieldHP')}\n        cooldowns={clarityStatData.ShieldHP.Array}\n        tier={tier}\n        unit={t('Stats.HP')}\n      />,\n      <StatTableRow\n        key=\"DamageResistance\"\n        name={t('Stats.DamageResistance')}\n        cooldowns={clarityStatData.PvEDamageResistance.Array}\n        tier={tier}\n        unit={t('Stats.Percentage')}\n      />,\n      <StatTableRow\n        key=\"FlinchResistance\"\n        name={t('Stats.FlinchResistance')}\n        cooldowns={clarityStatData.FlinchResistance.Array}\n        tier={tier}\n        unit={t('Stats.Percentage')}\n      />,\n    );\n  }\n\n  if (intrinsicCooldowns.length + abilityCooldowns.length === 0) {\n    return null;\n  }\n\n  return (\n    <Tooltip.Section className={styles.communityInsightSection}>\n      <table>\n        <thead>\n          <tr>\n            <th />\n            {tier - 1 >= 0 && (\n              <>\n                <th colSpan={2} className={styles.value}>\n                  {t('LoadoutBuilder.TierNumber', { tier: tier - 1 })}\n                </th>\n              </>\n            )}\n            <th colSpan={2} className={clsx(styles.value, styles.currentColumn)}>\n              {t('LoadoutBuilder.TierNumber', { tier })}\n            </th>\n            {tier + 1 <= 10 && (\n              <>\n                <th colSpan={2} className={styles.value}>\n                  {t('LoadoutBuilder.TierNumber', { tier: tier + 1 })}\n                </th>\n              </>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {abilityCooldowns\n            .sort((a, b) => a.cooldowns[tier] - b.cooldowns[tier])\n            .map(({ cooldowns, item, overrides }) => (\n              <StatTableRow\n                key={item.hash}\n                name={item.displayProperties.name}\n                icon={item.displayProperties.icon}\n                cooldowns={cooldowns}\n                tier={tier}\n                overrides={overrides}\n                unit=\"s\"\n              />\n            ))}\n          {intrinsicCooldowns}\n        </tbody>\n      </table>\n    </Tooltip.Section>\n  );\n}\n\nfunction StatTableRow({\n  name,\n  icon,\n  cooldowns,\n  tier,\n  unit,\n  overrides = [],\n}: {\n  name: string;\n  icon?: string;\n  unit: string;\n  tier: number;\n  cooldowns: number[];\n  overrides?: DestinyInventoryItemDefinition[];\n}) {\n  const unitEl = <td className={styles.unit}>{unit}</td>;\n  const seconds = unit === 's';\n\n  const formatValue = (val: number) => {\n    if (seconds) {\n      return timerDurationFromMsWithDecimal(val * 1000);\n    }\n    return val.toLocaleString();\n  };\n\n  const colspan = seconds ? 2 : 1;\n\n  return (\n    <tr>\n      <th>\n        <span>\n          {icon && <BungieImage src={icon} height={16} width={16} />}\n          {name}\n        </span>\n        {overrides.map((o) => (\n          <span key={o.hash} className={styles.override}>\n            {'+ '}\n            {o.displayProperties.icon && (\n              <BungieImage src={o.displayProperties.icon} height={12} width={12} />\n            )}\n            {o.displayProperties.name}\n          </span>\n        ))}\n      </th>\n      {tier - 1 >= 0 && (\n        <>\n          <td className={styles.value} colSpan={colspan}>\n            {formatValue(cooldowns[tier - 1])}\n          </td>\n          {!seconds && unitEl}\n        </>\n      )}\n      <td className={clsx(styles.value, styles.currentColumn)} colSpan={colspan}>\n        {formatValue(cooldowns[tier])}\n      </td>\n      {!seconds && <td className={clsx(styles.unit, styles.currentColumn)}>{unit}</td>}\n      {tier + 1 <= 10 && (\n        <>\n          <td className={styles.value} colSpan={colspan}>\n            {formatValue(cooldowns[tier + 1])}\n          </td>\n          {!seconds && unitEl}\n        </>\n      )}\n    </tr>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\D1CharacterStats.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\D1CharacterStats.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":57,"column":25,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":57,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import BungieImage from 'app/d2l-ui/BungieImage';\nimport { PressTip } from 'app/d2l-ui/PressTip';\nimport { D1StatHashes } from 'app/destiny1/d1-manifest-types';\nimport { t } from 'app/i18next-t';\nimport type { DimCharacterStat, DimStore } from 'app/inventory/store-types';\nimport { findItemsByBucket } from 'app/inventory/stores-helpers';\nimport { percent } from 'app/shell/formatters';\nimport clsx from 'clsx';\nimport { BucketHashes } from 'data/d2/generated-enums';\nimport styles from './D1CharacterStats.m.scss';\n\nexport function D1StoreCharacterStats({ store }: { store: DimStore }) {\n  const subclass = findItemsByBucket(store, BucketHashes.Subclass).find((i) => i.equipped);\n  return <D1CharacterStats stats={store.stats} subclassHash={subclass?.hash} />;\n}\n\nexport function D1CharacterStats({\n  stats,\n  subclassHash,\n}: {\n  stats: DimStore['stats'];\n  subclassHash?: number;\n}) {\n  const statList = Object.values(stats);\n  const tooltips = statList.map((stat) => {\n    const tier = Math.floor(Math.min(300, stat.value) / 60);\n    const next = t('Stats.TierProgress', {\n      context: tier === 5 ? 'Max' : '',\n      metadata: { context: ['max'] },\n      progress: tier === 5 ? stat.value : stat.value % 60,\n      tier,\n      nextTier: tier + 1,\n      statName: stat.displayProperties.name,\n    });\n\n    const cooldown = subclassHash ? getAbilityCooldown(subclassHash, stat.hash, tier) : undefined;\n    if (cooldown) {\n      switch (stat.hash) {\n        case D1StatHashes.Intellect:\n          return next + t('Cooldown.Super', { cooldown });\n        case D1StatHashes.Discipline:\n          return next + t('Cooldown.Grenade', { cooldown });\n        case D1StatHashes.Strength:\n          return next + t('Cooldown.Melee', { cooldown });\n      }\n    }\n    return next;\n  });\n\n  return (\n    <div className={styles.statBars}>\n      {statList.map((stat, index) => (\n        <PressTip key={stat.hash} tooltip={tooltips[index]}>\n          <div className={styles.stat}>\n            <BungieImage src={stat.displayProperties.icon} alt={stat.displayProperties.name} />\n            {getD1CharacterStatTiers(stat).map((n, index) => (\n              <div key={index} className={styles.bar}>\n                <div\n                  className={clsx(styles.progress, {\n                    [styles.complete]: n / 60 === 1,\n                  })}\n                  style={{ width: percent(n / 60) }}\n                />\n              </div>\n            ))}\n          </div>\n        </PressTip>\n      ))}\n    </div>\n  );\n}\n\nfunction getD1CharacterStatTiers(stat: DimCharacterStat) {\n  const tiers = new Array<number>(5);\n  let remaining = stat.value;\n  for (let t = 0; t < 5; t++) {\n    remaining -= tiers[t] = remaining > 60 ? 60 : remaining;\n  }\n  return tiers;\n}\n\n// Cooldowns\nconst cooldownsSuperA = ['5:00', '4:46', '4:31', '4:15', '3:58', '3:40'];\nconst cooldownsSuperB = ['5:30', '5:14', '4:57', '4:39', '4:20', '4:00'];\nconst cooldownsGrenade = ['1:00', '0:55', '0:49', '0:42', '0:34', '0:25'];\nconst cooldownsMelee = ['1:10', '1:04', '0:57', '0:49', '0:40', '0:29'];\n\n// following code is from https://github.com/DestinyTrialsReport\nfunction getAbilityCooldown(subclass: number, statHash: D1StatHashes, tier: number) {\n  switch (statHash) {\n    case D1StatHashes.Intellect:\n      switch (subclass) {\n        case 2007186000: // Defender\n        case 4143670656: // Nightstalker\n        case 2455559914: // Striker\n        case 3658182170: // Sunsinger\n          return cooldownsSuperA[tier];\n        default:\n          return cooldownsSuperB[tier];\n      }\n    case D1StatHashes.Discipline:\n      return cooldownsGrenade[tier];\n    case D1StatHashes.Strength:\n      switch (subclass) {\n        case 4143670656: // Nightstalker\n        case 1716862031: // Gunslinger\n          return cooldownsMelee[tier];\n        default:\n          return cooldownsGrenade[tier];\n      }\n    default:\n      return '';\n  }\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\StatTooltip.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\StatTooltip.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\StoreStats.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\StoreStats.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\VaultCapacity.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store-stats\\VaultCapacity.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store\\observerMiddleware.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store\\reducers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store\\store.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/method-signature-style","severity":2,"message":"Shorthand method signature is forbidden. Use a function property instead.","line":10,"column":5,"nodeType":"TSMethodSignature","messageId":"errorMethod","endLine":10,"endColumn":72,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store\\thunk-dispatch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\store\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\OpenOnStreamDeckButton\\OpenOnStreamDeckButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\OpenOnStreamDeckButton\\OpenOnStreamDeckButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\StreamDeckButton\\StreamDeckButton.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\StreamDeckButton\\StreamDeckButton.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\StreamDeckSettings\\StreamDeckSettings.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\StreamDeckSettings\\StreamDeckSettings.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\async-module.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\interfaces.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\msg-handlers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\stream-deck.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\useStreamDeckSelection.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\util\\authorization.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\util\\packager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\stream-deck\\util\\version.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\strip-sockets\\StripSockets.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\strip-sockets\\StripSockets.tsx","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":386,"column":36,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":386,"endColumn":39}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { PressTip } from 'app/d2l-ui/PressTip';\nimport Sheet from 'app/d2l-ui/Sheet';\nimport { t } from 'app/i18next-t';\nimport { locateItem } from 'app/inventory/locate-item';\nimport { destiny2CoreSettingsSelector, useD2Definitions } from 'app/manifest/selectors';\nimport { filterFactorySelector } from 'app/search/items/item-search-filter';\nimport { AppIcon, faCheckCircle, refreshIcon } from 'app/shell/icons';\nimport { useThunkDispatch } from 'app/store/thunk-dispatch';\nimport { withCancel } from 'app/utils/cancel';\nimport { DestinyInventoryItemDefinition } from 'bungie-api-ts/destiny2';\nimport clsx from 'clsx';\nimport chestArmorItem from 'destiny-icons/armor_types/chest.svg';\nimport ghostIcon from 'destiny-icons/general/ghost.svg';\nimport handCannonIcon from 'destiny-icons/weapons/hand_cannon.svg';\nimport { produce } from 'immer';\nimport React, { useCallback, useEffect, useMemo, useReducer, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSubscription } from 'use-subscription';\nimport { DefItemIcon } from '../inventory/ItemIcon';\nimport { allItemsSelector } from '../inventory/selectors';\nimport styles from './StripSockets.m.scss';\nimport { SocketKind, StripAction, collectSocketsToStrip, doStripSockets } from './strip-sockets';\nimport { stripSocketsQuery$ } from './strip-sockets-actions';\n\n/**\n * Error, OK, or still in our worklist\n */\ntype SocketState = string | 'ok' | 'todo';\n\ntype State =\n  | {\n      tag: 'selecting';\n    }\n  | {\n      tag: 'processing';\n      cancel: () => void;\n      cancelling: boolean;\n      socketList: StripAction[];\n      socketStates: SocketState[];\n    }\n  | {\n      tag: 'done';\n      socketList: StripAction[];\n      socketStates: SocketState[];\n    };\n\ntype UIAction =\n  | {\n      tag: 'cancel_process';\n    }\n  | {\n      tag: 'confirm_process';\n      socketList: StripAction[];\n      cancel: () => void;\n    }\n  | {\n      tag: 'confirm_results';\n    }\n  | {\n      tag: 'notify_done';\n      success: boolean;\n    }\n  | {\n      tag: 'notify_progress';\n      idx: number;\n      error: string | undefined;\n    };\n\nfunction reducer(state: State, action: UIAction): State {\n  switch (action.tag) {\n    case 'cancel_process':\n      if (state.tag === 'processing') {\n        state.cancel();\n\n        return produce(state, (draft) => {\n          draft.tag === 'processing' && (draft.cancelling = true);\n        });\n      } else if (state.tag === 'done') {\n        return { tag: 'selecting' };\n      }\n      break;\n    case 'confirm_process':\n      if (state.tag === 'selecting') {\n        return {\n          tag: 'processing',\n          cancel: action.cancel,\n          cancelling: false,\n          socketList: action.socketList,\n          socketStates: Array<string>(action.socketList.length).fill('todo'),\n        };\n      }\n      break;\n    case 'confirm_results':\n      if (state.tag === 'done') {\n        return { tag: 'selecting' };\n      }\n      break;\n    case 'notify_done':\n      if (state.tag === 'processing') {\n        if (action.success) {\n          // completed -- show (varying) success\n          return {\n            tag: 'done',\n            socketList: state.socketList,\n            socketStates: state.socketStates,\n          };\n        } else {\n          // cancelled -- go back to selection\n          return { tag: 'selecting' };\n        }\n      }\n      break;\n    case 'notify_progress':\n      if (state.tag === 'processing') {\n        return produce(state, (draft) => {\n          draft.tag === 'processing' && (draft.socketStates[action.idx] = action.error ?? 'ok');\n        });\n      }\n      break;\n  }\n  return state;\n}\n\nexport default function StripSockets() {\n  const dispatch = useThunkDispatch();\n  const [state, stripDispatch] = useReducer(reducer, { tag: 'selecting' });\n  const [selectedSockets, setSelectedSockets] = useState<StripAction[]>([]);\n  const query = useSubscription(stripSocketsQuery$);\n\n  const isChoosing = state.tag === 'selecting';\n\n  const onCancel = () => {\n    stripDispatch({ tag: 'cancel_process' });\n  };\n\n  const onConfirmSockets = useCallback(\n    async (selectedSockets: StripAction[]) => {\n      if (!isChoosing) {\n        return;\n      }\n\n      const [cancelToken, cancel] = withCancel();\n\n      stripDispatch({ tag: 'confirm_process', socketList: selectedSockets, cancel });\n\n      try {\n        await dispatch(\n          doStripSockets(selectedSockets, cancelToken, (idx, error) =>\n            stripDispatch({ tag: 'notify_progress', idx, error }),\n          ),\n        );\n        stripDispatch({ tag: 'notify_done', success: true });\n      } catch {\n        stripDispatch({ tag: 'notify_done', success: false });\n      }\n    },\n    [dispatch, isChoosing],\n  );\n\n  if (!query) {\n    return null;\n  }\n\n  const header = (\n    <div>\n      <h1>\n        {isChoosing ? (\n          t('StripSockets.Choose')\n        ) : state.tag === 'processing' ? (\n          <>\n            <span>\n              <AppIcon icon={refreshIcon} spinning={true} ariaHidden />\n            </span>{' '}\n            {t('StripSockets.Running')}\n          </>\n        ) : (\n          t('StripSockets.Done')\n        )}\n      </h1>\n    </div>\n  );\n\n  let contents, footer;\n  if (state.tag === 'selecting') {\n    contents = <StripSocketsChoose query={query} reportSockets={setSelectedSockets} />;\n\n    footer = (\n      <button\n        type=\"button\"\n        className={styles.insertButton}\n        onClick={() => onConfirmSockets(selectedSockets)}\n        disabled={selectedSockets.length === 0}\n      >\n        <span>\n          <AppIcon icon={faCheckCircle} ariaHidden />{' '}\n          {t('StripSockets.Button', { numSockets: selectedSockets.length })}\n        </span>\n      </button>\n    );\n  } else {\n    // state is processing or done, so show the plug list\n    contents = (\n      <StripSocketsProcess socketList={state.socketList} socketStates={state.socketStates} />\n    );\n    if (state.tag === 'processing') {\n      footer = (\n        <button\n          type=\"button\"\n          className={styles.insertButton}\n          onClick={onCancel}\n          disabled={state.cancelling}\n        >\n          <span>{t('StripSockets.Cancel')}</span>\n        </button>\n      );\n    } else {\n      footer = (\n        <>\n          <button\n            type=\"button\"\n            className={styles.insertButton}\n            onClick={() => stripDispatch({ tag: 'confirm_results' })}\n          >\n            <span>{t('StripSockets.Ok')}</span>\n          </button>\n        </>\n      );\n    }\n  }\n\n  return (\n    <Sheet\n      onClose={() => {\n        onCancel();\n        stripSocketsQuery$.next(undefined);\n      }}\n      header={header}\n      footer={footer}\n      sheetClassName={styles.stripSheet}\n    >\n      {contents}\n    </Sheet>\n  );\n}\n\nfunction StripSocketsProcess({\n  socketList,\n  socketStates,\n}: {\n  socketList: StripAction[];\n  socketStates: SocketState[];\n}) {\n  return (\n    <div className={styles.iconList}>\n      {socketList.map((socket, idx) => {\n        const state = socketStates[idx];\n        const icon = (\n          <div onClick={() => locateItem(socket.item)}>\n            <DefItemIcon itemDef={socket.plugItemDef} />\n          </div>\n        );\n        const failed = state !== 'ok' && state !== 'todo';\n        const key = `${socket.item.index}-${socket.socketIndex}`;\n        const className = clsx('item', styles.plug, {\n          [styles.ok]: state === 'ok',\n          [styles.failed]: failed,\n        });\n        return failed ? (\n          <PressTip minimal key={key} className={className} tooltip={state}>\n            {icon}\n          </PressTip>\n        ) : (\n          <div key={key} className={className}>\n            {icon}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction StripSocketsChoose({\n  query,\n  reportSockets,\n}: {\n  query: string;\n  reportSockets: (sockets: StripAction[]) => void;\n}) {\n  const defs = useD2Definitions()!;\n  const destiny2CoreSettings = useSelector(destiny2CoreSettingsSelector)!;\n  const allItems = useSelector(allItemsSelector);\n  const filterFactory = useSelector(filterFactorySelector);\n  const [activeKinds, setActiveKinds] = useState<SocketKind[]>([]);\n\n  const socketKinds = useMemo(() => {\n    if (!query) {\n      return null;\n    }\n\n    const filterFunc = filterFactory(query);\n    const filteredItems = allItems.filter((i) => i.sockets && filterFunc(i));\n    return collectSocketsToStrip(filteredItems, destiny2CoreSettings, defs);\n  }, [allItems, defs, destiny2CoreSettings, filterFactory, query]);\n\n  useEffect(() => {\n    reportSockets(\n      socketKinds\n        ?.filter((k) => k.items && activeKinds.includes(k.kind))\n        .flatMap((k) => k.items!) || [],\n    );\n  }, [reportSockets, socketKinds, activeKinds]);\n\n  return (\n    socketKinds && (\n      <>\n        {socketKinds.length ? (\n          socketKinds.map((entry) => {\n            const itemCats = [\n              { icon: handCannonIcon, num: entry.numWeapons },\n              { icon: chestArmorItem, num: entry.numArmor },\n              { icon: ghostIcon, num: entry.numOthers },\n            ];\n            return (\n              <SocketKindButton\n                key={entry.kind}\n                name={t(entry.name, { count: entry.numApplicableSockets })}\n                representativeDef={entry.representativePlug}\n                itemCategories={itemCats}\n                selected={activeKinds.includes(entry.kind)}\n                onClick={() => {\n                  if (activeKinds.includes(entry.kind)) {\n                    setActiveKinds(activeKinds.filter((k) => k !== entry.kind));\n                  } else {\n                    setActiveKinds([...activeKinds, entry.kind]);\n                  }\n                }}\n              />\n            );\n          })\n        ) : (\n          <div className={styles.noSocketsMessage}>{t('StripSockets.NoSockets')}</div>\n        )}\n      </>\n    )\n  );\n}\n\nfunction SocketKindButton({\n  name,\n  representativeDef,\n  itemCategories,\n  selected,\n  onClick,\n}: {\n  name: string;\n  representativeDef: DestinyInventoryItemDefinition;\n  itemCategories: { icon: string; num: number }[];\n  selected: boolean;\n  onClick: () => void;\n}) {\n  return (\n    <div\n      className={clsx(styles.socketKindButton, {\n        [styles.selectedButton]: selected,\n      })}\n      onClick={onClick}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <div className=\"item\" title={name}>\n        <DefItemIcon itemDef={representativeDef} />\n      </div>\n      <div className={styles.buttonInfo}>\n        <div\n          className={clsx(styles.buttonTitle, {\n            [styles.selectedTitle]: selected,\n          })}\n        >\n          {name}\n        </div>\n      </div>\n      <div>\n        {itemCategories.map(\n          ({ icon, num }, idx) =>\n            num > 0 && (\n              <React.Fragment key={idx}>\n                <img src={icon} className={styles.itemTypeIcon} /> {num}\n                <br />\n              </React.Fragment>\n            ),\n        )}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\strip-sockets\\strip-sockets-actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\strip-sockets\\strip-sockets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\action-queue.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\app-badge.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\browsers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\cancel.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-empty-function","severity":2,"message":"Unexpected empty method 'checkCanceled'.","line":47,"column":19,"nodeType":"FunctionExpression","messageId":"unexpected","endLine":47,"endColumn":21,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\collections.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\collections.ts","messages":[],"suppressedMessages":[{"ruleId":"no-unreachable-loop","severity":2,"message":"Invalid loop. Its body allows only one iteration.","line":107,"column":3,"nodeType":"ForInStatement","messageId":"invalid","endLine":109,"endColumn":4,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\comparators.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\csv.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\csv.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\d2l-error.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\download.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\empty.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\errors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\functions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\hooks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\intl.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\intl.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\item-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\log.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\measure-memory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\media-queries.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\memoize.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\memoize.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\observable.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\plug-descriptions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\promises.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\promises.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\react.ts","messages":[{"ruleId":"@eslint-react/no-array-index-key","severity":1,"message":"Do not use item index in the array as its key.","line":9,"column":77,"nodeType":"Identifier","messageId":"noArrayIndexKey","endLine":9,"endColumn":78}],"suppressedMessages":[{"ruleId":"@eslint-react/no-clone-element","severity":1,"message":"Using 'cloneElement' is uncommon and can lead to fragile code. Use alternatives instead.","line":9,"column":37,"nodeType":"CallExpression","messageId":"noCloneElement","endLine":9,"endColumn":83,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ReactElement, ReactNode, cloneElement } from 'react';\n\n/** places a divider between each element of arr */\nexport function addDividers<T extends React.ReactNode>(\n  arr: T[],\n  divider: ReactElement,\n): ReactNode[] {\n  // eslint-disable-next-line @eslint-react/no-clone-element\n  return arr.flatMap((e, i) => [i ? cloneElement(divider, { key: `divider-${i}` }) : null, e]);\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\rollAppraiserUtils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\sentry.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\socket-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\system-info.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\temp-container.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\textarea-caret.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .mozInnerScreenX on an `any` value.","line":55,"column":48,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":55,"endColumn":63,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"github/array-foreach","severity":2,"message":"Prefer for...of instead of Array.forEach","line":86,"column":3,"nodeType":"CallExpression","messageId":"preferForOf","endLine":111,"endColumn":5,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":90,"column":24,"nodeType":"CallExpression","messageId":"missingRadix","endLine":90,"endColumn":49,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[2663,2663],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":92,"column":11,"nodeType":"CallExpression","messageId":"missingRadix","endLine":92,"endColumn":40,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[2732,2732],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":93,"column":11,"nodeType":"CallExpression","messageId":"missingRadix","endLine":93,"endColumn":43,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[2777,2777],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":94,"column":11,"nodeType":"CallExpression","messageId":"missingRadix","endLine":94,"endColumn":44,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[2823,2823],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":95,"column":11,"nodeType":"CallExpression","messageId":"missingRadix","endLine":95,"endColumn":47,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[2872,2872],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":96,"column":44,"nodeType":"CallExpression","messageId":"missingRadix","endLine":96,"endColumn":73,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[2946,2946],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prefer-template","severity":2,"message":"Unexpected string concatenation.","line":98,"column":30,"nodeType":"BinaryExpression","messageId":"unexpectedStringConcatenation","endLine":98,"endColumn":57,"fix":{"range":[3015,3042],"text":"`${height - outerHeight  }px`"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unsafe-assignment","severity":2,"message":"Unsafe assignment of an error typed value.","line":109,"column":7,"nodeType":"AssignmentExpression","messageId":"anyAssignment","endLine":109,"endColumn":35,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":115,"column":32,"nodeType":"CallExpression","messageId":"missingRadix","endLine":115,"endColumn":57,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[3551,3551],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":143,"column":27,"nodeType":"CallExpression","messageId":"missingRadix","endLine":143,"endColumn":63,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[4818,4818],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/dot-notation","severity":2,"message":"[\"borderTopWidth\"] is better written in dot notation.","line":143,"column":45,"nodeType":"Literal","messageId":"useDot","endLine":143,"endColumn":61,"fix":{"range":[4800,4818],"text":".borderTopWidth"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":144,"column":29,"nodeType":"CallExpression","messageId":"missingRadix","endLine":144,"endColumn":66,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[4885,4885],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/dot-notation","severity":2,"message":"[\"borderLeftWidth\"] is better written in dot notation.","line":144,"column":47,"nodeType":"Literal","messageId":"useDot","endLine":144,"endColumn":64,"fix":{"range":[4866,4885],"text":".borderLeftWidth"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"radix","severity":2,"message":"Missing radix parameter.","line":145,"column":13,"nodeType":"CallExpression","messageId":"missingRadix","endLine":145,"endColumn":45,"suggestions":[{"messageId":"addRadixParameter10","fix":{"range":[4931,4931],"text":", 10"},"desc":"Add radix parameter `10` for parsing decimal numbers."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/dot-notation","severity":2,"message":"[\"lineHeight\"] is better written in dot notation.","line":145,"column":31,"nodeType":"Literal","messageId":"useDot","endLine":145,"endColumn":43,"fix":{"range":[4917,4931],"text":".lineHeight"},"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\time.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\time.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\undo-redo-history.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\undo-redo-history.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\useWhatChanged.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\util-types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\utils\\version-cache-manager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\Cost.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\Cost.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\Vendor.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\Vendor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\VendorItem.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\VendorItemComponent.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\VendorItems.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\VendorItems.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\Vendors.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\Vendors.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\VendorsMenu.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\VendorsMenu.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\d2-vendors.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\d2-vendors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\focusing-item-outputs.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\hooks.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\ArtifactUnlocks.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\ArtifactUnlocks.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\SingleVendor.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\SingleVendor.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\SingleVendorPage.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\SingleVendorPage.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\SingleVendorSheet.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\SingleVendorSheet.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\SingleVendorSheetContainer.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\single-vendor\\single-vendor-sheet.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\vendors\\vendor-item.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\whats-new\\BungieAlerts.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\whats-new\\BungieAlerts.tsx","messages":[{"ruleId":"@eslint-react/dom/no-dangerously-set-innerhtml","severity":1,"message":"Using 'dangerouslySetInnerHTML' may have security implications.","line":35,"column":14,"nodeType":"JSXAttribute","messageId":"noDangerouslySetInnerhtml","endLine":35,"endColumn":67}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { t } from 'app/i18next-t';\nimport { bungieHelpAccount, bungieHelpLink } from 'app/shell/links';\nimport { bungieAlertsSelector } from 'app/shell/selectors';\nimport { GlobalAlertLevel } from 'bungie-api-ts/core';\nimport { useSelector } from 'react-redux';\nimport ExternalLink from '../d2l-ui/ExternalLink';\nimport styles from './BungieAlerts.m.scss';\n\n// http://destinydevs.github.io/BungieNetPlatform/docs/Enums\nexport const GlobalAlertLevelsToToastLevels = [\n  'info', // Unknown\n  'info', // Blue\n  'warn', // Yellow\n  'error', // Red\n];\n\nconst AlertLevelStyles = {\n  [GlobalAlertLevel.Unknown]: styles.info,\n  [GlobalAlertLevel.Blue]: styles.info,\n  [GlobalAlertLevel.Yellow]: styles.warn,\n  [GlobalAlertLevel.Red]: styles.error,\n};\n\n/**\n * Displays maintenance alerts from Bungie.net.\n */\nexport default function BungieAlerts() {\n  const alerts = useSelector(bungieAlertsSelector);\n\n  return (\n    <div>\n      {alerts.map((alert) => (\n        <div key={alert.AlertKey} className={AlertLevelStyles[alert.AlertLevel]}>\n          <h2>{t('BungieAlert.Title')}</h2>\n          <p dangerouslySetInnerHTML={{ __html: alert.AlertHtml }} />\n          <div>\n            {t('BungieService.Twitter')}{' '}\n            <ExternalLink href={bungieHelpLink}>{bungieHelpAccount}</ExternalLink>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\whats-new\\WhatsNew.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\whats-new\\WhatsNewLink.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\whats-new\\WhatsNewLink.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\whats-new\\versions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\WishListPerkThumb.m.scss.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\WishListPerkThumb.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\actions.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\observers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\reducer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\selectors.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\wishlist-fetch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\wishlist-file.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\wishlist-file.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\app\\wishlists\\wishlists.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\authReturn.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\backup.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .result on an `any` value.","line":19,"column":38,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":19,"endColumn":44,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":2,"message":"Unexpected alert.","line":20,"column":3,"nodeType":"CallExpression","messageId":"unexpected","endLine":20,"endColumn":39,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .result on an `any` value.","line":20,"column":32,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":20,"endColumn":38,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .result on an `any` value.","line":23,"column":26,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":23,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unsafe-member-access","severity":2,"message":"Unsafe member access .result on an `any` value.","line":27,"column":47,"nodeType":"Identifier","messageId":"unsafeMemberExpression","endLine":27,"endColumn":53,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\browsercheck-utils.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\browsercheck.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\bungie-api-ts.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\crafting-enhanced-intrinsics.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\d2-event-info-v2.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\d2-event-info.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\d2-season-info.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\empty-plug-hashes.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\exotics-with-catalysts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\generated-enums.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\missing-source-info.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\objective-richTexts.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\reduced-cost-mod-mappings.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\source-info-v2.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\d2\\source-info.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\font\\d2-font-glyphs.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\data\\font\\d2l-custom-symbols.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\global.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\image.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\locale\\locales.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\md.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\postcss.config.cjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\service-worker.ts","messages":[],"suppressedMessages":[{"ruleId":"spaced-comment","severity":2,"message":"Expected exception block, space or tab after '//' in comment.","line":2,"column":1,"nodeType":"Line","messageId":"expectedExceptionAfter","endLine":2,"endColumn":34,"fix":{"range":[45,45],"text":" "},"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\svg.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\testing\\precache-manifest.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\testing\\test-item-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\testing\\test-utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\src\\testing\\utils\\i18next.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"@typescript-eslint/prefer-ts-expect-error","replacedBy":["@typescript-eslint/ban-ts-comment"],"info":{"deprecatedSince":"7.11.0","replacedBy":[{"rule":{"name":"@typescript-eslint/ban-ts-comment","url":"https://typescript-eslint.io/rules/ban-ts-comment"}}],"url":"https://github.com/typescript-eslint/typescript-eslint/pull/9081"}},{"ruleId":"no-return-await","replacedBy":[],"info":{"message":"The original assumption of the rule no longer holds true because of engine optimization.","deprecatedSince":"8.46.0","availableUntil":null,"replacedBy":[]}},{"ruleId":"spaced-comment","replacedBy":["@stylistic/spaced-comment"],"info":{"message":"Formatting rules are being moved out of ESLint core.","url":"https://eslint.org/blog/2023/10/deprecating-formatting-rules/","deprecatedSince":"8.53.0","availableUntil":"10.0.0","replacedBy":[{"message":"ESLint Stylistic now maintains deprecated stylistic core rules.","url":"https://eslint.style/guide/migration","plugin":{"name":"@stylistic/eslint-plugin","url":"https://eslint.style"},"rule":{"name":"spaced-comment","url":"https://eslint.style/rules/spaced-comment"}}]}}]},{"filePath":"C:\\coding_projects\\D2Locker\\verify-update.js","messages":[{"ruleId":null,"fatal":false,"severity":1,"message":"File ignored because of a matching ignore pattern. Use \"--no-ignore\" to disable file ignore settings or use \"--no-warn-ignored\" to suppress this warning.","nodeType":null}],"suppressedMessages":[],"errorCount":0,"warningCount":1,"fatalErrorCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]